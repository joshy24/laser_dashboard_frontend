{"version":3,"sources":["logo.svg","utils/Utils.js","components/Sidebar.js","components/LocationSideBar.js","components/LatestItem.js","components/Latest.js","App.js","Laser.js","serviceWorker.js","index.js","emergency_with_circle.png","call_with_circle.png","emergency.png","call.png"],"names":["module","exports","__webpack_require__","p","Util","str","moment","utc","format","arr","sort","a","b","Date","created","utils","Utils","Sidebar","props","react_default","createElement","className","onClick","e","closeSidebar","getTime","emergency","full_name","emergency_numbers","length","map","item","index","key","email","phone_number","device","full_address","sub_admin_address","reasons","getReasons","LocationSidebar","location","reason","style","background","border","LatestItem","itemClicked","getColor","laser_type","color","textAlign","styling","width","height","Latest","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","preventDefault","latestClicked","_this2","react_scroll_to_bottom_lib_default","latest","_id","Component","mapStyle","dateStyle","zIndex","marginLeft","marginRight","padding","controls_style","today","toISOString","instance","axios","create","baseURL","timeout","headers","Accept","App","_this$state","locations","emergencies","filtered_locations","filtered_emergencies","side_bar_open","location_side_bar_open","selected_emergency","center","lat","lng","selected_call","defineProperty","closeSideBar","onCallsChanged","onEmergenciesChanged","onDateChange","onCalendarOpen","year","split","setState","latitude","longitude","zoom","show_red_circle","show_blue_circle","clicked_marker_id","selected_location","d","date","post","then","response","data","catch","error","console","log","event","target","value","name","emer","includes","toLowerCase","push","_this3","loc","dist","onLocationClicked","title","position","icon","url","blue_circle","call_icon","_this4","onEmergencyClicked","red_circle","emergency_icon","mapProps","_this5","socket","socketIOClient","on","i","sortDates","show_location_side_bar","show_side_bar","Latest_Latest","entry_default","maxDate","onChange","id","google","onReady","fetchPlaces","initialCenter","getLocationsMarkers","getEmergenciesMarkers","GoogleApiWrapper","apiKey","Laser","react_router_dom","react_router","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","src_Laser","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.993d4eef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import moment from 'moment';\r\n\r\nexport default class Util{\r\n    getDate(str){\r\n        var date = moment(str);\r\n        var dateComponent = date.utc().format('YYYY-MM-DD');\r\n\r\n        return dateComponent;\r\n    }\r\n\r\n    getTime(str){\r\n        var date = moment(str);\r\n        var timeComponent = date.utc().format('HH:mm:ss');\r\n\r\n        return timeComponent;\r\n    }\r\n\r\n    sortDates(arr){\r\n        arr.sort(function compare(a, b) {\r\n            var dateA = new Date(a.created);\r\n            var dateB = new Date(b.created);\r\n            return dateA - dateB;\r\n        });\r\n          \r\n        return arr;\r\n    }\r\n}","\r\nimport React from 'react';\r\n\r\nimport Utils from '../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nexport default function Sidebar(props){\r\n    return <div className=\"laser-side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeSidebar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-red-text\"><b>Emergency Location Details</b></h4> \r\n                <br/>\r\n                <h5><b>Time</b> - {utils.getTime(props.emergency.created)}</h5>\r\n                <br/>\r\n                <h5><b>Persons Name</b> - {props.emergency.full_name}</h5>\r\n                <br/>\r\n                <h5><b>Person's Emergency Contacts</b> - {(props.emergency.emergency_numbers && props.emergency.emergency_numbers.length>0) ? ParseContacts(props.emergency.emergency_numbers) : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Email Address</b> - {props.emergency.email ? props.emergency.email : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.emergency.phone_number ? props.emergency.phone_number : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Device</b> - {props.emergency.device ? props.emergency.device : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Emergency Full Address</b> - {props.emergency.full_address ? props.emergency.full_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Emergency Admin Address</b> - {props.emergency.sub_admin_address ? props.emergency.sub_admin_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Reason For Emergency</b> - {props.emergency.reasons ? getReasons(props.emergency.reasons) : \"\"}</h5>\r\n           </div>\r\n}\r\n\r\nfunction ParseContacts(arr){\r\n    return arr.map((item,index) => {\r\n        return <p key={index}>{item}</p>\r\n    })\r\n}\r\n\r\nfunction getReasons(reasons){\r\n    switch(reasons.length){\r\n        case 0:\r\n          return \"\";\r\n        case 1:\r\n          return reasons[0]+\" issue\";\r\n        case 2:\r\n          return reasons[0] +\" issue, \" +reasons[1] +\" issue\";\r\n        case 3:\r\n          return reasons[0] +\" issue, \" +reasons[1] +\" issue, \" +reasons[2] +\" issue\";\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Utils from '../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nexport default function LocationSidebar(props){\r\n    return <div className=\"laser-side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeSidebar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-blue-text\"><b>Call Location Details</b></h4> \r\n                <br/>\r\n                <h5><b>Time</b> - {utils.getTime(props.location.created)}</h5>\r\n                <br/>\r\n                <h5><b>Persons Name</b> - {props.location.full_name}</h5>\r\n                <br/>\r\n                <h5><b>Email Address</b> - {props.location.email ? props.location.email : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.location.phone_number ? props.location.phone_number : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Call Full Address</b> - {props.location.full_address ? props.location.full_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Call Admin Address</b> - {props.location.sub_admin_address ? props.location.sub_admin_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Reason For Call</b> - {props.location.reason ? props.location.reason : \"\"}</h5>\r\n           </div>\r\n}\r\n","import React from 'react';\r\n\r\nimport Utils from '../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nconst style = {\r\n    background: \"rgba(0,0,0,0)\",\r\n    border: \"0px solid #000000\"\r\n}\r\n\r\nexport default function LatestItem(props){\r\n    return <button className=\"laserItem\" style={style} onClick={e => props.itemClicked(e, props.item)}>\r\n                <h5 style={getColor(props.item.laser_type)}>{props.item.full_name} - {utils.getTime(props.item.created)} - {props.item.sub_admin_address}</h5>\r\n           </button>\r\n}\r\n\r\nfunction getColor(laser_type){\r\n    switch(laser_type){\r\n        case \"emergency\":\r\n            return {\r\n                color: \"#E74C3C\",\r\n                textAlign: \"left\"\r\n            }\r\n        case \"call\":\r\n            return {\r\n                color: \"#3498DB\",\r\n                textAlign: \"left\"\r\n            }\r\n        default:\r\n            return {\r\n                color: \"#000000\",\r\n                textAlign: \"left\"\r\n            }\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport LatestItem from './LatestItem';\r\n\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\nconst styling = {\r\n    width: \"380px\",\r\n    height: \"400px\"\r\n}\r\n\r\nexport default class Latest extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state= {\r\n\r\n        }\r\n\r\n\r\n        this.itemClicked = this.itemClicked.bind(this);\r\n    }\r\n\r\n    itemClicked(e, item){\r\n        e.preventDefault();\r\n        this.props.latestClicked(item);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-latest-div laser-shadow\">\r\n                <ScrollToBottom style={styling}>\r\n                    {\r\n                        this.props.latest.map(item => {\r\n                            return <LatestItem key={item._id} itemClicked={this.itemClicked} item={item}/>\r\n                        })\r\n                    }\r\n                </ScrollToBottom>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport logo from './logo.svg';\r\nimport red_circle from './emergency_with_circle.png';\r\nimport blue_circle from './call_with_circle.png';\r\nimport emergency_icon from './emergency.png';\r\nimport call_icon from './call.png';\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport Sidebar from './components/Sidebar';\r\nimport LocationSidebar from './components/LocationSideBar';\r\nimport Latest from './components/Latest';\r\nimport Utils from './utils/Utils';\r\n\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport './App.css';\r\n\r\nimport axios from 'axios';\r\n\r\nconst utils = new Utils();\r\n\r\nconst mapStyle = {\r\n  height: '100vh', \r\n  width: '100%'\r\n}\r\n\r\nconst dateStyle = {\r\n   color: \"#111111\",\r\n   border: \"1px solid #FFFFFF\",\r\n   zIndex: \"6000\",\r\n   marginLeft:\"8px\",\r\n   marginRight: \"8px\",\r\n   padding: \"8px\"\r\n}\r\n\r\nconst controls_style = {\r\n  marginLeft:\"8px\",\r\n  marginRight: \"8px\"\r\n}\r\n\r\nconst socket_io_url = 'http://18.195.71.164';\r\n//const socket_io_url = 'http://localhost:3077';\r\n\r\nlet today = new Date().toISOString();\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'http://18.195.71.164',\r\n  //baseURL: 'http://localhost:3077',\r\n  timeout: 15000,\r\n  headers: {'Accept': 'application/json;q=0.9,*/*;q=0.8'}\r\n});\r\n\r\nconst locations_url = \"/api/getLocations\";\r\nconst emergencies_url = \"/api/getEmergencies\";\r\n\r\nclass App extends Component{\r\n\r\n  constructor(props){\r\n     super(props);\r\n\r\n     this.state = {\r\n      latest: [],\r\n      locations: [], \r\n      emergencies: [], \r\n      filtered_locations: [],\r\n      filtered_emergencies: [],\r\n      side_bar_open: false, \r\n      location_side_bar_open: false, \r\n      selected_emergency: {}, \r\n      center: {lat: 6.5244,lng: 3.3792}, \r\n      selected_call:\"Calls (All)\", \r\n      selected_emergency:\"Emergencies (All)\",\r\n      zoom : 11,\r\n      show_red_circle: false,\r\n      show_blue_circle: false,\r\n      clicked_marker_id: \"\",\r\n\r\n      date: new Date()\r\n     }\r\n     \r\n     this.closeSideBar = this.closeSideBar.bind(this);\r\n     this.onCallsChanged = this.onCallsChanged.bind(this);\r\n     this.onEmergenciesChanged = this.onEmergenciesChanged.bind(this);\r\n     this.onDateChange = this.onDateChange.bind(this);\r\n     this.onCalendarOpen = this.onCalendarOpen.bind(this);\r\n     this.latestClicked = this.latestClicked.bind(this);\r\n\r\n     var year = today.split(/T(.+)/)[0];\r\n\r\n     year = year+\"T00:00:00.000Z\";\r\n\r\n     today = new Date(year);\r\n  }\r\n\r\n  latestClicked(item){\r\n    switch(item.laser_type){\r\n      case \"emergency\":\r\n        this.setState({\r\n          selected_emergency: item,\r\n          side_bar_open: true,\r\n          location_side_bar_open: false,\r\n          center: {\r\n            lat: item.latitude,\r\n            lng: item.longitude\r\n          },\r\n          zoom: 19,\r\n          show_red_circle: true,\r\n          show_blue_circle: false,\r\n          clicked_marker_id: item._id\r\n        })\r\n        break;\r\n      case \"call\":\r\n          this.setState({\r\n            selected_location: item,\r\n            side_bar_open: false,\r\n            location_side_bar_open: true,\r\n            center: {\r\n              lat: item.latitude,\r\n              lng: item.longitude\r\n            },\r\n            zoom: 19,\r\n            show_red_circle: false,\r\n            show_blue_circle: true,\r\n            clicked_marker_id: item._id\r\n          })\r\n          break;\r\n    }\r\n  }\r\n\r\n  onCalendarOpen(){\r\n      this.setState({\r\n        side_bar_open: false, \r\n        location_side_bar_open: false\r\n      })\r\n  }\r\n\r\n  onDateChange(d){\r\n     this.setState({\r\n        date: d,\r\n        show_red_circle: false,\r\n        show_blue_circle: false,\r\n        clicked_marker_id: \"\",\r\n        selected_call:\"Calls (All)\", \r\n        selected_emergency:\"Emergencies (All)\"\r\n     })\r\n\r\n     instance.post(locations_url,{date:d})\r\n        .then(response => {\r\n            if(response&&response.data&&response.data.locations){\r\n              this.setState({\r\n                locations: response.data.locations,\r\n                filtered_locations: response.data.locations\r\n              })\r\n            }\r\n            else{\r\n              this.setState({\r\n                locations: [],\r\n                filtered_locations: []\r\n              })\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log({error})\r\n        })\r\n\r\n    instance.post(emergencies_url,{date:d})\r\n        .then(response => {\r\n            if(response&&response.data&&response.data.emergencies){\r\n               this.setState({\r\n                  emergencies: response.data.emergencies,\r\n                  filtered_emergencies: response.data.emergencies\r\n               })\r\n            }\r\n            else{\r\n              this.setState({\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n             })\r\n            }\r\n        })\r\n        .catch(error => {\r\n          console.log({error})\r\n        })\r\n\r\n  }\r\n\r\n  onCallsChanged(event){\r\n      const target = event.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n\r\n      let arr = [];\r\n      if(this.state.locations.length>0){\r\n          if(value===\"Calls (All)\"){\r\n            this.setState(state => ({\r\n              filtered_locations: state.locations,\r\n              side_bar_open: false, \r\n              location_side_bar_open: false,\r\n              show_blue_circle: false\r\n            }))\r\n          }\r\n          else if(value===\"None\"){\r\n            this.setState({\r\n              filtered_locations: [],\r\n              side_bar_open: false, \r\n              location_side_bar_open: false,\r\n              show_blue_circle: false\r\n            })\r\n          }\r\n          else{\r\n            this.state.locations.map(emer => {\r\n              if(emer.reason.includes(value.toLowerCase())){\r\n                arr.push(emer)\r\n              }\r\n            })\r\n            \r\n            if(arr.length>0){\r\n              this.setState({\r\n                filtered_locations: arr,\r\n                side_bar_open: false, \r\n                location_side_bar_open: false,\r\n                show_blue_circle: false\r\n              })\r\n            }\r\n            else{\r\n              //show message that there are no locations found for that parameter\r\n      \r\n              this.setState({\r\n                  filtered_locations:[],\r\n                  selected_call:\"Calls (All)\",\r\n                  side_bar_open: false, \r\n                  location_side_bar_open: false,\r\n                  show_blue_circle: false\r\n              })\r\n            }\r\n          }\r\n      }\r\n  }\r\n\r\n  onEmergenciesChanged(event){\r\n      const target = event.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n\r\n      let arr = [];\r\n      if(this.state.emergencies.length>0){\r\n          if(value===\"Emergencies (All)\"){\r\n            this.setState(state => ({\r\n              filtered_emergencies: state.emergencies,\r\n              side_bar_open: false, \r\n              location_side_bar_open: false,\r\n              show_red_circle: false\r\n            }))\r\n          }\r\n          else if(value===\"None\"){\r\n            this.setState({\r\n              filtered_emergencies:[],\r\n              side_bar_open: false, \r\n              location_side_bar_open: false,\r\n              show_red_circle: false\r\n            })\r\n          }\r\n          else{\r\n            this.state.emergencies.map(emer => {\r\n              if(emer.reasons&&emer.reasons.length>0){\r\n                emer.reasons.map(reason => {\r\n                    if(value.toLowerCase().includes(reason)){\r\n                        arr.push(emer)\r\n                    }\r\n                })\r\n              }\r\n            })\r\n      \r\n            if(arr.length>0){\r\n              this.setState({\r\n                filtered_emergencies:arr,\r\n                side_bar_open: false, \r\n                location_side_bar_open: false,\r\n                show_red_circle: false\r\n              })\r\n            }\r\n            else{\r\n              //show message that there are no emregencies found for that parameter\r\n      \r\n              this.setState({\r\n                  filtered_emergencies: [],\r\n                  selected_emergency:\"Emergencies (All)\",\r\n                  side_bar_open: false, \r\n                  location_side_bar_open: false,\r\n                  show_red_circle: false\r\n              })\r\n            }\r\n          }\r\n      }    \r\n  }\r\n\r\n  onLocationClicked(location,e){\r\n    this.setState({\r\n      selected_location: location,\r\n      side_bar_open: false,\r\n      location_side_bar_open: true,\r\n      center: {\r\n         lat: location.latitude,\r\n         lng: location.longitude\r\n      },\r\n      zoom: 19,\r\n      show_red_circle: false,\r\n      show_blue_circle: true,\r\n      clicked_marker_id: location._id\r\n    })\r\n  }\r\n\r\n  onEmergencyClicked(emergency,e){\r\n    this.setState({\r\n       selected_emergency: emergency,\r\n       side_bar_open: true,\r\n       location_side_bar_open: false,\r\n       center: {\r\n          lat: emergency.latitude,\r\n          lng: emergency.longitude\r\n       },\r\n       zoom: 19,\r\n       show_red_circle: true,\r\n       show_blue_circle: false,\r\n       clicked_marker_id: emergency._id\r\n    })\r\n }\r\n\r\n  getLocationsMarkers(){\r\n    let locations_ui;\r\n\r\n    if(this.state.filtered_locations.length>0){\r\n      locations_ui = this.state.filtered_locations.map(loc => {\r\n        return  <Marker key={loc._id} onClick={e => this.onLocationClicked(loc,e)}\r\n                  name={loc.reason} \r\n                  title={loc.full_name}\r\n                  position={{lat: loc.latitude, lng: loc.longitude}}\r\n                  icon={{\r\n                    url: (this.state.clicked_marker_id===loc._id) ? blue_circle : call_icon\r\n                  }}/> \r\n      })\r\n    }\r\n    else{\r\n      locations_ui = \"\";\r\n    }\r\n     \r\n    return locations_ui;\r\n  }\r\n\r\n  getEmergenciesMarkers(){\r\n    let emergencies_ui;\r\n\r\n    if(this.state.filtered_emergencies.length>0){\r\n        emergencies_ui = this.state.filtered_emergencies.map(emer => {\r\n          return <Marker key={emer._id} onClick={e => this.onEmergencyClicked(emer,e)}\r\n                    name={emer.reasons[0]} \r\n                    title={emer.full_name}\r\n                    position={{lat: emer.latitude, lng: emer.longitude}}\r\n                    icon={{\r\n                      url: (this.state.clicked_marker_id===emer._id) ? red_circle : emergency_icon\r\n                    }}/>\r\n        })\r\n    }\r\n    else{\r\n        emergencies_ui = \"\";\r\n    }\r\n     \r\n    return emergencies_ui;\r\n\r\n  }\r\n\r\n  closeSideBar(e){\r\n    this.setState({\r\n       side_bar_open: false,\r\n       location_side_bar_open: false,\r\n       selected_location: {},\r\n       selected_emergency: {},\r\n       clicked_marker_id: \"\"\r\n    })\r\n  }\r\n\r\n  fetchPlaces(mapProps, map) {\r\n    \r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    const socket = socketIOClient(socket_io_url);\r\n\r\n    socket.on(\"connect\", \r\n      () => console.log(\"connected to socket io\")\r\n    );\r\n    //Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\r\n    socket.on(\"emergency\", \r\n      data => {\r\n         if(data){\r\n             this.setState(state => {\r\n              let arr = state.emergencies;\r\n              let lat = state.latest;\r\n              \r\n              lat.push(data);\r\n              arr.push(data)\r\n\r\n              return {\r\n                  latest: lat,\r\n                  clicked_marker_id: data._id,\r\n                  zoom: 18,\r\n                  emergencies: arr,\r\n                  center: {\r\n                    lat: data.latitude,\r\n                    lng: data.longitude\r\n                 }\r\n              }\r\n            })\r\n         }\r\n      }\r\n    );\r\n\r\n    socket.on(\"call\", \r\n      data => {\r\n        if(data){\r\n            this.setState(state => {\r\n              let arr = state.locations;\r\n              let lat = state.latest;\r\n              \r\n              lat.push(data);\r\n              arr.push(data)\r\n\r\n              return {\r\n                  latest: lat,\r\n                  clicked_marker_id: data._id,\r\n                  zoom: 18,\r\n                  locations: arr,\r\n                  center: {\r\n                    lat: data.latitude,\r\n                    lng: data.longitude\r\n                 }\r\n              }\r\n          })\r\n        }\r\n      }\r\n    );\r\n\r\n    instance.post(locations_url,{date: today})\r\n        .then(response => {\r\n            if(response&&response.data&&response.data.locations&&response.data.locations.length>0){\r\n              this.setState(state => {\r\n                  var loc = state.latest;\r\n\r\n                  for(var i = 0; i<response.data.locations.length; i++){\r\n                      loc.push(response.data.locations[i]);\r\n                  }\r\n\r\n                  loc = utils.sortDates(loc);\r\n\r\n                  return {\r\n                    latest : loc,\r\n                    locations: response.data.locations,\r\n                    filtered_locations: response.data.locations\r\n                  }\r\n              })\r\n            }\r\n            else{\r\n              this.setState({\r\n                locations: [],\r\n                filtered_locations: []\r\n              })\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log({error})\r\n        })\r\n\r\n    instance.post(emergencies_url,{date: today})\r\n        .then(response => {\r\n            if(response&&response.data&&response.data.emergencies&&response.data.emergencies.length>0){\r\n               this.setState(state => {\r\n                  var loc = state.latest;\r\n\r\n                  for(var i = 0; i<response.data.emergencies.length; i++){\r\n                      loc.push(response.data.emergencies[i]);\r\n                  }\r\n\r\n                  loc = utils.sortDates(loc);\r\n\r\n                  return {\r\n                      latest : loc,\r\n                      emergencies: response.data.emergencies,\r\n                      filtered_emergencies: response.data.emergencies\r\n                  }\r\n               })\r\n            }\r\n            else{\r\n              this.setState({\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n             })\r\n            }\r\n        })\r\n        .catch(error => {\r\n          console.log({error})\r\n        })\r\n  }\r\n\r\n  render(){\r\n\r\n    let show_location_side_bar;\r\n    \r\n    if(this.state.location_side_bar_open){\r\n      show_location_side_bar = <LocationSidebar closeSidebar={this.closeSideBar} location={this.state.selected_location}/>\r\n    }\r\n    else{\r\n      show_location_side_bar = \"\";\r\n    }\r\n\r\n    let show_side_bar;\r\n    \r\n    if(this.state.side_bar_open){\r\n      show_side_bar = <Sidebar closeSidebar={this.closeSideBar} emergency={this.state.selected_emergency}/>\r\n    }\r\n    else{\r\n      show_side_bar = \"\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"laser-parent-div\" style={mapStyle}>\r\n          <Latest latest={this.state.latest} latestClicked={this.latestClicked}/>\r\n          {show_location_side_bar}\r\n          {show_side_bar}\r\n          <div className=\"laser-top-panel\">\r\n             <h4 className=\"laser-inline\">Laser Emergency Admin Platform</h4>\r\n             <div className=\"laser-controls laser-inline\">\r\n                \r\n                <div className=\"laser-inline\" style={dateStyle}>\r\n                  <DatePicker\r\n                    onCalendarOpen={this.onCalendarOpen}\r\n                    maxDate={new Date()}\r\n                    style={dateStyle}\r\n                    onChange={this.onDateChange}\r\n                    value={this.state.date}/>\r\n                </div>  \r\n\r\n                <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"calls\" name=\"calls\" value={this.selected_call} onChange={this.onCallsChanged}>\r\n                    <option>Calls (All)</option>\r\n                    <option>Emergency Management(LASEMA)</option>\r\n                    <option>Police</option>\r\n                    <option>Distress</option>\r\n                    <option>Environmental and Special Offences Task Force</option>\r\n                    <option>Fire / Safety Services</option>\r\n                    <option>Environmental / Noise Pollution</option>\r\n                    <option>Broken Pipe / Water Leakage</option>\r\n                    <option>Pothole / Collapsed Road</option>\r\n                    <option>None</option>\r\n                </select>\r\n                \r\n                <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"emergencies\" name=\"emergencies\" value={this.selected_call} onChange={this.onEmergenciesChanged}>\r\n                    <option>Emergencies (All)</option>\r\n                    <option>Police Cases</option>\r\n                    <option>Hospital Cases</option>\r\n                    <option>Fire Cases</option>\r\n                    <option>None</option>\r\n                </select>\r\n                \r\n             </div>\r\n          </div>\r\n          <Map google={this.props.google} \r\n              style={mapStyle}\r\n              onReady={this.fetchPlaces}\r\n              initialCenter={this.state.center}\r\n              center={this.state.center}\r\n              zoom={this.state.zoom}>\r\n    \r\n            {this.getLocationsMarkers()}\r\n            {this.getEmergenciesMarkers()}\r\n\r\n          </Map>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: ('AIzaSyADNxHcgsHDyx_OSbqxBg5xB5lV2YJDcKI')\r\n})(App)\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nfunction Laser(){\r\n    return (\r\n        <Router>\r\n            <Route path=\"/\" exact component={App} />\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Laser;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Laser from './Laser';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Laser />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/emergency_with_circle.d3c347cf.png\";","module.exports = __webpack_public_path__ + \"static/media/call_with_circle.be8584e2.png\";","module.exports = __webpack_public_path__ + \"static/media/emergency.5372e70f.png\";","module.exports = __webpack_public_path__ + \"static/media/call.8f7505e8.png\";"],"sourceRoot":""}