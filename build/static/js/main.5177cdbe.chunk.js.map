{"version":3,"sources":["icons/emergency_with_circle.gif","icons/call_with_circle.gif","icons/emergency.gif","icons/call.gif","sounds/alert.mp3","icons/burger_menu.png","logo.svg","icons/car_test.png","utils/Utils.js","auth/AuthHelperMethods.js","components/Sidebar.js","components/Text.js","components/Action.js","components/AgentDetails.js","components/LocationSideBar.js","components/TopPanel.js","components/LatestItem.js","components/Latest.js","components/RouteStatus.js","components/ConfirmAction.js","utils/Persistence.js","api/Api.js","App.js","components/agents/Agent.js","components/Loader.js","components/agents/AddAgent.js","components/agents/Agents.js","components/agents/Department.js","components/agents/AddDepartment.js","components/agents/Departments.js","components/Login.js","Laser.js","serviceWorker.js","index.js","icons/vector/police_car.svg","icons/vector/police_car_enroute.svg","icons/vector/fire_truck.svg","icons/vector/fire_truck_enroute.svg","icons/vector/ambulance.svg","icons/vector/ambulance_enroute.svg"],"names":["module","exports","__webpack_require__","p","Util","str","moment","utc","format","arr","sort","a","b","Date","created","AuthHelperMethods","login","username","password","_this","axios","then","res","setToken","data","token","setPriviledge","priviledge","catch","err","loggedIn","getToken","isTokenExpired","decode","exp","now","console","log","idToken","localStorage","setItem","getItem","logout","removeItem","getConfirm","answer","getPriviledge","url","headers","Accept","Content-Type","method","baseURL","timeout","_checkStatus","response","status","error","Error","statusText","utils","Utils","Auth","Sidebar","props","react_default","createElement","className","onClick","e","closeSidebar","startMonitoring","emergency","resolve","is_trackable","getTime","full_name","emergency_numbers","length","map","item","index","key","email","phone_number","device","full_address","sub_admin_address","reasons","getReasons","style","width","Text","closeAction","text","Action","action","message","getText","background","border","color","padding","borderRadius","style_remove_btn","AgentDetails","closeAgentSideBar","agent","firstname","lastname","department","is_on_route","removeAgentFromRoute","user","addAgentToMonitoring","LocationSidebar","location","reason","dateStyle","zIndex","marginLeft","marginRight","controls_style","TopPanel","this","src","burger_menu","height","getAllAgentsLocation","entry_default","onCalendarOpen","maxDate","onChange","onDateChange","value","date","id","name","selected_call","onCallsChanged","selected_emergency","onEmergenciesChanged","Component","LatestItem","itemClicked","getColor","laser_type","textAlign","styling","Latest","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","preventDefault","latestClicked","_this2","react_scroll_to_bottom_lib_default","latest","_id","box_style","margin","float","OrderStatus","react_modal_lib_default","isOpen","overlayClassName","contentLabel","closeRouteResponse","route_response","removeAgentFromRouteAndCloseRouteResponse","ReactModal","setAppElement","btn_style_left","btn_style_right","ConfirmAction","yesClicked","noClicked","Persistence","selected_agents","JSON","stringify","parse","tracked_users","Axios","getLocations","getEmergencies","createAgent","getDepartments","persistence","mapStyle","todays_date","toISOString","today","App","showConfirm","locations","emergencies","filtered_locations","filtered_emergencies","side_bar_open","agent_side_bar_open","location_side_bar_open","clicked_user","clicked_agent","center","lat","lng","zoom","show_red_circle","show_blue_circle","clicked_marker_id","play_sound","channels_list","laser_agents","route_responses_from_agents","action_message","tracked_area","pubnub","PubNubReact","publishKey","subscribeKey","init","closeSideBar","onAgentClicked","getAgentIcon","subscribeAndGetAllAgentsLocation","handleSongFinishedPlaying","getLocationsDate","getEmergenciesDate","getLatestEmergencies","getLatestLocations","getSelectedAgentsIds","setSelectedAgentsFromIds","resolveCall","resolveEmergency","hideConfirm","showConfirmResolveEmergency","showConfirmResolveLocation","year","split","setState","publish","channel","sendByPost","storeInHistory","splice","indexOf","saveTrackedUsers","_this3","pn_gcm","notification_body","agents","list","new_selected_agents","age","new_list","found_agent","find","new_found_agent","assign","unsubscribe","channels","saveSelectedAgents","_this4","array","_this5","latitude","longitude","push","subscribe","_this6","setHours","getHours","event","target","emer","includes","toLowerCase","_this7","loc","dist","onLocationClicked","title","position","icon","blue_circle","call_icon","_this8","onEmergencyClicked","red_circle","emergency_icon","_this9","i","anchor","google","maps","Point","scaledSize","Size","bearing","police_car_enroute","police_car","fire_car_enroute","fire_car","ambulance_enroute","ambulance","selected_location","mapProps","ids","found_agent_id","sel","_this10","persisted_agents","getSelectedAgents","persisted_tracked_users","getTrackedUsers","addListener","st","category","tracked_user_id","user_id","laser_agent","users","userMetadata","forEach","found_agent_on_route_possibly","socket","socketIOClient","on","attempt","API","self","sortDates","_this11","_this12","sound","show_location_side_bar","show_side_bar","react_sound_lib_default","alert","playStatus","Sound","PLAYING","playFromPosition","onLoading","handleSongLoading","onPlaying","handleSongPlaying","onFinishedPlaying","Latest_Latest","TopPanel_TopPanel","onReady","fetchPlaces","initialCenter","getLocationsMarkers","getEmergenciesMarkers","getAgentMarkers","GoogleApiWrapper","apiKey","Agent","getDate","deleteClicked","editClicked","override","display","Loader","isLoading","BarLoader_default","css","sizeUnit","size","loading","Agents","password_again","submitClicked","onFieldChanged","showLoading","hideLoading","closeModalGetAgents","departments","type","checked","defineProperty","htmlFor","required","autoComplete","placeholder","dep","closeModal","agents_filter","selected_department","selected_agent","showAddAgent","showDeleteAgent","showEditAgent","confirmMessage","getAgents","getAgentsDepartment","deleteAgent","onDepartmentChanged","filter","deps","react_router_dom","to","AddAgent_Agents","Department","AddDepartment","saveDepartment","Departments","showAddDepartment","showDeleteDepartment","showEditDepartment","deleteDepartment","AddDepartment_AddDepartment","zero_margin","marginBottom","marginTop","Login","history","Laser","isLogin","react_router","path","exact","render","src_App_0","Agents_Agents","Departments_Departments","Login_Login","Boolean","window","hostname","match","ReactDOM","src_Laser","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5177cdbe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/emergency_with_circle.0153b7ea.gif\";","module.exports = __webpack_public_path__ + \"static/media/call_with_circle.34c87478.gif\";","module.exports = __webpack_public_path__ + \"static/media/emergency.445ccffb.gif\";","module.exports = __webpack_public_path__ + \"static/media/call.37865c67.gif\";","module.exports = __webpack_public_path__ + \"static/media/alert.77e4ae16.mp3\";","module.exports = __webpack_public_path__ + \"static/media/burger_menu.f128647b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/car_test.4b63a07a.png\";","import moment from 'moment';\r\n\r\nexport default class Util{\r\n    getDate(str){\r\n        var date = moment(str);\r\n        var dateComponent = date.utc().format('YYYY - MM - DD');\r\n\r\n        return dateComponent;\r\n    }\r\n\r\n    getTime(str){\r\n        var date = moment(str);\r\n        var timeComponent = date.utc().format('HH:mm:ss');\r\n\r\n        return timeComponent;\r\n    }\r\n\r\n    sortDates(arr){\r\n        arr.sort(function compare(a, b) {\r\n            var dateA = new Date(a.created);\r\n            var dateB = new Date(b.created);\r\n            return dateA - dateB;\r\n        });\r\n          \r\n        return arr;\r\n    }\r\n\r\n}","import axios from 'axios';\r\n\r\nimport decode from 'jwt-decode'\r\n\r\nconst login_url = '/login'\r\n\r\nexport default class AuthHelperMethods{\r\n\r\n    login = (username, password) => {\r\n        return  this.axios(login_url, {username, password})\r\n                    .then(res => {\r\n                        this.setToken(res.data.token);\r\n                        this.setPriviledge(res.data.priviledge);\r\n                        return res;\r\n                    })\r\n                    .catch(err => {\r\n                        return \"error\";\r\n                    })\r\n    }\r\n\r\n    loggedIn = () => {\r\n        // Checks if there is a saved token and it's still valid\r\n        const token = this.getToken(); // Getting token from localstorage\r\n        return !!token && !this.isTokenExpired(token); // handwaiving here\r\n    };\r\n\r\n    isTokenExpired = token => {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.now() / 1000) {\r\n            // Checking if token is expired.\r\n            return true;\r\n            } else return false;\r\n        } catch (err) {\r\n            console.log(\"expired check failed! Line 42: AuthService.js\");\r\n            return false;\r\n        }\r\n    };\r\n\r\n    setToken = idToken => {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem(\"id_token\", idToken);\r\n    };\r\n\r\n    getToken = () => {\r\n        // Retrieves the user token from localStorage\r\n        return localStorage.getItem(\"id_token\");\r\n    };\r\n\r\n    logout = () => {\r\n        // Clear user token and profile data from localStorage\r\n        localStorage.removeItem(\"id_token\");\r\n    };\r\n\r\n    getConfirm = () => {\r\n        // Using jwt-decode npm package to decode the token\r\n        let answer = decode(this.getToken());\r\n        console.log(\"Recieved answer!\");\r\n        return answer;\r\n    };\r\n\r\n    setPriviledge = priviledge => {\r\n        localStorage.setItem(\"priviledge\", priviledge);\r\n    }\r\n\r\n    getPriviledge = () => {\r\n        return localStorage.getItem(\"priviledge\");\r\n    }\r\n    \r\n    axios = (url, data) => {\r\n        // performs api calls sending the required authentication headers\r\n        const headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        };\r\n\r\n        // Setting Authorization header\r\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\r\n        if (this.loggedIn()) {\r\n            headers[\"Authorization\"] = \"Bearer:\" + this.getToken();\r\n        }\r\n\r\n        return axios({\r\n            url:url,\r\n            method: \"post\",\r\n            data: data, \r\n            baseURL: 'http://52.59.255.174/admin',\r\n            //baseURL: 'http://localhost:3077/admin',\r\n            timeout: 30000,\r\n            headers: headers\r\n        })\r\n        .then(this._checkStatus)\r\n        .then(response => response)\r\n        .catch(err => err)\r\n    };\r\n\r\n    _checkStatus = response => {\r\n        // raises an error in case response status is not a success\r\n        if (response.status >= 200 && response.status < 300) {\r\n            // Success status lies between 200 to 300\r\n            return response;\r\n        } else {\r\n            var error = new Error(response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    };\r\n\r\n}","\r\nimport React from 'react';\r\n\r\nimport Utils from '../utils/Utils';\r\n\r\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\r\n\r\nconst utils = new Utils();\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nexport default function Sidebar(props){\r\n    return <div className=\"laser-side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeSidebar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-red-text\"><b>Emergency Location Details</b></h4>\r\n                <br/>\r\n                {\r\n                    (Auth.getPriviledge() === \"full_control\") ? \r\n                    <div>\r\n                        <button className=\"laser-red-bg laserbtn\" onClick={e => props.startMonitoring(e, props.emergency)}>Start Monitoring</button>\r\n                        <br/>\r\n                        <br/>                \r\n                        <button className=\"laser-blue-bg laserbtn\" onClick={e => props.resolve(e)}>Resolve</button>\r\n                    </div> : \"\"\r\n                }\r\n                <br/>\r\n                <h5><b>Trackable</b> - {props.emergency.is_trackable ? \"Yes\" : \"No\" }</h5>\r\n                <br/>\r\n                <h5><b>Time</b> - {utils.getTime(props.emergency.created)}</h5>\r\n                <br/>\r\n                <h5><b>Persons Name</b> - {props.emergency.full_name}</h5>\r\n                <br/>\r\n                <h5><b>Person's Emergency Contacts</b> - {(props.emergency.emergency_numbers && props.emergency.emergency_numbers.length>0) ? ParseContacts(props.emergency.emergency_numbers) : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Email Address</b> - {props.emergency.email ? props.emergency.email : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.emergency.phone_number ? props.emergency.phone_number : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Device</b> - {props.emergency.device ? props.emergency.device : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Emergency Full Address</b> - {props.emergency.full_address ? props.emergency.full_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Emergency Admin Address</b> - {props.emergency.sub_admin_address ? props.emergency.sub_admin_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Reason For Emergency</b> - {props.emergency.reasons ? getReasons(props.emergency.reasons) : \"\"}</h5>\r\n           </div>\r\n}\r\n\r\nfunction ParseContacts(arr){\r\n    return arr.map((item,index) => {\r\n        return <p key={index}>{item}</p>\r\n    })\r\n}\r\n\r\nfunction getReasons(reasons){\r\n    switch(reasons.length){\r\n        case 0:\r\n          return \"\";\r\n        case 1:\r\n          return reasons[0]+\" emergency\";\r\n        case 2:\r\n          return reasons[0] +\" emergency, \" +reasons[1] +\" emergency\";\r\n        case 3:\r\n          return reasons[0] +\" emergency, \" +reasons[1] +\" emergency, \" +reasons[2] +\" emergency\";\r\n    }\r\n}","import React from 'react';\r\n\r\nconst style = {\r\n    width: \"100%\"\r\n}\r\n\r\nexport default function Text(props){\r\n    return  <div className=\"laser-action_div laser-shadow\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 style={style}><span onClick={e => props.closeAction(e)} className=\"action_close_btn\">&#10005;</span></h1>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <h5>{props.text}</h5>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n}","import React from \"react\"\r\n\r\nimport Text from \"./Text\";\r\n\r\nexport default function Action(props){\r\n\r\n    return <div>{getText(props.action, props.message, props.closeAction)}</div>\r\n\r\n}\r\n\r\nfunction getText(action, message, closeAction){\r\n    switch(action){\r\n        case \"loading\":\r\n        \r\n        return <Text text={\"Loading...\"} closeAction={closeAction}/>\r\n\r\n       \r\n        case \"close\":\r\n        \r\n        return \"\";\r\n\r\n        case \"err_calls_load\":\r\n        \r\n        return <Text text={\"An Error occurred loading latest calls\"} closeAction={closeAction}/>;\r\n\r\n        case \"err_emergency_load\":\r\n        \r\n        return <Text text={\"An Error occurred loading latest emergencies\"} closeAction={closeAction}/>;\r\n\r\n        case \"message\":\r\n\r\n        return <Text text={message} closeAction={closeAction}/> \r\n    }\r\n}","import React from \"react\"\r\n\r\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nconst style = {\r\n    background: \"#2E86C1\",\r\n    border: \"0px solid #000000\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"8px\",\r\n    borderRadius: \"4px\"\r\n}\r\n\r\nconst style_remove_btn = {\r\n    background: \"#000000\",\r\n    border: \"0px solid #000000\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"8px\",\r\n    borderRadius: \"4px\"\r\n}\r\n\r\nexport default function AgentDetails(props){\r\n    \r\n    return <div className=\"laser-agent_side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeAgentSideBar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-black-text\"><b>Agents Details</b></h4>\r\n                <br/>\r\n                <h5><b>Agents Name</b> - {props.agent.agent.firstname} {props.agent.agent.lastname}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.agent.agent.phone_number}</h5>\r\n                <br/>\r\n                <h5><b>Agency</b> - {props.agent.agent.department}</h5>\r\n                <br/>\r\n                <h5><b>Current Location</b> - {props.agent.full_address}</h5>\r\n                <br/>\r\n                {\r\n                    (Auth.getPriviledge() === \"full_control\") ? <div>\r\n                                                                    <h5><b>Availability</b> - {props.agent.is_on_route ? props.agent.agent.firstname+\" is currently on route to a person's locations\"   : props.agent.agent.firstname+\" is available\"}</h5>\r\n                                                                    <p>{props.agent.is_on_route ? <button style={style_remove_btn} onClick={e => props.removeAgentFromRoute(e, props.agent)} className=\"\">Remove agent from route</button> : \"\"}</p>\r\n                                                                    <br/>\r\n                                                                    {props.user.full_name ?  <button style={style} onClick={e => props.addAgentToMonitoring(e, props.agent)} className=\"\">Send Agent {props.agent.agent.firstname} {props.agent.agent.lastname} to {props.user.full_name}'s location </button> : \"\"}\r\n                                                                </div> : \"\"\r\n                }\r\n           </div>\r\n\r\n}","import React from 'react';\r\n\r\nimport Utils from '../utils/Utils';\r\n\r\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\r\n\r\nconst utils = new Utils();\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nexport default function LocationSidebar(props){\r\n    return <div className=\"laser-side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeSidebar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-blue-text\"><b>Call Location Details</b></h4> \r\n                <br/>\r\n                <br/>                \r\n                {\r\n                    (Auth.getPriviledge() === \"full_control\") ? \r\n                    <div>\r\n                        <button className=\"laser-blue-bg laserbtn\" onClick={e => props.resolve(e)}>Resolve</button>\r\n                        <br/>\r\n                    </div> : \"\"\r\n                }\r\n                <h5><b>Time</b> - {utils.getTime(props.location.created)}</h5>\r\n                <br/>\r\n                <h5><b>Persons Name</b> - {props.location.full_name}</h5>\r\n                <br/>\r\n                <h5><b>Email Address</b> - {props.location.email ? props.location.email : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.location.phone_number ? props.location.phone_number : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Call Full Address</b> - {props.location.full_address ? props.location.full_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Call Admin Address</b> - {props.location.sub_admin_address ? props.location.sub_admin_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Reason For Call</b> - {props.location.reason ? props.location.reason : \"\"}</h5>\r\n           </div>\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport burger_menu from \"../icons/burger_menu.png\";\r\n\r\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nconst dateStyle = {\r\n    color: \"#111111\",\r\n    border: \"1px solid #FFFFFF\",\r\n    zIndex: \"6000\",\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\",\r\n    padding: \"8px\"\r\n}\r\n\r\nconst controls_style = {\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class TopPanel extends Component{\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-top-panel\">\r\n                <div className=\"top-panel-left-div laser-inline\">\r\n                    <img className=\"laser-inline\" src={burger_menu} width=\"25\" height=\"25\"/><h4 className=\"laser-inline laser-header-text\"> Laser Emergency Admin - Monitoring and Dispatch</h4>\r\n                </div>\r\n                <div className=\"laser-controls\">\r\n                    {\r\n                        (Auth.getPriviledge() === \"full_control\") ? <button onClick={e => this.props.getAllAgentsLocation(e)} className=\"form-control laser-inline laser-150-width laser-red-bg laserbtn\">Locate All Agents</button> : \"\"\r\n                    }\r\n                    \r\n                    <div className=\"laser-inline\" style={dateStyle}>\r\n                        <DatePicker\r\n                            onCalendarOpen={this.props.onCalendarOpen}\r\n                            maxDate={new Date()}\r\n                            style={dateStyle}\r\n                            onChange={this.props.onDateChange}\r\n                            value={this.props.date}/>\r\n                    </div>  \r\n\r\n                    <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"calls\" name=\"calls\" value={this.props.selected_call} onChange={this.props.onCallsChanged}>\r\n                        <option>Calls (All)</option>\r\n                        <option>Emergency Management(LASEMA)</option>\r\n                        <option>Police</option>\r\n                        <option>Distress</option>\r\n                        <option>Environmental and Special Offences Task Force</option>\r\n                        <option>Fire / Safety Services</option>\r\n                        <option>Environmental / Noise Pollution</option>\r\n                        <option>Broken Pipe / Water Leakage</option>\r\n                        <option>Pothole / Collapsed Road</option>\r\n                        <option>None</option>\r\n                    </select>\r\n                    \r\n                    <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"emergencies\" name=\"emergencies\" value={this.props.selected_emergency} onChange={this.props.onEmergenciesChanged}>\r\n                        <option>Emergencies (All)</option>\r\n                        <option>Police Cases</option>\r\n                        <option>Hospital Cases</option>\r\n                        <option>Fire Cases</option>\r\n                        <option>None</option>\r\n                    </select>\r\n\r\n                    <button onClick={e => this.props.logout(e)} className=\"form-control laser-inline laser-100-width laser-grey-bg laserbtn\">logout</button>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} ","import React from 'react';\r\n\r\nimport Utils from '../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nconst style = {\r\n    background: \"rgba(0,0,0,0)\",\r\n    border: \"0px solid #000000\"\r\n}\r\n\r\nexport default function LatestItem(props){\r\n    return <button className=\"laserItem\" style={style} onClick={e => props.itemClicked(e, props.item)}>\r\n                <h5 style={getColor(props.item.laser_type)}>{props.item.full_name} - {utils.getTime(props.item.created)} - {props.item.sub_admin_address}</h5>\r\n           </button>\r\n}\r\n\r\nfunction getColor(laser_type){\r\n    switch(laser_type){\r\n        case \"emergency\":\r\n            return {\r\n                color: \"#E74C3C\",\r\n                textAlign: \"left\"\r\n            }\r\n        case \"call\":\r\n            return {\r\n                color: \"#3498DB\",\r\n                textAlign: \"left\"\r\n            }\r\n        default:\r\n            return {\r\n                color: \"#000000\",\r\n                textAlign: \"left\"\r\n            }\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport LatestItem from './LatestItem';\r\n\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\nconst styling = {\r\n    width: \"380px\",\r\n    height: \"400px\"\r\n}\r\n\r\nexport default class Latest extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state= {\r\n\r\n        }\r\n\r\n\r\n        this.itemClicked = this.itemClicked.bind(this);\r\n    }\r\n\r\n    itemClicked(e, item){\r\n        e.preventDefault();\r\n        this.props.latestClicked(item);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-latest-div laser-shadow\">\r\n                <h4 className=\"text-center laser-black-text\">Latest Reports</h4>    \r\n                <ScrollToBottom style={styling}>\r\n                    {\r\n                        this.props.latest.map(item => {\r\n                            return <LatestItem key={item._id} itemClicked={this.itemClicked} item={item}/>\r\n                        })\r\n                    }\r\n                </ScrollToBottom>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\"\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nconst box_style = {\r\n    margin: \"16px\"\r\n}\r\n\r\n\r\nconst style = {\r\n    background: \"#2E86C1\",\r\n    border: \"0px solid #000000\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"8px\",\r\n    borderRadius: \"4px\",\r\n    float: \"left\",\r\n    marginLeft: \"20px\"\r\n}\r\n\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nexport default function OrderStatus(props){\r\n    return <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"Modal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center\">Message From Agent</h4>\r\n                    <button className=\"grey-bg bt-btn pull-right\" style={box_style} onClick={props.closeRouteResponse}>close</button>\r\n                    <br/>\r\n                    <br/>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 col-sm-8\">\r\n                            <h5 className=\"black-text\">{props.route_response.agent.agent.firstname} {props.route_response.agent.agent.lastname} has completed the route to {props.route_response.user.full_name}'s location</h5>\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-4\">\r\n                            <h5><b>Phone Number</b></h5>\r\n                            <h5>{props.route_response.agent.agent.phone_number}</h5>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <h5><button className=\"green-bg bt-btn\" style={style} onClick={e => props.removeAgentFromRouteAndCloseRouteResponse(e, props.route_response.agent, props.route_response)}>Remove Agent From Route</button></h5>\r\n                    </div>\r\n\r\n                </ReactModal>\r\n           </div>\r\n}","import React from 'react';\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst btn_style_left = {\r\n    marginLeft: \"16px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nconst btn_style_right = {\r\n    marginLeft: \"8px\",\r\n    marginRight: \"16px\"\r\n}\r\n\r\nexport default function ConfirmAction(props){\r\n    return  <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"ConfirmModal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center blue-text\">Confirmation</h4>\r\n                    <br/>\r\n                    <h5 className=\"text-center\">{props.message}</h5>\r\n                    <br/>\r\n                    <button className=\"laser-inline laser-blue-bg laserbtn\" style={btn_style_left} onClick={props.yesClicked}>yes</button>\r\n                    <button className=\"laser-inline grey-bg laserbtn\" style={btn_style_right} onClick={props.noClicked}>no</button>\r\n                </ReactModal>\r\n            </div>\r\n}","\r\nexport default class Persistence{\r\n    saveSelectedAgents(selected_agents){\r\n        localStorage.setItem(\"selected_agents\", JSON.stringify(selected_agents));\r\n    }\r\n\r\n    getSelectedAgents(){\r\n        return JSON.parse(localStorage.getItem(\"selected_agents\"));\r\n    }\r\n\r\n    saveTrackedUsers(tracked_users){\r\n        localStorage.setItem(\"tracked_users\", JSON.stringify(tracked_users));\r\n    }\r\n\r\n    getTrackedUsers(){\r\n        return JSON.parse(localStorage.getItem(\"tracked_users\"));\r\n    }\r\n}","\r\n//Our Auth Service\r\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nconst Axios = Auth.axios;\r\n\r\nconst locations_url = \"/getLocations\";\r\nconst emergencies_url = \"/getEmergencies\";\r\nconst resolve_emergenciy_url = \"/resolveEmergency\";\r\nconst resolve_location_url = \"/resolveCall\";\r\n\r\nconst createAgentUrl = \"/create_agent\";\r\nconst editAgentUrl = \"/edit_agent\";\r\nconst deleteAgentUrl = \"/delete_agent\";\r\nconst getAgentsUrl = \"/get_agents\";\r\nconst getAgentsDepartmentUrl = \"/get_agents_departments\";\r\n\r\nconst createDepartmentUrl = \"/create_department\";\r\nconst editDepartmentUrl = \"/edit_department\";\r\nconst deleteDepartmentUrl = \"/delete_department\";\r\nconst getDepartmentsUrl = \"/get_departments\";\r\n\r\n\r\nexport const getLocations = (data) => {\r\n    return  Axios(locations_url, data)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const getEmergencies = (data) => {\r\n    return  Axios(emergencies_url, data)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const resolveLocation = (id) => {\r\n    return  Axios(resolve_location_url, id)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const resolveEmergency = (data) => {\r\n    return  Axios(resolve_emergenciy_url, data)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const getAgents = () => {\r\n    return  Axios(getAgentsUrl)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const getAgentsDepartment = (department) => {\r\n    return  Axios(getAgentsDepartmentUrl, {department})\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const createAgent = (data) => {\r\n    return Axios(createAgentUrl, data)\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const editAgent = (data) => {\r\n    return Axios(editAgentUrl, data)\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const deleteAgent = (id) => {\r\n    return Axios(deleteAgentUrl, {id})\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const getDepartments = () => {\r\n    return  Axios(getDepartmentsUrl)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const createDepartment = (name) => {\r\n    return Axios(createDepartmentUrl, {name})\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const editDepartment = (data) => {\r\n    return Axios(editDepartmentUrl, data)\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const deleteDepartment = (id) => {\r\n    return Axios(deleteDepartmentUrl, {id})\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                return \"error\";\r\n            })\r\n}","import React, {Component} from 'react';\r\nimport logo from './logo.svg';\r\nimport red_circle from './icons/emergency_with_circle.gif';\r\nimport blue_circle from './icons/call_with_circle.gif';\r\nimport emergency_icon from './icons/emergency.gif';\r\nimport call_icon from './icons/call.gif';\r\nimport car_test from './icons/car_test.png';\r\n\r\n\r\n//import police_car from './icons/vector/police_car.svg'\r\n//import police_car_enroute from './icons/vector/police_car_yellow.svg'\r\n\r\nimport police_car from './icons/vector/police_car.svg'\r\nimport police_car_enroute from './icons/vector/police_car_enroute.svg'\r\n\r\nimport fire_car from './icons/vector/fire_truck.svg'\r\nimport fire_car_enroute from './icons/vector/fire_truck_enroute.svg'\r\n\r\nimport ambulance from './icons/vector/ambulance.svg'\r\nimport ambulance_enroute from './icons/vector/ambulance_enroute.svg'\r\n\r\n/*import police_car_right from './icons/police_car_right.png'\r\nimport fire_car_right from './icons/fire_truck_right.png'\r\nimport ambulance_car_right from './icons/ambulance_right.png'\r\n\r\nimport police_car_left from './icons/police_car_left.png'\r\nimport fire_car_left from './icons/fire_truck_left.png'\r\nimport ambulance_car_left from './icons/ambulance_left.png'\r\n\r\nimport police_car_right_enroute from './icons/police_car_right_enroute.png'\r\nimport fire_car_right_enroute from './icons/fire_truck_right_enroute.png'\r\nimport ambulance_car_right_enroute from './icons/ambulance_right_enroute.png'\r\n\r\nimport police_car_left_enroute from './icons/police_car_left_enroute.png'\r\nimport fire_car_left_enroute from './icons/fire_truck_left_enroute.png'\r\nimport ambulance_car_left_enroute from './icons/ambulance_left_enroute.png'*/\r\n\r\nimport alert from \"./sounds/alert.mp3\";\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport Sidebar from './components/Sidebar';\r\nimport Action from './components/Action';\r\nimport AgentDetails from './components/AgentDetails';\r\nimport LocationSidebar from './components/LocationSideBar';\r\nimport TopPanel from './components/TopPanel';\r\nimport Latest from './components/Latest';\r\nimport RouteStatus from './components/RouteStatus';\r\nimport ConfirmAction from './components/ConfirmAction';\r\nimport Utils from './utils/Utils';\r\nimport Persistence from './utils/Persistence';\r\nimport Sound from 'react-sound';\r\nimport PubNubReact from 'pubnub-react';\r\n\r\nimport './App.css';\r\n\r\nimport * as API from './api/Api';\r\n\r\nimport AuthHelperMethods from './auth/AuthHelperMethods';\r\n\r\nconst utils = new Utils();\r\nconst persistence = new Persistence();\r\n\r\nconst mapStyle = {\r\n    height: '100vh', \r\n    width: '100%'\r\n}\r\n\r\nconst socket_io_url = 'http://52.59.255.174';\r\n//const socket_io_url = 'http://localhost:3077';\r\n\r\nlet todays_date = new Date().toISOString();\r\n\r\nlet today = null;\r\n\r\nclass App extends Component{\r\n  constructor(props){\r\n      super(props);\r\n\r\n      this.state = {\r\n          showConfirm: {\r\n              action: \"\",\r\n              status: false\r\n          },\r\n          latest: [],\r\n          locations: [], \r\n          emergencies: [], \r\n          filtered_locations: [],\r\n          filtered_emergencies: [],\r\n          side_bar_open: false, \r\n          agent_side_bar_open: false, \r\n          location_side_bar_open: false, \r\n          clicked_user: {}, \r\n          clicked_agent: {},\r\n          center: {lat: 6.5244,lng: 3.3792}, \r\n          selected_call:\"Calls (All)\", \r\n          selected_emergency:\"Emergencies (All)\",\r\n          zoom : 11,\r\n          show_red_circle: false,\r\n          show_blue_circle: false,\r\n          clicked_marker_id: \"\",\r\n          play_sound: false,\r\n          channels_list: [\"lllaser\", \"agent_tracked\", \"agent_untracked\", \"users_monitored\", \"issue_resolved\", \"request_tracked\", \"response_tracked\"],\r\n          laser_agents:[], //all agents\r\n          selected_agents: [], //selected agents to resolve issues\r\n          route_responses_from_agents: [],\r\n          tracked_users: [],\r\n          action: \"loading\",\r\n          action_message: \"\",\r\n          tracked_area: \"lllaser\", //the user in which the admin is currently viewing whether the user wants to be tracked or not\r\n          date: new Date(),\r\n          message: \"\"\r\n      }\r\n      \r\n      this.pubnub = new PubNubReact({\r\n        publishKey: 'pub-c-100b3918-0e25-4fac-ade6-c58d013cd019',\r\n        subscribeKey: 'sub-c-21e1e450-9457-11e9-bf84-1623aee89087'\r\n      });\r\n      this.pubnub.init(this);\r\n\r\n      this.closeSideBar = this.closeSideBar.bind(this);\r\n      this.onCallsChanged = this.onCallsChanged.bind(this);\r\n      this.onEmergenciesChanged = this.onEmergenciesChanged.bind(this);\r\n      this.onAgentClicked = this.onAgentClicked.bind(this);\r\n      this.onDateChange = this.onDateChange.bind(this);\r\n      this.onCalendarOpen = this.onCalendarOpen.bind(this);\r\n      this.latestClicked = this.latestClicked.bind(this);\r\n      this.startMonitoring = this.startMonitoring.bind(this);\r\n      this.closeAction = this.closeAction.bind(this);\r\n      this.closeAgentSideBar = this.closeAgentSideBar.bind(this);\r\n      this.addAgentToMonitoring = this.addAgentToMonitoring.bind(this);\r\n      this.getAgentIcon = this.getAgentIcon.bind(this);\r\n      this.subscribeAndGetAllAgentsLocation = this.subscribeAndGetAllAgentsLocation.bind(this);\r\n      this.handleSongFinishedPlaying = this.handleSongFinishedPlaying.bind(this);\r\n      this.removeAgentFromRoute = this.removeAgentFromRoute.bind(this);\r\n      this.closeRouteResponse = this.closeRouteResponse.bind(this);\r\n      this.removeAgentFromRouteAndCloseRouteResponse = this.removeAgentFromRouteAndCloseRouteResponse.bind(this);\r\n\r\n      this.getEmergencies = this.getEmergencies.bind(this);\r\n      this.getLocations = this.getLocations.bind(this);\r\n      this.getLocationsDate = this.getLocationsDate.bind(this);\r\n      this.getEmergenciesDate = this.getEmergenciesDate.bind(this);\r\n      this.getLatestEmergencies = this.getLatestEmergencies.bind(this);\r\n      this.getLatestLocations = this.getLatestLocations.bind(this);\r\n\r\n      this.getSelectedAgentsIds = this.getSelectedAgentsIds.bind(this);\r\n      this.setSelectedAgentsFromIds = this.setSelectedAgentsFromIds.bind(this);\r\n\r\n      this.resolveCall = this.resolveCall.bind(this);\r\n      this.resolveEmergency = this.resolveEmergency.bind(this);\r\n      this.hideConfirm = this.hideConfirm.bind(this);\r\n      this.showConfirmResolveEmergency = this.showConfirmResolveEmergency.bind(this);\r\n      this.showConfirmResolveLocation = this.showConfirmResolveLocation.bind(this);\r\n\r\n      this.logout = this.logout.bind(this);\r\n    \r\n      var year = todays_date.split(/T(.+)/)[0];\r\n\r\n      year = year+\"T00:00:00.000Z\";\r\n\r\n      today = new Date(year);\r\n  }\r\n\r\n  logout(){\r\n      this.props.logout();\r\n  }\r\n\r\n  async resolveEmergency(){\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"\",\r\n            status: false\r\n          },\r\n          message: \"\",\r\n          action: \"loading\",\r\n          action_message: \"\"\r\n      })\r\n\r\n      const response = await API.resolveEmergency({id: this.state.clicked_user._id})\r\n\r\n      if(response==\"error\"){\r\n            this.setState({\r\n                action: \"message\",\r\n                action_message: \"Emergency could not be resolved. Try again later\"\r\n            })\r\n            return;\r\n      }\r\n      \r\n      if(response){\r\n          this.pubnub.publish(\r\n                {\r\n                    message: {\r\n                        \r\n                    },\r\n                    channel: \"issue_resolved\",\r\n                    sendByPost: false, // true to send via POST\r\n                    storeInHistory: false //override default storage options\r\n                },\r\n                (status, response) => {\r\n                    // handle status, response\r\n                }\r\n          );\r\n\r\n          this.setState(state => {\r\n                var tracked_users = state.tracked_users;\r\n                \r\n                tracked_users.splice(tracked_users.indexOf(this.state.clicked_user._id), 1);\r\n\r\n                persistence.saveTrackedUsers(tracked_users);\r\n\r\n                return {\r\n                    action: \"close\",\r\n                    side_bar_open: false,\r\n                    tracked_users: tracked_users\r\n                }\r\n          })\r\n\r\n          this.getLocationsDate(this.state.date);\r\n          this.getEmergenciesDate(this.state.date);\r\n\r\n          this.setState({\r\n              latest: []\r\n          })\r\n\r\n          this.getLatestLocations();\r\n          this.getLatestEmergencies();\r\n      }\r\n  }\r\n\r\n  async resolveCall(){\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"\",\r\n            status: false\r\n          },\r\n          message: \"\",\r\n          action: \"loading\",\r\n          action_message: \"\"\r\n      })\r\n\r\n      const response = await API.resolveLocation({id: this.state.clicked_user._id})\r\n\r\n      if(response==\"error\"){\r\n        this.setState({\r\n            action: \"message\",\r\n            action_message: \"Call could not be resolved. Try again later\"\r\n        })\r\n      }\r\n        \r\n      if(response){\r\n          this.pubnub.publish(\r\n                {\r\n                    message: {\r\n\r\n                    },\r\n                    channel: \"issue_resolved\",\r\n                    sendByPost: false, // true to send via POST\r\n                    storeInHistory: false //override default storage options\r\n                },\r\n                (status, response) => {\r\n                    // handle status, response\r\n                }\r\n          );\r\n\r\n          this.setState(state =>{\r\n              var locations = state.locations;\r\n\r\n              locations.splice(locations.indexOf(state.clicked_user))\r\n\r\n              return {\r\n                locations: locations,\r\n                action: \"close\",\r\n                location_side_bar_open: false\r\n              }\r\n          })\r\n\r\n          this.getLocationsDate(this.state.date);\r\n          this.getEmergenciesDate(this.state.date);\r\n\r\n          this.setState({\r\n                latest: []\r\n          })\r\n\r\n          this.getLatestLocations();\r\n          this.getLatestEmergencies();\r\n      }\r\n  }\r\n\r\n  hideConfirm(){\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"\",\r\n            status: false\r\n          },\r\n          message: \"\"\r\n      })\r\n  }\r\n\r\n  showConfirmResolveEmergency(e){\r\n      e.preventDefault();\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"emergency\",\r\n            status: true\r\n          },\r\n          message: \"Are you sure you want to mark this emergency issue as resolved ?\"\r\n      })\r\n  }\r\n\r\n  showConfirmResolveLocation(){\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"location\",\r\n            status: true\r\n          },\r\n          message: \"Are you sure you want to mark this call as resolved ?\"\r\n      })\r\n  }\r\n\r\n  removeAgentFromRoute(e, agent){\r\n      e.preventDefault();\r\n\r\n      this.pubnub.publish(\r\n          {\r\n              message: {\r\n                pn_gcm: {\r\n                    data: {\r\n                        notification_body: \"You need to abandon route. Tap to open app\",\r\n                        data: {},\r\n                        action: \"leave_route\"\r\n                    }\r\n                }\r\n              },\r\n              channel: agent.agent._id,\r\n              sendByPost: false, // true to send via POST\r\n              storeInHistory: false //override default storage options\r\n          },\r\n          (status, response) => {\r\n              // handle status, response\r\n          }\r\n      );\r\n\r\n      //tell other browsers about the agent being montiored\r\n      this.pubnub.publish(\r\n        {\r\n            message: {\r\n                agent\r\n            },\r\n            channel: \"agent_untracked\",\r\n            sendByPost: false, // true to send via POST\r\n            storeInHistory: false //override default storage options\r\n        },\r\n        (status, response) => {\r\n            // handle status, response\r\n        }\r\n      );\r\n\r\n      this.setState(state => {\r\n          var agents = state.selected_agents;\r\n          var list = state.channels_list;\r\n          var laser_agents = state.laser_agents;\r\n          \r\n          var new_selected_agents = [];\r\n\r\n          if(agents.length > 1){\r\n              new_selected_agents = agents.map(age => {\r\n                  if(age && (age._id !== agent.agent._id)){\r\n                      return age;\r\n                  }\r\n              })\r\n          }\r\n\r\n          var new_list = list.splice(list.indexOf(agent.agent._id), 1);\r\n\r\n          var found_agent = laser_agents.find(age => age.agent._id === agent.agent._id);\r\n\r\n          var new_found_agent = Object.assign({}, found_agent);\r\n\r\n          new_found_agent.is_on_route = false;\r\n\r\n          var new_laser_agents = laser_agents.splice(laser_agents.indexOf(found_agent), 1, new_found_agent);\r\n\r\n          //unsubscribe to the agents id to receive a response to the route request\r\n          this.pubnub.unsubscribe({\r\n             channels: [agent.agent._id]\r\n          })\r\n          \r\n          persistence.saveSelectedAgents(new_selected_agents);\r\n\r\n          return {  \r\n              selected_agents: new_selected_agents,\r\n              laser_agents: laser_agents,\r\n              channels_list: new_list,\r\n              agent_side_bar_open: false,\r\n              clicked_agent: {}\r\n          }\r\n      })\r\n  }\r\n\r\n  removeAgentFromRouteAndCloseRouteResponse(e, agent, route_response){\r\n      e.preventDefault();\r\n\r\n      this.pubnub.publish(\r\n          {\r\n              message: {\r\n                pn_gcm: {\r\n                    data: {\r\n                        notification_body: \"You need to abandon route. Tap to open app\",\r\n                        data: {},\r\n                        action: \"leave_route\"\r\n                    }\r\n                }\r\n              },\r\n              channel: agent.agent._id,\r\n              sendByPost: false, // true to send via POST\r\n              storeInHistory: false //override default storage options\r\n          },\r\n          (status, response) => {\r\n              // handle status, response\r\n          }\r\n      );\r\n\r\n      //tell other browsers about the agent being montiored\r\n      this.pubnub.publish(\r\n                {\r\n                    message: {\r\n                        agent\r\n                    },\r\n                    channel: \"agent_untracked\",\r\n                    sendByPost: false, // true to send via POST\r\n                    storeInHistory: false //override default storage options\r\n                },\r\n                (status, response) => {\r\n                    // handle status, response\r\n                }\r\n      );\r\n\r\n      this.setState(state => {\r\n          var agents = state.selected_agents;\r\n          var list = state.channels_list;\r\n          var array = state.route_responses_from_agents;\r\n\r\n          array.splice(array.indexOf(route_response),1);\r\n          \r\n          var new_selected_agents = [];\r\n          \r\n          if(agents.length > 1){\r\n              new_selected_agents = agents.map(age => {\r\n                  \r\n                  if(age.agent._id!==agent.agent._id){\r\n                      return age;\r\n                  }\r\n              })\r\n          }\r\n\r\n          var new_list = list.splice(list.indexOf(agent.agent._id), 1);\r\n\r\n          //subscribe to the agents id to receive a response to the route request\r\n          this.pubnub.unsubscribe({\r\n                channels: [agent.agent._id]\r\n          })\r\n\r\n          persistence.saveSelectedAgents(new_selected_agents);\r\n\r\n          return {  \r\n              selected_agents: new_selected_agents,\r\n              channels_list: new_list,\r\n              route_responses_from_agents: array,\r\n              agent_side_bar_open: false,\r\n              clicked_agent: {}\r\n          }\r\n      })\r\n  }\r\n\r\n  addAgentToMonitoring(e, agent){\r\n      e.preventDefault();\r\n      //send a request to the agent via pubnub\r\n      //wait for response\r\n      //if agent accepts set agent as on route\r\n      this.pubnub.publish(\r\n          {\r\n            message: {\r\n                pn_gcm: {\r\n                    data: {\r\n                        notification_body: \"You have a new route. Tap to open app.\",\r\n                        data: this.state.clicked_user.phone_number ? {full_name: this.state.clicked_user.full_name, _id: this.state.clicked_user.user, phone_number: this.state.clicked_user.phone_number, latitude: this.state.clicked_user.latitude, longitude: this.state.clicked_user.longitude} : {full_name: this.state.clicked_user.full_name, _id: this.state.clicked_user.user, latitude: this.state.clicked_user.latitude, longitude: this.state.clicked_user.longitude},\r\n                        action: \"route_request\"\r\n                    }\r\n                }\r\n            },\r\n            channel: agent.agent._id,\r\n            sendByPost: false, // true to send via POST\r\n            storeInHistory: false //override default storage options\r\n          },\r\n          (status, response) => {\r\n              // handle status, response\r\n          }\r\n      );\r\n\r\n\r\n      //tell other browsers about the agent being montiored\r\n      this.pubnub.publish(\r\n            {\r\n                message: {\r\n                    agent\r\n                },\r\n                channel: \"agent_tracked\",\r\n                sendByPost: false, // true to send via POST\r\n                storeInHistory: false //override default storage options\r\n            },\r\n            (status, response) => {\r\n                // handle status, response\r\n            }\r\n      );\r\n\r\n      this.setState(state => {\r\n          var agents = state.selected_agents;\r\n          var list = state.channels_list;\r\n\r\n          var new_selected_agents = [];\r\n\r\n          if(agents.length > 0){\r\n              new_selected_agents = agents.map(a => {\r\n                \r\n                if(!a || (a.agent._id === agent.agent._id)){\r\n                  return agent;\r\n                }\r\n                else{\r\n                    return a;\r\n                }\r\n              })\r\n\r\n              var found_agent = new_selected_agents.find(a => a.agent._id === agent.agent._id)\r\n\r\n              if(!found_agent){\r\n                new_selected_agents.push(agent)\r\n              }\r\n          }\r\n          else{\r\n              new_selected_agents.push(agent)\r\n          }\r\n          \r\n          if(list.indexOf(agent.agent._id)===-1){\r\n            list.push(agent.agent._id)\r\n          }\r\n\r\n          //subscribe to the agents id to receive a response to the route request\r\n          this.pubnub.subscribe({\r\n            channels: list\r\n          })\r\n\r\n          persistence.saveSelectedAgents(new_selected_agents);\r\n\r\n          return {  \r\n            selected_agents: new_selected_agents,\r\n            channels_list: list\r\n          }\r\n      })\r\n  }\r\n\r\n  //Subscribe to the users sub admin area to receive updates and send out a request to all agents on the channel to send their location \r\n  //just in case some of them are not moving at the momemnt and their location is not updating\r\n  startMonitoring(e, item){\r\n      e.preventDefault();\r\n     \r\n      this.pubnub.publish(\r\n          {\r\n              message: {\r\n                    pn_gcm: {\r\n                        data: {\r\n                            notification_body: \"Tap to open the laser App\",\r\n                            data: {},\r\n                            action: \"send_location\"\r\n                        }\r\n                    }\r\n              },\r\n              channel: this.state.tracked_area,\r\n              sendByPost: false, // true to send via POST\r\n              storeInHistory: false //override default storage options\r\n          },\r\n          (status, response) => {\r\n              // handle status, response\r\n          }\r\n      );\r\n      \r\n      this.setState(state => {\r\n            var list = state.channels_list;\r\n            var tracked_users = state.tracked_users;\r\n\r\n            if(list.indexOf(item.user)===-1){\r\n                    //remove old user from list\r\n                    //unsubscribe from old user\r\n        \r\n                    list.push(item.user)\r\n            }\r\n\r\n            var found_user = tracked_users.find(id => id === item.user);\r\n            \r\n            if(!found_user){\r\n                tracked_users.push(item.user);\r\n            }\r\n\r\n            persistence.saveTrackedUsers(tracked_users);\r\n\r\n            this.pubnub.subscribe({\r\n                channels: list\r\n            })\r\n\r\n            return {\r\n                action: \"message\",\r\n                action_message: \"You are now monitoring \"+item.full_name,\r\n                channels_list: list,\r\n                laser_agents: [],\r\n                tracked_users: tracked_users\r\n            }\r\n      })\r\n  }\r\n\r\n  latestClicked(item){\r\n      switch(item.laser_type){\r\n          case \"emergency\":\r\n              this.setState({\r\n                clicked_user: item,\r\n                side_bar_open: true,\r\n                location_side_bar_open: false,\r\n                agent_side_bar_open: false,\r\n                center: {\r\n                  lat: item.latitude,\r\n                  lng: item.longitude\r\n                },\r\n                zoom: 19,\r\n                show_red_circle: true,\r\n                show_blue_circle: false,\r\n                clicked_marker_id: item._id\r\n              })\r\n              break;\r\n          case \"call\":\r\n              this.setState({\r\n                clicked_user: item,\r\n                side_bar_open: false,\r\n                location_side_bar_open: true,\r\n                agent_side_bar_open: false,\r\n                center: {\r\n                  lat: item.latitude,\r\n                  lng: item.longitude\r\n                },\r\n                zoom: 19,\r\n                show_red_circle: false,\r\n                show_blue_circle: true,\r\n                clicked_marker_id: item._id\r\n              })\r\n              break;\r\n      }\r\n  }\r\n\r\n  onCalendarOpen(){\r\n      this.setState({\r\n        play_sound: false,\r\n        side_bar_open: false, \r\n        location_side_bar_open: false,\r\n        agent_side_bar_open: false\r\n      })\r\n  }\r\n\r\n  onDateChange(date){\r\n\r\n    //We add 1 hour to the date because the date axios is sending to the server is 1 hour behind what it should be\r\n    date = new Date(date);\r\n    date.setHours(date.getHours() + 1);\r\n\r\n     this.setState({\r\n        play_sound: false,\r\n        date: date,\r\n        show_red_circle: false,\r\n        show_blue_circle: false,\r\n        clicked_marker_id: \"\",\r\n        action: \"loading\",\r\n        action_message: \"\",\r\n        selected_call:\"Calls (All)\", \r\n        selected_emergency:\"Emergencies (All)\"\r\n     })\r\n\r\n     this.getLocationsDate(date);\r\n     this.getEmergenciesDate(date);\r\n  }\r\n\r\n  onCallsChanged(event){\r\n      const target = event.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n\r\n      let arr = [];\r\n\r\n      if(this.state.locations.length>0){\r\n          if(value===\"Calls (All)\"){\r\n            this.setState(state => ({\r\n              play_sound: false,\r\n              filtered_locations: state.locations,\r\n              side_bar_open: false, \r\n              selected_call: value,\r\n              agent_side_bar_open: false,\r\n              location_side_bar_open: false,\r\n              show_blue_circle: false\r\n            }))\r\n          }\r\n          else if(value===\"None\"){\r\n            this.setState({\r\n              play_sound: false,\r\n              filtered_locations: [],\r\n              side_bar_open: false, \r\n              selected_call: value,\r\n              agent_side_bar_open: false,\r\n              location_side_bar_open: false,\r\n              show_blue_circle: false\r\n            })\r\n          }\r\n          else{\r\n            this.state.locations.map(emer => {\r\n              if(emer.reason.includes(value.toLowerCase())){\r\n                arr.push(emer)\r\n              }\r\n            })\r\n            \r\n            if(arr.length>0){\r\n              this.setState({\r\n                play_sound: false,\r\n                filtered_locations: arr,\r\n                selected_call: value,\r\n                side_bar_open: false, \r\n                agent_side_bar_open: false,\r\n                location_side_bar_open: false,\r\n                show_blue_circle: false\r\n              })\r\n            }\r\n            else{\r\n              //show message that there are no locations found for that parameter\r\n      \r\n              this.setState({\r\n                  play_sound: false,\r\n                  filtered_locations:[],\r\n                  selected_call: value,\r\n                  side_bar_open: false, \r\n                  location_side_bar_open: false,\r\n                  show_blue_circle: false\r\n              })\r\n            }\r\n          }\r\n      }\r\n      else{\r\n          this.setState({\r\n              selected_call: value\r\n          })\r\n      }\r\n  }\r\n\r\n  onEmergenciesChanged(event){\r\n      const target = event.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n      \r\n      let arr = [];\r\n      if(this.state.emergencies.length>0){\r\n          if(value===\"Emergencies (All)\"){\r\n            this.setState(state => ({\r\n              play_sound: false,\r\n              filtered_emergencies: state.emergencies,\r\n              side_bar_open: false, \r\n              selected_emergency: value,\r\n              location_side_bar_open: false,\r\n              agent_side_bar_open: false,\r\n              show_red_circle: false\r\n            }))\r\n          }\r\n          else if(value===\"None\"){\r\n            this.setState({\r\n              play_sound: false,\r\n              filtered_emergencies:[],\r\n              selected_emergency: value,\r\n              side_bar_open: false, \r\n              agent_side_bar_open: false,\r\n              location_side_bar_open: false,\r\n              show_red_circle: false\r\n            })\r\n          }\r\n          else{\r\n            this.state.emergencies.map(emer => {\r\n              if(emer.reasons&&emer.reasons.length>0){\r\n                emer.reasons.map(reason => {\r\n                    if(value.toLowerCase().includes(reason)){\r\n                        arr.push(emer)\r\n                    }\r\n                })\r\n              }\r\n            })\r\n      \r\n            if(arr.length>0){\r\n              this.setState({\r\n                play_sound: false,\r\n                filtered_emergencies:arr,\r\n                selected_emergency: value,\r\n                side_bar_open: false, \r\n                agent_side_bar_open: false,\r\n                location_side_bar_open: false,\r\n                show_red_circle: false\r\n              })\r\n            }\r\n            else{\r\n              //show message that there are no emregencies found for that parameter\r\n      \r\n              this.setState({\r\n                  play_sound: false,\r\n                  filtered_emergencies: [],\r\n                  side_bar_open: false, \r\n                  selected_emergency: value,\r\n                  agent_side_bar_open: false,\r\n                  location_side_bar_open: false,\r\n                  show_red_circle: false\r\n              })\r\n            }\r\n          }\r\n      }    \r\n      else{\r\n          this.setState({\r\n             selected_emergency: value\r\n          })\r\n      }\r\n  }\r\n\r\n  onLocationClicked(location,e){\r\n      this.setState({\r\n          play_sound: false,\r\n          clicked_user: location,\r\n          side_bar_open: false,\r\n          agent_side_bar_open: false,\r\n          location_side_bar_open: true,\r\n          center: {\r\n            lat: location.latitude,\r\n            lng: location.longitude\r\n          },\r\n          zoom: 19,\r\n          show_red_circle: false,\r\n          show_blue_circle: true,\r\n          clicked_marker_id: location._id\r\n      })\r\n  }\r\n\r\n  onEmergencyClicked(emergency,e){\r\n      this.setState({\r\n          play_sound: false,\r\n          clicked_user: emergency,\r\n          clicked_agent: {},\r\n          side_bar_open: true,\r\n          agent_side_bar_open: false,\r\n          location_side_bar_open: false,\r\n          center: {\r\n              lat: emergency.latitude,\r\n              lng: emergency.longitude\r\n          },\r\n          zoom: 19,\r\n          show_red_circle: true,\r\n          show_blue_circle: false,\r\n          clicked_marker_id: emergency._id\r\n      })\r\n  }\r\n\r\n  onAgentClicked(agent,e){\r\n      this.setState({\r\n          play_sound: false,\r\n          clicked_agent: agent,\r\n          agent_side_bar_open: true\r\n    })\r\n  }\r\n\r\n  getLocationsMarkers(){\r\n        let locations_ui;\r\n\r\n        if(this.state.filtered_locations.length>0){\r\n            locations_ui = this.state.filtered_locations.map(loc => {\r\n                return  <Marker key={loc._id} onClick={e => this.onLocationClicked(loc,e)}\r\n                            name={loc.reason} \r\n                            title={loc.full_name}\r\n                            position={{lat: loc.latitude, lng: loc.longitude}}\r\n                            icon={{\r\n                                url: (this.state.clicked_marker_id===loc._id) ? blue_circle : call_icon\r\n                            }}/> \r\n            })\r\n        }\r\n        else{\r\n            locations_ui = \"\";\r\n        }\r\n        \r\n        return locations_ui;\r\n  }\r\n\r\n  getEmergenciesMarkers(){\r\n      let emergencies_ui;\r\n\r\n      if(this.state.filtered_emergencies.length>0){\r\n          emergencies_ui = this.state.filtered_emergencies.map(emer => {\r\n            return <Marker key={emer._id} onClick={e => this.onEmergencyClicked(emer,e)}\r\n                      name={emer.reasons[0]} \r\n                      title={emer.full_name}\r\n                      position={{lat: emer.latitude, lng: emer.longitude}}\r\n                      icon={{\r\n                        url: (this.state.clicked_marker_id===emer._id) ? red_circle : emergency_icon\r\n                      }}/>\r\n          })\r\n      }\r\n      else{\r\n          emergencies_ui = \"\";\r\n      }\r\n      \r\n      return emergencies_ui;\r\n  }\r\n\r\n  getAgentMarkers(){\r\n      let agents_ui;\r\n\r\n      if(this.state.laser_agents.length>0){\r\n            agents_ui = this.state.laser_agents.map((agent,i) => {\r\n                return <Marker key={i}  onClick={e => this.onAgentClicked(agent,e)}\r\n                            name={agent.full_address} \r\n                            title={agent.full_address}\r\n                            position={{lat: agent.latitude, lng: agent.longitude}}\r\n                            //\r\n                            icon={{\r\n                                url: this.getAgentIcon(agent),\r\n                                anchor: new this.props.google.maps.Point(40,40),\r\n                                scaledSize: new this.props.google.maps.Size(40,40)\r\n                            }}/>\r\n            })\r\n      }\r\n      else{\r\n            agents_ui = \"\";\r\n      }\r\n\r\n      return agents_ui;\r\n  }\r\n\r\n  getAgentIcon(agent){\r\n      if(agent){\r\n            if(this.state.selected_agents.length > 0){\r\n                this.state.selected_agents.map(age => {\r\n                    if(age){\r\n                        if(agent.agent._id === age._id){\r\n                            agent.is_on_route = true;\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n    \r\n            switch(agent.agent.department){\r\n                case \"police\":\r\n                    if(agent.bearing>90||agent.bearing<=270){\r\n                        return (agent.is_on_route) ? police_car_enroute : police_car;\r\n                    }\r\n                    else{\r\n                        return (agent.is_on_route) ? police_car_enroute : police_car;\r\n                    }\r\n                break;\r\n                case \"fire\":\r\n                    if(agent.bearing>90||agent.bearing<=270){\r\n                        return (agent.is_on_route) ? fire_car_enroute : fire_car;\r\n                    }\r\n                    else{\r\n                        return (agent.is_on_route) ? fire_car_enroute : fire_car;\r\n                    }\r\n                break;\r\n                case \"hospital\":\r\n                    if(agent.bearing>90||agent.bearing<=270){\r\n                        return (agent.is_on_route) ? ambulance_enroute: ambulance;\r\n                    }\r\n                    else{\r\n                        return (agent.is_on_route) ? ambulance_enroute : ambulance;\r\n                    }\r\n                break;\r\n            }\r\n      }\r\n  }\r\n\r\n  closeAction(e){\r\n      this.setState({\r\n          action: \"close\",\r\n          action_message: \"\"\r\n      })\r\n  }\r\n\r\n  closeSideBar(e){\r\n      this.setState({\r\n          play_sound: false,\r\n          side_bar_open: false,\r\n          location_side_bar_open: false,\r\n          agent_side_bar_open: false,\r\n          selected_location: {},\r\n          selected_emergency: {},\r\n          clicked_marker_id: \"\"\r\n      })\r\n  }\r\n\r\n  closeAgentSideBar(e){\r\n      this.setState({\r\n          clicked_agent: {},\r\n          agent_side_bar_open: false\r\n      })\r\n  }\r\n\r\n  closeRouteResponse(route_response){\r\n      this.setState(state => {\r\n          var array = state.route_responses_from_agents;\r\n\r\n          array.splice(array.indexOf(route_response),1);\r\n\r\n          return {\r\n              route_responses_from_agents: array\r\n          }\r\n      })\r\n  }\r\n\r\n  fetchPlaces(mapProps, map) {\r\n\r\n  }\r\n\r\n  subscribeAndGetAllAgentsLocation(){\r\n      this.pubnub.subscribe({\r\n        channels: this.state.channels_list\r\n      })\r\n\r\n      this.setState({\r\n        laser_agents: []\r\n      })\r\n\r\n      this.pubnub.publish(\r\n        {\r\n            message: {\r\n                pn_gcm: {\r\n                    data: {\r\n                        notification_body: \"Tap to open the Laser App\",\r\n                        data: {},\r\n                        action: \"send_location\"\r\n                    }\r\n                }\r\n            },\r\n            channel: this.state.tracked_area,\r\n            sendByPost: false, // true to send via POST\r\n            storeInHistory: false //override default storage options\r\n        },\r\n        (status, response) => {\r\n            // handle status, response\r\n        }\r\n      );\r\n  }\r\n\r\n  getSelectedAgentsIds(){\r\n      \r\n      if(this.state.selected_agents.length>0){\r\n            var ids = [];\r\n\r\n            this.state.selected_agents.map(agent => {\r\n                if(agent!==null){\r\n                    ids.push(agent.agent._id);\r\n                }\r\n            });\r\n\r\n            return ids;\r\n      }\r\n      else{\r\n          return [];\r\n      }\r\n  }\r\n\r\n  setSelectedAgentsFromIds(ids){\r\n      this.setState(state => {\r\n          var laser_agents = state.laser_agents;\r\n\r\n          var selected_agents = state.selected_agents;\r\n\r\n          laser_agents.map(agent => {\r\n              var found_agent_id = ids.find(id =>  id === agent.agent._id);\r\n\r\n              if(found_agent_id){\r\n                  var found = selected_agents.find(sel => sel.agent._id === found_agent_id)\r\n\r\n                  if(!found){\r\n                      selected_agents.push(agent);\r\n                  }\r\n              }\r\n          });\r\n\r\n          persistence.saveSelectedAgents(selected_agents);\r\n\r\n          return {\r\n              selected_agents: selected_agents\r\n          }\r\n\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      this.pubnub.unsubscribe({\r\n          channels: this.state.channels_list\r\n      });\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    //get selected agents from persistence(storage)\r\n    var persisted_agents = persistence.getSelectedAgents();\r\n    \r\n    if(persisted_agents!==null && persisted_agents.length > 0){\r\n        this.setState({\r\n            selected_agents: persisted_agents\r\n        })\r\n    }\r\n\r\n    var persisted_tracked_users = persistence.getTrackedUsers();\r\n    \r\n    if(persisted_tracked_users!==null && persisted_tracked_users.length > 0){\r\n        this.setState({\r\n            tracked_users: persisted_tracked_users\r\n        })\r\n    }\r\n\r\n    //subscribe to the parent channel to receive location updates from agents\r\n    this.pubnub.subscribe({\r\n        channels: this.state.channels_list\r\n    })\r\n\r\n    this.subscribeAndGetAllAgentsLocation();\r\n\r\n    this.pubnub.addListener({\r\n      status: (st) => {\r\n            if(st.category === \"PNNetworkUpCategory\"){\r\n                this.pubnub.publish(\r\n                    {\r\n                        message: {\r\n                            \r\n                        },\r\n                        channel: \"request_tracked\",\r\n                        sendByPost: false, // true to send via POST\r\n                        storeInHistory: false //override default storage options\r\n                    },\r\n                    (status, response) => {\r\n                        // handle status, response\r\n                    }\r\n                );\r\n\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"You are online.\"\r\n                })\r\n            }\r\n\r\n            if(st.category === \"PNConnectedCategory\"){\r\n                this.pubnub.publish(\r\n                    {\r\n                        message: {\r\n                            \r\n                        },\r\n                        channel: \"request_tracked\",\r\n                        sendByPost: false, // true to send via POST\r\n                        storeInHistory: false //override default storage options\r\n                    },\r\n                    (status, response) => {\r\n                        // handle status, response\r\n                    }\r\n                );\r\n\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"You are online.\"\r\n                })\r\n            }\r\n\r\n            if (st.category === \"PNReconnectedCategory\") {\r\n                this.pubnub.publish(\r\n                    {\r\n                        message: {\r\n                            \r\n                        },\r\n                        channel: \"request_tracked\",\r\n                        sendByPost: false, // true to send via POST\r\n                        storeInHistory: false //override default storage options\r\n                    },\r\n                    (status, response) => {\r\n                        // handle status, response\r\n                    }\r\n                );\r\n\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"You are back online.\"\r\n                })\r\n            }\r\n\r\n            if (st.category === \"PNNetworkIssuesCategory\") {\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"It appears there is a network issue.\"\r\n                })\r\n            }\r\n\r\n            if (st.category === \"PNNetworkDownCategory\") {\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"It appears the network is down.\"\r\n                })\r\n            }\r\n\r\n            if (st.category === \"PNTimeoutCategory\") {\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"Could not connect to the internet.\"\r\n                })\r\n            }\r\n      },\r\n      message: (message) => {\r\n          \r\n          if(message.channel === \"users_monitored\"){\r\n                var tracked_user_id = this.state.tracked_users.find(id => id === message.message.user_id);\r\n\r\n                if(!tracked_user_id){\r\n                    this.setState(state => {\r\n                        var tracked_users = state.tracked_users;\r\n\r\n                        tracked_users.push(message.message.user_id);\r\n\r\n                        persistence.saveTrackedUsers(tracked_users);\r\n\r\n                        return {\r\n                            tracked_users: tracked_users\r\n                        }\r\n                    })\r\n                }\r\n          }\r\n\r\n          if(message.channel === \"agent_tracked\"){\r\n                this.setState(state => {\r\n                    var agents = state.selected_agents;\r\n                    var laser_agents = state.laser_agents;\r\n                  \r\n                    if(agents.length > 1){\r\n                        this.state.selected_agents.map(age => \r\n                            {\r\n                                var laser_agent = laser_agents.find(age => age.agent._id === message.channel);\r\n\r\n                                if(laser_agent){\r\n                                    laser_agents.splice(laser_agent,1,message.message);\r\n                                }\r\n\r\n                                if(age!=null && (age.agent._id === message.message.agent._id)){\r\n                                    agents.push(message.message);\r\n\r\n                                    persistence.saveSelectedAgents(agents);\r\n                                }\r\n                            }\r\n                        );\r\n                    }\r\n        \r\n                    return {  \r\n                        selected_agents: agents,\r\n                        laser_agents: laser_agents\r\n                    }\r\n                })\r\n          }\r\n          \r\n          if(message.channel === \"agent_untracked\"){\r\n                this.setState(state => {\r\n                    var agents = state.selected_agents;\r\n                    var laser_agents = state.laser_agents;\r\n                \r\n                    if(agents.length > 1){\r\n                        this.state.selected_agents.map(age => \r\n                            {\r\n                                if(age!=null && (age.agent._id === message.message.agent._id)){\r\n                                    agents.splice(agents.indexOf(message.message),1);\r\n\r\n                                    persistence.saveSelectedAgents(agents);\r\n                                }\r\n                            }\r\n                        );\r\n                    }\r\n        \r\n                    return {  \r\n                        selected_agents: agents\r\n                    }\r\n                })\r\n          }\r\n\r\n          if(message.channel === \"issue_resolved\"){\r\n                /*this.getLocationsDate(this.state.date);\r\n                this.getEmergenciesDate(this.state.date);\r\n    \r\n                this.setState({\r\n                    latest: []\r\n                })\r\n    \r\n                this.getLatestLocations();\r\n                this.getLatestEmergencies();*/\r\n          }\r\n\r\n          //We need a way to send the agents and users tracked to the other browsers\r\n          if(message.channel === \"request_tracked\"){\r\n\r\n                //splitting the publish into two so that the message wont be too heavy\r\n\r\n                this.pubnub.publish(\r\n                    {\r\n                        message: {\r\n                            agents: this.getSelectedAgentsIds()\r\n                        },\r\n                        channel: \"response_tracked\",\r\n                        sendByPost: false, // true to send via POST\r\n                        storeInHistory: false //override default storage options\r\n                    },\r\n                    (status, response) => {\r\n                        // handle status, response\r\n                    }\r\n                );\r\n\r\n                this.pubnub.publish(\r\n                    {\r\n                        message: {\r\n                            users: this.state.tracked_users\r\n                        },\r\n                        channel: \"response_tracked\",\r\n                        sendByPost: false, // true to send via POST\r\n                        storeInHistory: false //override default storage options\r\n                    },\r\n                    (status, response) => {\r\n                        // handle status, response\r\n                    }\r\n                );\r\n          }\r\n\r\n          if(message.channel === \"response_tracked\"){\r\n              if(message.message.agents){\r\n                  if(message.message.agents.length > 0){\r\n                    this.setSelectedAgentsFromIds(message.message.agents);\r\n                  }\r\n              }\r\n\r\n              if(message.message.users){\r\n                  if(message.message.users.length > 0){\r\n                        this.setState(state => {\r\n                            var tracked_users = state.tracked_users;\r\n    \r\n                            message.message.users.map(user_id => {\r\n                                var found = tracked_users.find(id => id === user_id)\r\n\r\n                                if(!found){\r\n                                    tracked_users.push(user_id)\r\n                                }\r\n                            })\r\n\r\n                            persistence.saveTrackedUsers(tracked_users);\r\n    \r\n                            return{\r\n                                tracked_users: tracked_users\r\n                            }\r\n                        })\r\n                  }\r\n              }\r\n          }\r\n          \r\n          var tracked_user_id = this.state.tracked_users.find(id => id === message.channel);\r\n\r\n          if(tracked_user_id){\r\n                //the message is from a user currently being monitored\r\n                if(message.userMetadata && message.userMetadata.action === \"user_location_update\"){\r\n                    var arr = this.state.emergencies.map(emergency => {\r\n                        if(emergency.user === tracked_user_id){\r\n                            emergency.latitude = message.message.latitude;\r\n                            emergency.longitude = message.message.longitude;\r\n                            return emergency;\r\n                        }\r\n                        else{\r\n                            return emergency;\r\n                        }\r\n                    })\r\n\r\n                    //var found_emergency = state.emergencies.find(emergency => emergency.user === state.tracked_user_id);\r\n\r\n                    this.setState(state => {\r\n                        return{\r\n                            emergencies: arr\r\n                        }\r\n                    })\r\n                }\r\n          }\r\n          \r\n          if(message.channel === this.state.tracked_area ){\r\n              if(message.userMetadata && message.userMetadata.action === \"agent_location_update\"){\r\n                  var agents = this.state.laser_agents;\r\n                \r\n                  var found_agent;\r\n\r\n                  this.state.laser_agents.map(agent => {    \r\n                      if(agent.agent._id === message.message.agent._id){\r\n                          found_agent = agent;\r\n                      }\r\n                  })\r\n\r\n                  if(found_agent){\r\n                        this.state.laser_agents.map(agent => {\r\n                            if(agent.agent._id === message.message.agent._id){\r\n                                    found_agent = agent;\r\n\r\n                                    if(this.state.laser_agents.length<=0||!found_agent){\r\n                                        agents.push(message.message);\r\n                                    }\r\n                                    else{\r\n                                        agents = this.state.laser_agents.map(agent => {\r\n                                            \r\n                                            if(agent.agent._id === message.message.agent._id){\r\n                                                \r\n                                                if(this.state.selected_agents.length>0){\r\n                                                    var found_agent_on_route_possibly;\r\n\r\n                                                    this.state.selected_agents.forEach((age,index) => {\r\n                                                        if(age){\r\n                                                            if(age.agent._id === message.message.agent._id){\r\n                                                                found_agent_on_route_possibly = age;\r\n                                                            }\r\n                                                        }\r\n                                                    });\r\n                                                \r\n                                                    if(found_agent_on_route_possibly){\r\n                                                        message.message.is_on_route = found_agent_on_route_possibly.is_on_route;\r\n                                                    }\r\n                                                    else{\r\n                                                        message.message.is_on_route = false;\r\n                                                    }\r\n                                                }\r\n                                                else{\r\n                                                    message.message.is_on_route = false;\r\n                                                }\r\n\r\n                                                return message.message;\r\n                                            }\r\n                                            else{\r\n                                                if(this.state.selected_agents.length>0){\r\n                                                    var found_agent_on_route_possibly;\r\n\r\n                                                    this.state.selected_agents.forEach((age,index) => {\r\n                                                        if(age){\r\n                                                            if(age.agent._id === message.message.agent._id){\r\n                                                                found_agent_on_route_possibly = age;\r\n                                                            }\r\n                                                        }\r\n                                                    });\r\n                                                \r\n                                                    if(found_agent_on_route_possibly){\r\n                                                        agent.is_on_route = found_agent_on_route_possibly.is_on_route;\r\n                                                    }\r\n                                                    else{\r\n                                                        agent.is_on_route = false;\r\n                                                    }\r\n                                                }\r\n                                                else{\r\n                                                    agent.is_on_route = false;\r\n                                                }\r\n\r\n                                                return agent;\r\n                                            }\r\n                                        });\r\n                                    }\r\n                            }\r\n                        })\r\n                  }\r\n                  else{\r\n                      agents.push(message.message);\r\n                  }\r\n                  \r\n                  this.setState(state => {\r\n                      return {\r\n                            laser_agents: agents\r\n                      }\r\n                  })\r\n                  \r\n              }\r\n          }\r\n          \r\n          //Check if its an agent that is replying to a request, could also be used in future to check for other messages from the selected agents\r\n          if(this.state.selected_agents.length > 0){\r\n              \r\n              this.state.selected_agents.forEach((agent,index) => {\r\n                  \r\n                  if(agent!==null && (agent.agent._id === message.channel)){\r\n                      \r\n                      if(message.userMetadata && message.userMetadata.action === \"route_request_response\"){\r\n                          if(message.message.response===true){\r\n\r\n                              this.setState(state => {\r\n                                  var agents = state.selected_agents;\r\n\r\n                                  console.log({agents});\r\n\r\n                                  agents[index].is_on_route = true;\r\n                                  \r\n                                  console.log({agents});\r\n\r\n                                  persistence.saveSelectedAgents(agents);\r\n\r\n                                  return {\r\n                                        selected_agents: agents,\r\n                                        action: \"message\",\r\n                                        action_message: \"Agent \" +agent.agent.firstname +\" \" +agent.agent.lastname +\" is now en route to \"+this.state.clicked_user.full_name+\"'s location\"\r\n                                  }\r\n                              })\r\n\r\n                          }\r\n                          else{\r\n                              this.setState(state => {\r\n                                var agents = state.selected_agents;\r\n\r\n                                agents[index].is_on_route = false;\r\n                                \r\n                                persistence.saveSelectedAgents(agents);\r\n\r\n                                return {\r\n                                    selected_agents: agents,\r\n                                    action: \"message\",\r\n                                    action_message: \"Agent \" +agent.agent.firstname +\" \" +agent.agent.lastname +\" declined the request to go to \"+this.state.clicked_user.full_name+\"'s location\"\r\n                                }\r\n                              })\r\n                          }\r\n                      }\r\n                      \r\n                      if(message.userMetadata && message.userMetadata.action === \"route_completed\"){\r\n                          //show message that agent has completed route\r\n                          if(message.message){\r\n                              this.setState(state => {\r\n                                  var array = state.route_responses_from_agents;\r\n\r\n                                  var user = message.message;\r\n\r\n                                  array.push({user:user, agent:agent})\r\n\r\n                                  return {\r\n                                      route_responses_from_agents : array\r\n                                  }\r\n                              })\r\n                          }\r\n                      }\r\n                  }\r\n              })\r\n          }\r\n\r\n      }\r\n    });\r\n\r\n    const socket = socketIOClient(socket_io_url);\r\n\r\n    socket.on(\"connect\", \r\n      () => console.log(\"connected to socket io\")\r\n    );\r\n\r\n    socket.on(\"reconnect\", attempt => {\r\n        console.log(\"Socket IO Reconnected\")\r\n        //successfully reconnected\r\n        //get the lastest data\r\n    })\r\n\r\n    //Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\r\n    socket.on(\"emergency\", \r\n      data => {\r\n         if(data){\r\n             this.setState(state => {\r\n              let arr = state.emergencies;\r\n              let lat = state.latest;\r\n              \r\n              lat.push(data);\r\n              arr.push(data)\r\n\r\n              return {\r\n                  play_sound: true,\r\n                  latest: lat,\r\n                  clicked_marker_id: data._id,\r\n                  zoom: 18,\r\n                  emergencies: arr,\r\n                  center: {\r\n                    lat: data.latitude,\r\n                    lng: data.longitude\r\n                 }\r\n              }\r\n            })\r\n         }\r\n      }\r\n    );\r\n\r\n    socket.on(\"call\", \r\n      data => {\r\n        if(data){\r\n            this.setState(state => {\r\n              let arr = state.locations;\r\n              let lat = state.latest;\r\n              \r\n              lat.push(data);\r\n              arr.push(data)\r\n\r\n              return {\r\n                  play_sound: true,\r\n                  latest: lat,\r\n                  clicked_marker_id: data._id,\r\n                  zoom: 18,\r\n                  locations: arr,\r\n                  center: {\r\n                    lat: data.latitude,\r\n                    lng: data.longitude\r\n                 }\r\n              }\r\n          })\r\n        }\r\n      }\r\n    );\r\n\r\n    this.getLocations();\r\n    this.getEmergencies();\r\n  }\r\n\r\n  async getLocationsDate(date){\r\n        const response = await API.getLocations({date})\r\n        \r\n        if(response==\"error\"){\r\n            this.setState({\r\n                action: \"err_calls_load\",\r\n                locations: [],\r\n                filtered_locations: []\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.locations){\r\n            console.log({response})\r\n            if(this.state.action === \"loading\"){\r\n                this.setState({\r\n                    action: \"close\",\r\n                    locations: response.data.locations,\r\n                    filtered_locations: response.data.locations\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    locations: response.data.locations,\r\n                    filtered_locations: response.data.locations\r\n                })\r\n            }\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\",\r\n                locations: [],\r\n                filtered_locations: []\r\n            })\r\n        }\r\n  }\r\n\r\n  async getEmergenciesDate(date){\r\n        const response = await API.getEmergencies({date})\r\n        \r\n        if(response==\"error\"){\r\n            this.setState({\r\n                action: \"err_emergency_load\",\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.emergencies){\r\n            console.log({response})\r\n            if(this.state.action === \"loading\"){\r\n                this.setState({\r\n                    action: \"close\",\r\n                    emergencies: response.data.emergencies,\r\n                    filtered_emergencies: response.data.emergencies\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    emergencies: response.data.emergencies,\r\n                    filtered_emergencies: response.data.emergencies\r\n                })\r\n            }\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\",\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n            })\r\n        }\r\n  }\r\n\r\n  async getLatestLocations(){\r\n        var self = this;\r\n        const response = await API.getLocations({date: today})\r\n\r\n        if(response==\"error\"){\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.locations&&response.data.locations.length>0){\r\n            self.setState(state => {\r\n                var loc = state.latest;\r\n\r\n                for(var i = 0; i<response.data.locations.length; i++){\r\n                    loc.push(response.data.locations[i]);\r\n                }\r\n\r\n                loc = utils.sortDates(loc);\r\n\r\n                return {\r\n                    latest : loc\r\n                }\r\n                \r\n            })\r\n        }\r\n  }\r\n\r\n  async getLatestEmergencies(){\r\n        var self = this;\r\n        const response = await API.getEmergencies({date: today})\r\n\r\n        if(response==\"error\"){\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.emergencies&&response.data.emergencies.length>0){\r\n            self.setState(state => {\r\n                var loc = state.latest;\r\n\r\n                for(var i = 0; i<response.data.emergencies.length; i++){\r\n                    loc.push(response.data.emergencies[i]);\r\n                }\r\n\r\n                loc = utils.sortDates(loc);\r\n\r\n                return {\r\n                    latest : loc\r\n                }\r\n            })\r\n        }\r\n  }\r\n\r\n  async getEmergencies(){\r\n        const response = await API.getEmergencies({date: today})\r\n\r\n        if(response==\"error\"){\r\n            //show error message\r\n            this.setState({\r\n                action: \"err_emergency_load\",\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.emergencies&&response.data.emergencies.length>0){\r\n            this.setState(state => {\r\n            var loc = state.latest;\r\n\r\n            for(var i = 0; i<response.data.emergencies.length; i++){\r\n                loc.push(response.data.emergencies[i]);\r\n            }\r\n\r\n            loc = utils.sortDates(loc);\r\n\r\n            if(this.state.action === \"loading\"){\r\n                return {\r\n                    action: \"close\",\r\n                    latest : loc,\r\n                    emergencies: response.data.emergencies,\r\n                    filtered_emergencies: response.data.emergencies\r\n                }\r\n            }\r\n            else{\r\n                return {\r\n                    latest : loc,\r\n                    emergencies: response.data.emergencies,\r\n                    filtered_emergencies: response.data.emergencies\r\n                }\r\n            }\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\",\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n            })\r\n        }\r\n  }\r\n\r\n  async getLocations(){\r\n\r\n        const response = await API.getLocations({date: today})\r\n\r\n        if(response==\"error\"){\r\n            //show error message\r\n            this.setState({\r\n                action: \"err_calls_load\",\r\n                locations: [],\r\n                filtered_locations: []\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.locations&&response.data.locations.length>0){\r\n            this.setState(state => {\r\n                var loc = state.latest;\r\n\r\n                for(var i = 0; i<response.data.locations.length; i++){\r\n                    loc.push(response.data.locations[i]);\r\n                }\r\n\r\n                loc = utils.sortDates(loc);\r\n\r\n                if(this.state.action === \"loading\"){\r\n                    return {\r\n                        action: \"close\",\r\n                        latest : loc,\r\n                        locations: response.data.locations,\r\n                        filtered_locations: response.data.locations\r\n                    }\r\n                }\r\n                else{\r\n                    return {\r\n                        latest : loc,\r\n                        locations: response.data.locations,\r\n                        filtered_locations: response.data.locations\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\",\r\n                locations: [],\r\n                filtered_locations: []\r\n            })\r\n        }\r\n  }\r\n\r\n  handleSongFinishedPlaying(){\r\n      this.setState({\r\n          play_sound: false\r\n      })\r\n }\r\n\r\n\r\nrender(){\r\n    let sound;\r\n\r\n    if(this.state.play_sound){\r\n       sound = <Sound\r\n       url={alert}\r\n       playStatus={Sound.status.PLAYING}\r\n       playFromPosition={1 /* in milliseconds */}\r\n       onLoading={this.handleSongLoading}\r\n       onPlaying={this.handleSongPlaying}\r\n       onFinishedPlaying={this.handleSongFinishedPlaying}/>;\r\n    }\r\n    else{\r\n      sound = \"\";\r\n    }\r\n\r\n    let show_location_side_bar;\r\n    \r\n    if(this.state.location_side_bar_open){\r\n      show_location_side_bar = <LocationSidebar closeSidebar={this.closeSideBar} location={this.state.clicked_user} resolve={this.showConfirmResolveLocation} />\r\n    }\r\n    else{\r\n      show_location_side_bar = \"\";\r\n    }\r\n\r\n    let show_side_bar;\r\n    \r\n    if(this.state.side_bar_open){\r\n      show_side_bar = <Sidebar closeSidebar={this.closeSideBar} emergency={this.state.clicked_user} startMonitoring={this.startMonitoring} resolve={this.showConfirmResolveEmergency} />\r\n    }\r\n    else{\r\n      show_side_bar = \"\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"laser-parent-div\" style={mapStyle}>\r\n            <Latest latest={this.state.latest} latestClicked={this.latestClicked}/>\r\n            {show_location_side_bar}\r\n            {show_side_bar}\r\n            {this.state.agent_side_bar_open ? <AgentDetails removeAgentFromRoute={this.removeAgentFromRoute} closeAgentSideBar={this.closeAgentSideBar} addAgentToMonitoring={this.addAgentToMonitoring} agent={this.state.clicked_agent} user={this.state.clicked_user}/> : \"\" }\r\n\r\n            <TopPanel logout={this.logout} onCalendarOpen={this.onCalendarOpen} onDateChange={this.onDateChange} date={this.state.date} selected_call={this.state.selected_call} \r\n            onCallsChanged={this.onCallsChanged} selected_emergency={this.state.selected_emergency} onEmergenciesChanged={this.onEmergenciesChanged} getAllAgentsLocation={this.subscribeAndGetAllAgentsLocation}/>\r\n\r\n            {sound}\r\n            <Map google={this.props.google} \r\n                style={mapStyle}\r\n                onReady={this.fetchPlaces}\r\n                initialCenter={this.state.center}\r\n                center={this.state.center}\r\n                zoom={this.state.zoom}>\r\n        \r\n                {this.getLocationsMarkers()}\r\n                {this.getEmergenciesMarkers()}\r\n                {this.getAgentMarkers()}\r\n\r\n            </Map>\r\n\r\n            <Action action={this.state.action} closeAction={this.closeAction} message={this.state.action_message}/>\r\n\r\n            {\r\n                this.state.route_responses_from_agents.length > 0 ?  <RouteStatus route_response={this.state.route_responses_from_agents[this.state.route_responses_from_agents.length - 1]} removeAgentFromRouteAndCloseRouteResponse={this.removeAgentFromRouteAndCloseRouteResponse} closeRouteResponse={this.closeRouteResponse} /> : \"\"\r\n            }\r\n\r\n            {\r\n                this.state.showConfirm.status===true ? <ConfirmAction  yesClicked={this.state.showConfirm.action===\"emergency\" ? this.resolveEmergency : this.resolveCall} noClicked={this.hideConfirm} message={this.state.message} /> : \"\"\r\n            }\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: ('AIzaSyADNxHcgsHDyx_OSbqxBg5xB5lV2YJDcKI')\r\n})(App)\r\n","import React, {Component} from \"react\";\r\n\r\nimport Utils from '../../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nexport default function Agent(props){\r\n    return  <div className=\"col-md-6 col-sm-6\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-7 col-sm-7\">\r\n                        <h4>{props.agent.firstname} {props.agent.lastname}</h4>\r\n                        <h5>{utils.getDate(props.agent.created)}</h5>\r\n                    </div>\r\n                    <div className=\"col-md-5 col-sm-5\">\r\n                        <h4>{props.agent.phone_number}</h4>\r\n                        <h4>{props.agent.department}</h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-offset-6 col-md-6 col-sm-offset-6 col-sm-6\">\r\n                        <button onClick={props.deleteClicked(props.agent)} className=\"laserbtn laset-red-bg laser-inline\">delete</button>\r\n                        <button onClick={props.editClicked(props.agent)} className=\"laserbtn laset-blue-bg laser-inline\">edit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n} ","import React from 'react';\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nimport BarLoader from 'react-spinners/BarLoader';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst override = {\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    border: \"0px solid #000000\"\r\n}\r\n\r\nexport default function Loader(props){\r\n    return  <div>\r\n                <ReactModal \r\n                    isOpen={props.isLoading}\r\n                    className=\"LoadingModal\"\r\n                    overlayClassName=\"LoadingOverlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n\r\n                    <BarLoader\r\n                        css={override}\r\n                        sizeUnit={\"px\"}\r\n                        size={80}\r\n                        color={'#2E86C1'}\r\n                        loading={props.isLoading}\r\n                    />\r\n\r\n                </ReactModal>\r\n            </div>\r\n}","import React, {Component} from \"react\";\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nimport Loader from '../../components/Loader';\r\nimport Action from '../Action';\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst btn_style_left = {\r\n    marginRight: \"8px\"\r\n}\r\n\r\nconst btn_style_right = {\r\n    marginLeft: \"8px\",\r\n    marginRight: \"16px\"\r\n}\r\n\r\nconst controls_style = {\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class Agents extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            phone_number: \"\",\r\n            department: \"\",\r\n            password: \"\",\r\n            password_again: \"\",\r\n            error: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.submitClicked = this.submitClicked.bind(this);\r\n        this.onFieldChanged = this.onFieldChanged.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async submitClicked(e){\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            error: \"\"\r\n        })\r\n\r\n        if(this.state.firstname.length<=0 || this.state.lastname.length<=0){\r\n            this.setState({\r\n                error: \"Please enter a valid first and last name\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.phone_number.length < 11){\r\n            this.setState({\r\n                error: \"Please enter a valid phone number\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.department.length < 0){\r\n            this.setState({\r\n                error: \"Please enter a valid department\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.password.length < 8 || this.state.password_again.length < 8){\r\n            this.setState({\r\n                error: \"Please enter a valid password with 8 characters or more\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.password !== this.state.password_again){\r\n            this.setState({\r\n                error: \"Passwords dont match\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            firstname: this.state.firstname,\r\n            lastname: this.state.lastname,\r\n            phone_number: this.state.phone_number,\r\n            department: this.state.department,\r\n            password: this.state.password,\r\n            password_again: this.state.password_again\r\n        }\r\n\r\n        const response = await API.createAgent(data)\r\n        \r\n        if(response==\"error\"){\r\n            this.setState({\r\n                action: \"message\",\r\n                action_message: \"An error occurred creating agent, Please try again later\"\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data){\r\n            this.hideLoading()\r\n            this.props.closeModalGetAgents();\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\"\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.departments.length > 0){\r\n            this.setState(state => {\r\n                return { \r\n                    department: this.props.departments[0]\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onFieldChanged(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"Modal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center blue-text\">Add Agent</h4>\r\n                    <br/>\r\n                    <h5 className=\"laser-red-text\">{ this.state.error ? this.state.error : \"\" }</h5>\r\n                    <br/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"category\"><h5>First Name</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"firstname\" type=\"text\" name=\"firstname\" onChange={this.onFieldChanged} value={this.state.firstname} className=\"form-control bt-login-input\" placeholder=\"First Name\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"category\"><h5>Last Name</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"lastname\" type=\"text\" name=\"lastname\" onChange={this.onFieldChanged} value={this.state.lastname} className=\"form-control bt-login-input\" placeholder=\"Last Name\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Phone Number</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"phone_number\" type=\"phone\" name=\"phone_number\" onChange={this.onFieldChanged} value={this.state.phone_number} className=\"form-control bt-login-input\" placeholder=\"Phone Number\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Department</h5></label>\r\n                            <select style={controls_style} className=\"form-control\" id=\"department\" name=\"department\" value={this.state.department} onChange={this.onFieldChanged}>\r\n                                {\r\n                                    this.props.departments.map(dep => {\r\n                                        return <option>{dep}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Password</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"password\" type=\"password\" name=\"password\" onChange={this.onFieldChanged} value={this.state.password} className=\"form-control bt-login-input\" placeholder=\"Password\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Password Again</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"password_again\" type=\"password\" name=\"password_again\" onChange={this.onFieldChanged} value={this.state.password_again} className=\"form-control bt-login-input\" placeholder=\"Password Again\"/>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <button className=\"laser-inline laser-blue-bg laserbtn\" style={btn_style_left} onClick={e => this.submitClicked(e)}>create</button>\r\n                    <button className=\"laser-inline grey-bg laserbtn laser-black-text\" style={btn_style_right} onClick={this.props.closeModal}>cancel</button>\r\n\r\n                </ReactModal>\r\n\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\n\r\nimport Agent from \"./Agent\"\r\nimport { Link } from 'react-router-dom'\r\nimport AddAgent from \"./AddAgent\"\r\nimport EditAgent from \"./EditAgent\"\r\nimport ConfirmAction from '../ConfirmAction';\r\nimport Loader from '../../components/Loader';\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nconst controls_style = {\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class Agents extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            agents: [],\r\n            departments: [],\r\n            agents_filter: [],\r\n            selected_department: \"\",\r\n            selected_agent: {},\r\n            showConfirm: false,\r\n            showAddAgent: false,\r\n            showDeleteAgent: false,\r\n            showEditAgent: false,\r\n            confirmMessage: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.getAgents = this.getAgents.bind(this);\r\n        this.getAgentsDepartment = this.getAgentsDepartment.bind(this);\r\n        this.getDepartments = this.getDepartments.bind(this);\r\n        this.deleteAgent = this.deleteAgent.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalGetAgents = this.closeModalGetAgents.bind(this);\r\n        this.showDeleteAgent = this.showDeleteAgent.bind(this);\r\n        this.showAddAgent = this.showAddAgent.bind(this);\r\n        this.showEditAgent = this.showEditAgent.bind(this);\r\n        this.onDepartmentChanged = this.onDepartmentChanged.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async getAgents(){\r\n        this.showLoading();\r\n\r\n        const response = await(API.getAgents());\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState({\r\n                agents: response.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async getAgentsDepartment(filter){\r\n        this.showLoading();\r\n\r\n        const response = await(API.getAgentsDepartment(filter));\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState({\r\n                agents: response.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async getDepartments(){\r\n        this.showLoading();\r\n\r\n        const response = await(API.getDepartments());\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState(state => {\r\n                var deps = [\"All\"];\r\n\r\n                response.data.map(dep => {\r\n                    deps.push(dep.name);\r\n                })\r\n                \r\n                return {\r\n                    departments: deps\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    async deleteAgent(agent){\r\n        this.showLoading();\r\n\r\n        const response = await(API.deleteAgent(agent._id));\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState(state => {\r\n                var agents = this.state.agents;\r\n\r\n                agents.splice(this.agents.indexOf(agent),1);\r\n\r\n                return {\r\n                    agents: agents\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({\r\n            showConfirm: false,\r\n            showAddAgent: false,\r\n            showDeleteAgent: false,\r\n            showEditAgent: false\r\n        })\r\n    }\r\n\r\n    closeModalGetAgents(){\r\n        this.setState({\r\n            showConfirm: false,\r\n            showAddAgent: false,\r\n            showDeleteAgent: false,\r\n            showEditAgent: false\r\n        });\r\n        \r\n        this.getAgents();\r\n    }\r\n\r\n    showDeleteAgent(agent){\r\n        this.setState({\r\n            selected_agent: agent,\r\n            showConfirm: true,\r\n            confirmMessage: \"Are you sure you want to delete agent \" +agent.firstname +\"'s profile? This cant be undone.\"\r\n        })\r\n    }\r\n\r\n    showAddAgent(){\r\n        this.setState({\r\n            showAddAgent:  true\r\n        })\r\n    }\r\n\r\n    showEditAgent(agent){\r\n        this.setState({\r\n            showEditAgent:  true,\r\n            selected_agent: agent\r\n        })\r\n    }\r\n\r\n    onDepartmentChanged(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n        this.setState({\r\n            selected_department: value\r\n        })\r\n\r\n        if(value===\"All\"){\r\n            this.getAgents();\r\n        }\r\n        else{\r\n            this.getAgentsDepartment(value);\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAgents();\r\n        this.getDepartments();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-parent-div\">\r\n                <div className=\"laser-top-panel\">\r\n                    <h4 className=\"laser-inline\">Laser Emergency Admin - Agents</h4>\r\n                    <div className=\"laser-controls\">\r\n                        <Link style={controls_style} to={'/'} className=\"nav-link white-text link laser-inline laser-150-width\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">View Map</button>\r\n                        </Link>\r\n\r\n                        <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"filter\" name=\"filter\" value={this.state.selected_department} onChange={this.onDepartmentChanged}>\r\n                            {\r\n                                this.state.departments.map(dep => {\r\n                                    return <option>{dep}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                        <button onClick={this.showAddAgent} style={controls_style} className=\"laser-inline laser-100-width laserbtn laser-white_border-blue-bg\">Add Agent</button>\r\n                        <Link style={controls_style} to={'/departments'} className=\"nav-link white-text link\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">Departments</button>\r\n                        </Link>\r\n                        <button onClick={e => this.props.logout(e)} className=\"form-control laser-inline laser-100-width laser-grey-bg laserbtn pull-right\">logout</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"container\">\r\n                        {\r\n                            this.state.agents.map(agent => {\r\n                                return <Agent agent={agent} key={agent._id} deleteClicked={this.deleteAgent} editClicked={this.deleteAgent} />\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <Loader isLoading={this.state.isLoading}/>\r\n                \r\n                {\r\n                    this.state.showAddAgent ? <AddAgent closeModal={this.closeModal} departments={this.state.departments} closeModalGetAgents={this.closeModalGetAgents} /> : \"\"\r\n                }\r\n\r\n                {\r\n                    this.state.showDeleteAgent===true ? <ConfirmAction  yesClicked={this.deleteAgent} noClicked={this.closeModal} message={this.state.confirmMessage} /> : \"\"\r\n                }\r\n            </div>   \r\n        );\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\n\r\nimport Utils from '../../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nconst marginLeft = {\r\n    marginLeft: \"16px\"\r\n}\r\n\r\nexport default function Department(props){\r\n    return  <div className=\"col-md-4 col-sm-4\">\r\n                <div className=\"laser-item shadow\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-7 col-sm-7\">\r\n                            <h4 className=\"laser-black-text\">{props.department.name}</h4>\r\n                        </div>\r\n                        <div className=\"col-md-5 col-sm-5\">\r\n                            <h5>{utils.getDate(props.department.created)}</h5>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-offset-6 col-md-6 col-sm-offset-6 col-sm-6\">\r\n                            <button onClick={e => props.deleteClicked(e, props.department)} className=\"laserbtn laser-red-bg laser-inline\">delete</button>\r\n                            <button style={marginLeft} onClick={e => props.editClicked(e, props.department)} className=\"laserbtn laser-blue-bg laser-inline\">edit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n} ","import React, {Component} from \"react\";\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nimport Loader from '../../components/Loader';\r\nimport Action from '../Action';\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst btn_style_left = {\r\n    marginLeft: \"16px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nconst btn_style_right = {\r\n    marginLeft: \"8px\",\r\n    marginRight: \"16px\"\r\n}\r\n\r\nexport default class AddDepartment extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            action: \"loading\",\r\n            action_message: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n        this.onFieldChanged = this.onFieldChanged.bind(this);\r\n        this.saveDepartment = this.saveDepartment.bind(this)\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async saveDepartment(){\r\n        if(this.state.name.length > 0){\r\n            const response = await API.createDepartment(this.state.name)\r\n        \r\n            if(response==\"error\"){\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"An error occurred creating department, Please try again later\"\r\n                })\r\n\r\n                return;\r\n            }\r\n\r\n            if(response&&response.data){\r\n                this.props.closeModal();\r\n                this.props.getDepartments();\r\n            }\r\n            else{\r\n                this.setState({\r\n                    action: \"close\"\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onFieldChanged(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"ConfirmModal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center blue-text\">Add Department</h4>\r\n                    <label className=\"laser-white-text\" htmlFor=\"category\"><h5>Department Name</h5></label>\r\n                    <input required autoComplete=\"off\" id=\"name\" type=\"text\" name=\"name\" onChange={this.onFieldChanged} value={this.state.name} className=\"form-control bt-login-input\" placeholder=\"Department Name\"/>\r\n                    <br/>\r\n                    <button className=\"laser-inline laser-blue-bg laserbtn\" style={btn_style_left} onClick={this.saveDepartment}>save</button>\r\n                    <button className=\"laser-inline grey-bg laserbtn\" style={btn_style_right} onClick={this.props.closeModal}>cancel</button>\r\n                </ReactModal>\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../../components/Loader';\r\nimport Department from './Department'\r\nimport ConfirmAction from '../ConfirmAction';\r\nimport AddDepartment from './AddDepartment'\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nconst controls_style = {\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class Departments extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            departments: [],\r\n            selected_department: {},\r\n            showConfirm: false,\r\n            showAddDepartment: false,\r\n            showDeleteDepartment: false,\r\n            showEditDepartment: false,\r\n            confirmMessage: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.getDepartments = this.getDepartments.bind(this);\r\n        this.deleteDepartment = this.deleteDepartment.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.showDeleteDepartment = this.showDeleteDepartment.bind(this);\r\n        this.showAddDepartment = this.showAddDepartment.bind(this);\r\n        this.showEditDepartment = this.showEditDepartment.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async getDepartments(){\r\n        this.showLoading();\r\n\r\n        const response = await(API.getDepartments());\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState({\r\n                departments: response.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async deleteDepartment(){\r\n        this.showLoading();\r\n        \r\n        const response = await(API.deleteDepartment(this.state.selected_department._id));\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data){\r\n            this.closeModal();\r\n            this.setState(state => {\r\n                var departments = state.departments;\r\n\r\n                departments.splice(departments.indexOf(state.selected_department),1);\r\n\r\n                return {\r\n                    departments: departments,\r\n                    selected_department: {}\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    showDeleteDepartment(e, department){\r\n        this.setState({\r\n            selected_department: department,\r\n            showDeleteDepartment: true,\r\n            confirmMessage: \"Are you sure you want to delete the selected department?\"\r\n        })\r\n        e.preventDefault();\r\n    }\r\n\r\n    showAddDepartment(){\r\n        this.setState({\r\n            showAddDepartment:  true\r\n        })\r\n    }\r\n\r\n    showEditDepartment(e, department){\r\n        this.setState({\r\n            showEditDepartment:  true,\r\n            selected_department: department\r\n        })\r\n        e.preventDefault();\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({\r\n            showConfirm: false,\r\n            showAddDepartment: false,\r\n            showDeleteDepartment: false,\r\n            showEditDepartment: false\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getDepartments();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-parent-div\">\r\n                <div className=\"laser-top-panel\">\r\n                    <h4 className=\"laser-inline\">Laser Emergency Admin - Departments</h4>\r\n                    <div className=\"laser-controls\">\r\n                        <Link style={controls_style} to={'/'} className=\"nav-link white-text link laser-inline laser-150-width\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">View Map</button>\r\n                        </Link>\r\n\r\n                        <Link style={controls_style} to={'/agents'} className=\"nav-link white-text link\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">Agents</button>\r\n                        </Link>\r\n                        <Link style={controls_style} to={'/departments'} className=\"nav-link white-text link\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">Departments</button>\r\n                        </Link>\r\n                        <button style={controls_style} onClick={this.showAddDepartment} className=\"laser-inline laser-150-width laserbtn laser-white_border-blue-bg\">Add Department</button>\r\n                        <button onClick={e => this.props.logout(e)} className=\"form-control laser-inline laser-100-width laser-grey-bg laserbtn pull-right\">logout</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"container\">\r\n                        <br/>\r\n                        {\r\n                            this.state.departments.map(department => {\r\n                                return <Department key={department._id} department={department} deleteClicked={this.showDeleteDepartment} editClicked={this.showEditDepartment} />\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.showAddDepartment ? <AddDepartment getDepartments={this.getDepartments} closeModal={this.closeModal}/> : \"\"\r\n                }\r\n                {\r\n                    this.state.showDeleteDepartment===true ? <ConfirmAction  yesClicked={this.deleteDepartment} noClicked={this.closeModal} message={this.state.confirmMessage} /> : \"\"\r\n                }\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from 'react'\r\n\r\nimport Loader from '../components/Loader';\r\n\r\n//Our Auth Service\r\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nconst zero_margin = {\r\n    marginBottom: \"0px\",\r\n    marginTop: \"0px\"\r\n}\r\n\r\nexport default class Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state= {\r\n            username: \"\",\r\n            password: \"\",\r\n            error: \"\",\r\n            isLoading: false\r\n        }\r\n        \r\n        this.submitClicked = this.submitClicked.bind(this);\r\n        this.onFieldChanged = this.onFieldChanged.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n    \r\n    async submitClicked(e, item){\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            error: \"\"\r\n        })\r\n\r\n        if(this.state.username.length<=0 || this.state.password.length<=0){\r\n            this.setState({\r\n                error: \"Please make sure all fields are completed\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        this.showLoading();\r\n\r\n        const response = await(Auth.login(this.state.username, this.state.password));\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n\r\n            this.setState({\r\n                error: \"An error occurred login you in. Please try again later.\"\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if(response && response.data){\r\n            this.props.login();\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n    onFieldChanged(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-login-bg\">\r\n                <div className=\"laser-login-div laser-shadow\">\r\n                    <h2 className=\"bt-blue-text laser-white-text\" style={zero_margin}>Admin</h2>\r\n                    <h2 className=\"bt-blue-text laser-white-text\" style={zero_margin}>Login</h2>\r\n                    <br/>\r\n                    <br/>\r\n                    <h5 className=\"laser-red-text\">{ this.state.error ? this.state.error : \"\" }</h5>\r\n                    <br/>\r\n                    <label className=\"laser-white-text\" htmlFor=\"category\"><h5>User Name</h5></label>\r\n                    <input required autoComplete=\"off\" id=\"username\" type=\"text\" name=\"username\" onChange={this.onFieldChanged} value={this.state.username} className=\"form-control bt-login-input\" placeholder=\"User Name\"/>\r\n                    <br/>\r\n                    <label className=\"laser-white-text\" htmlFor=\"category\"><h5>Password</h5></label>\r\n                    <input required autoComplete=\"off\" id=\"password\" type=\"password\" name=\"password\" onChange={this.onFieldChanged} value={this.state.password} className=\"form-control bt-login-input\" placeholder=\"Password\"/>\r\n                    <br/>\r\n                    <br/>\r\n                    <button className=\"laser-blue-bg laserbtn\" onClick={this.submitClicked}>CONTINUE</button>    \r\n                </div>\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport Agents from \"./components/agents/Agents\";\r\nimport Departments from \"./components/agents/Departments\";\r\nimport Login from \"./components/Login\"\r\n\r\nimport AuthHelperMethods from './auth/AuthHelperMethods';\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nclass Laser extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            isLogin : false\r\n        }\r\n\r\n        this.logout = this.logout.bind(this);\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    logout = () => {\r\n        Auth.logout();\r\n\r\n        this.setState({\r\n            isLogin: true\r\n        })\r\n    }\r\n\r\n    login = () => {\r\n        this.setState({\r\n            isLogin: false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Route path=\"/\" exact render={(props) => (\r\n                        Auth.loggedIn() === true\r\n                            ? <App {...props} logout={this.logout}/>\r\n                            : <Redirect to='/login' login={this.login} />\r\n                        )} />\r\n\r\n                    <Route path=\"/agents\" exact render={(props) => (\r\n                        Auth.loggedIn() === true\r\n                            ?  Auth.getPriviledge() === \"full_control\" ? <Agents {...props} logout={this.logout} /> : <Redirect to='/' login={this.login} />\r\n                            : <Redirect to='/login' login={this.login} />\r\n                        )}/>\r\n\r\n                    <Route path=\"/departments\" exact render={(props) => (\r\n                        Auth.loggedIn() === true\r\n                            ? Auth.getPriviledge() === \"full_control\" ? <Departments {...props} logout={this.logout}/> : <Redirect to='/' login={this.login} />\r\n                            : <Redirect to='/login' login={this.login} />\r\n                        )}/>\r\n\r\n                    <Route path=\"/login\" exact render={(props) => (\r\n                        Auth.loggedIn() === false\r\n                            ? <Login {...props} login={this.login} />\r\n                            : <Redirect to='/' {...props} logout={this.logout} />\r\n                        )} />\r\n                    {\r\n                        this.state.isLogin==true ? <Redirect to='/login' login={this.login} /> : \"\"\r\n                    }\r\n                </Router>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Laser;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Laser from './Laser';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Laser />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/police_car.50f1bfa3.svg\";","module.exports = __webpack_public_path__ + \"static/media/police_car_enroute.b28e98ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire_truck.52c00ef9.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire_truck_enroute.ab5818de.svg\";","module.exports = __webpack_public_path__ + \"static/media/ambulance.0a3c991c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ambulance_enroute.133779a8.svg\";"],"sourceRoot":""}