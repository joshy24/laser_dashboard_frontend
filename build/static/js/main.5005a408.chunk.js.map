{"version":3,"sources":["components/Sidebar.js","components/LocationSideBar.js","App.js","Laser.js","serviceWorker.js","index.js","emergency.png","call.png","logo.svg"],"names":["Sidebar","props","react_default","a","createElement","className","onClick","e","closeSidebar","emergency","full_name","emergency_numbers","length","map","item","index","key","email","phone_number","device","full_address","sub_admin_address","reasons","getReasons","LocationSidebar","location","reason","mapStyle","height","width","dateStyle","color","border","zIndex","marginLeft","marginRight","padding","controls_style","instance","axios","create","baseURL","timeout","headers","Accept","App","_this$state","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","locations","emergencies","filtered_locations","filtered_emergencies","side_bar_open","location_side_bar_open","selected_emergency","center","lat","lng","selected_call","defineProperty","Date","closeSideBar","bind","assertThisInitialized","onCallsChanged","onEmergenciesChanged","onDateChange","onCalendarOpen","setState","date","_this2","post","then","response","console","log","data","catch","error","event","target","value","arr","name","emer","includes","toLowerCase","push","selected_location","latitude","longitude","_this3","loc","dist","_id","onLocationClicked","title","position","icon","url","call_icon","_this4","onEmergencyClicked","emergency_icon","mapProps","_this5","show_location_side_bar","show_side_bar","style","entry_default","maxDate","onChange","id","google","onReady","fetchPlaces","initialCenter","zoom","getLocationsMarkers","getEmergenciesMarkers","Component","GoogleApiWrapper","apiKey","Laser","react_router_dom","react_router","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","src_Laser","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5005a408.chunk.js","sourcesContent":["'use strict'\r\n\r\nimport React, { Component } from 'react';\r\n\r\nexport default function Sidebar(props){\r\n    return <div className=\"laser-side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeSidebar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-red-text\"><b>Emergency Location Details</b></h4> \r\n                <br/>\r\n                <h5><b>Persons Name</b> - {props.emergency.full_name}</h5>\r\n                <br/>\r\n                <h5><b>Person's Emergency Contacts</b> - {(props.emergency.emergency_numbers && props.emergency.emergency_numbers.length>0) ? ParseContacts(props.emergency.emergency_numbers) : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Email Address</b> - {props.emergency.email ? props.emergency.email : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.emergency.phone_number ? props.emergency.phone_number : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Device</b> - {props.emergency.device ? props.emergency.device : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Emergency Full Address</b> - {props.emergency.full_address ? props.emergency.full_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Emergency Admin Address</b> - {props.emergency.sub_admin_address ? props.emergency.sub_admin_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Reason For Emergency</b> - {props.emergency.reasons ? getReasons(props.emergency.reasons) : \"\"}</h5>\r\n           </div>\r\n}\r\n\r\nfunction ParseContacts(arr){\r\n    return arr.map((item,index) => {\r\n        return <p key={index}>{item}</p>\r\n    })\r\n}\r\n\r\nfunction getReasons(reasons){\r\n    switch(reasons.length){\r\n        case 0:\r\n          return \"\";\r\n        break;\r\n        case 1:\r\n          return reasons[0]+\" issue\";\r\n        break;\r\n        case 2:\r\n          return reasons[0] +\" issue, \" +reasons[1] +\" issue\";\r\n        break;\r\n        case 3:\r\n          return reasons[0] +\" issue, \" +reasons[1] +\" issue, \" +reasons[2] +\" issue\";\r\n        break;\r\n    }\r\n}","'use strict'\r\n\r\nimport React, { Component } from 'react';\r\n\r\nexport default function LocationSidebar(props){\r\n    return <div className=\"laser-side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeSidebar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-blue-text\"><b>Call Location Details</b></h4> \r\n                <br/>\r\n                <h5><b>Persons Name</b> - {props.location.full_name}</h5>\r\n                <br/>\r\n                <h5><b>Email Address</b> - {props.location.email ? props.location.email : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.location.phone_number ? props.location.phone_number : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Call Full Address</b> - {props.location.full_address ? props.location.full_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Call Admin Address</b> - {props.location.sub_admin_address ? props.location.sub_admin_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Reason For Call</b> - {props.location.reason ? props.location.reason : \"\"}</h5>\r\n           </div>\r\n}\r\n","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport emergency_icon from './emergency.png'\nimport call_icon from './call.png'\nimport {Map, InfoWindow, Marker, GoogleApiWrapper, Circle} from 'google-maps-react';\nimport Sidebar from './components/Sidebar';\nimport LocationSidebar from './components/LocationSideBar';\n\nimport DatePicker from 'react-date-picker';\n\nimport './App.css';\n\nimport axios from 'axios';\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nconst mapStyle = {\n  height: '100vh', \n  width: '100%'\n}\n\nconst dateStyle = {\n   color: \"#111111\",\n   border: \"1px solid #FFFFFF\",\n   zIndex: \"6000\",\n   marginLeft:\"8px\",\n   marginRight: \"8px\",\n   padding: \"8px\"\n}\n\nconst controls_style = {\n  marginLeft:\"8px\",\n  marginRight: \"8px\"\n}\n\nconst instance = axios.create({\n  baseURL: 'http://18.195.71.164',\n  timeout: 15000,\n  headers: {'Accept': 'application/json;q=0.9,*/*;q=0.8'}\n});\n\nconst locations_url = \"/api/getLocations\";\nconst emergencies_url = \"/api/getEmergencies\";\n\nclass App extends Component{\n\n  constructor(props){\n     super(props);\n\n     this.state = {\n      locations: [], \n      emergencies: [], \n      filtered_locations: [],\n      filtered_emergencies: [],\n      side_bar_open: false, \n      location_side_bar_open: false, \n      selected_emergency: {}, \n      center: {lat: 6.5244,lng: 3.3792}, \n      selected_call:\"Calls (All)\", \n      selected_emergency:\"Emergencies (All)\",\n      date: new Date()\n     }\n     this.closeSideBar = this.closeSideBar.bind(this);\n     this.onCallsChanged = this.onCallsChanged.bind(this);\n     this.onEmergenciesChanged = this.onEmergenciesChanged.bind(this);\n     this.onDateChange = this.onDateChange.bind(this);\n     this.onCalendarOpen = this.onCalendarOpen.bind(this);\n  }\n\n  onCalendarOpen(){\n    this.setState({\n      side_bar_open: false, \n      location_side_bar_open: false\n    })\n  }\n\n  onDateChange(date){\n     this.setState({\n        date: date\n     })\n\n     instance.post(locations_url,{date:date})\n        .then(response => {\n          console.log(response);\n            if(response&&response.data&&response.data.locations){\n              this.setState({\n                locations: response.data.locations,\n                filtered_locations: response.data.locations\n              })\n            }\n            else{\n              this.setState({\n                locations: [],\n                filtered_locations: []\n              })\n            }\n        })\n        .catch(error => {\n            console.log({error})\n        })\n\n    instance.post(emergencies_url,{date:date})\n        .then(response => {\n          console.log(response);\n            if(response&&response.data&&response.data.emergencies){\n               this.setState({\n                  emergencies: response.data.emergencies,\n                  filtered_emergencies: response.data.emergencies\n               })\n            }\n            else{\n              this.setState({\n                emergencies: [],\n                filtered_emergencies: []\n             })\n            }\n        })\n        .catch(error => {\n          console.log({error})\n        })\n\n  }\n\n  onCallsChanged(event){\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n\n      let arr = [];\n      if(this.state.locations.length>0){\n          if(value===\"Calls (All)\"){\n            this.setState(state => ({\n              filtered_locations: state.locations,\n              side_bar_open: false, \n              location_side_bar_open: false\n            }))\n          }\n          else if(value===\"None\"){\n            this.setState({\n              filtered_locations: [],\n              side_bar_open: false, \n              location_side_bar_open: false\n            })\n          }\n          else{\n            this.state.locations.map(emer => {\n              if(emer.reason.includes(value.toLowerCase())){\n                arr.push(emer)\n              }\n            })\n            \n            if(arr.length>0){\n              this.setState({\n                filtered_locations: arr,\n                side_bar_open: false, \n                location_side_bar_open: false\n              })\n            }\n            else{\n              //show message that there are no locations found for that parameter\n      \n              this.setState({\n                  filtered_locations:[],\n                  selected_call:\"Calls (All)\",\n                  side_bar_open: false, \n                  location_side_bar_open: false\n              })\n            }\n          }\n      }\n  }\n\n  onEmergenciesChanged(event){\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n\n      let arr = [];\n      if(this.state.emergencies.length>0){\n          if(value===\"Emergencies (All)\"){\n            this.setState(state => ({\n              filtered_emergencies: state.emergencies,\n              side_bar_open: false, \n              location_side_bar_open: false\n            }))\n          }\n          else if(value===\"None\"){\n            this.setState({\n              filtered_emergencies:[],\n              side_bar_open: false, \n              location_side_bar_open: false\n            })\n          }\n          else{\n            this.state.emergencies.map(emer => {\n              if(emer.reasons&&emer.reasons.length>0){\n                emer.reasons.map(reason => {\n                    if(value.toLowerCase().includes(reason)){\n                        arr.push(emer)\n                    }\n                })\n              }\n            })\n      \n            if(arr.length>0){\n              this.setState({\n                filtered_emergencies:arr,\n                side_bar_open: false, \n                location_side_bar_open: false\n              })\n            }\n            else{\n              //show message that there are no emregencies found for that parameter\n      \n              this.setState({\n                  filtered_emergencies: [],\n                  selected_emergency:\"Emergencies (All)\",\n                  side_bar_open: false, \n                  location_side_bar_open: false\n              })\n            }\n          }\n      }    \n  }\n\n  onLocationClicked(location,e){\n    this.setState({\n      selected_location: location,\n      side_bar_open: false,\n      location_side_bar_open: true,\n      center: {\n         lat: location.latitude,\n         lng: location.longitude\n      }\n   })\n  }\n\n  onEmergencyClicked(emergency,e){\n    this.setState({\n       selected_emergency: emergency,\n       side_bar_open: true,\n       location_side_bar_open: false,\n       center: {\n          lat: emergency.latitude,\n          lng: emergency.longitude\n       }\n    })\n }\n\n  getLocationsMarkers(){\n    let locations_ui;\n\n    if(this.state.filtered_locations.length>0){\n      locations_ui = this.state.filtered_locations.map(loc => {\n        return  <Marker key={loc._id} onClick={e => this.onLocationClicked(loc,e)}\n                  name={loc.reason} \n                  title={loc.full_name}\n                  position={{lat: loc.latitude, lng: loc.longitude}}\n                  icon={{\n                    url: call_icon\n                  }}/> \n      })\n    }\n    else{\n      locations_ui = \"\";\n    }\n     \n    return locations_ui;\n  }\n\n  getEmergenciesMarkers(){\n    let emergencies_ui;\n\n    if(this.state.filtered_emergencies.length>0){\n        emergencies_ui = this.state.filtered_emergencies.map(emer => {\n          return <Marker key={emer._id} onClick={e => this.onEmergencyClicked(emer,e)}\n                    name={emer.reasons[0]} \n                    title={emer.full_name}\n                    position={{lat: emer.latitude, lng: emer.longitude}}\n                    icon={{\n                      url: emergency_icon\n                    }}/>\n        })\n    }\n    else{\n        emergencies_ui = \"\";\n    }\n     \n    return emergencies_ui;\n\n  }\n\n  closeSideBar(e){\n    this.setState({\n       side_bar_open: false,\n       location_side_bar_open: false,\n       selected_location: {},\n       selected_emergency: {}\n    })\n  }\n\n  fetchPlaces(mapProps, map) {\n    \n  }\n\n  componentDidMount(){\n    instance.post(locations_url,{})\n        .then(response => {\n          console.log(response);\n            if(response&&response.data&&response.data.locations){\n              this.setState({\n                locations: response.data.locations,\n                filtered_locations: response.data.locations\n              })\n            }\n            else{\n              this.setState({\n                locations: [],\n                filtered_locations: []\n              })\n            }\n        })\n        .catch(error => {\n            console.log({error})\n        })\n\n    instance.post(emergencies_url,{})\n        .then(response => {\n          console.log(response);\n            if(response&&response.data&&response.data.emergencies){\n               this.setState({\n                  emergencies: response.data.emergencies,\n                  filtered_emergencies: response.data.emergencies\n               })\n            }\n            else{\n              this.setState({\n                emergencies: [],\n                filtered_emergencies: []\n             })\n            }\n        })\n        .catch(error => {\n          console.log({error})\n        })\n  }\n\n  render(){\n\n    let show_location_side_bar;\n    \n    if(this.state.location_side_bar_open){\n      show_location_side_bar = <LocationSidebar closeSidebar={this.closeSideBar} location={this.state.selected_location}/>\n    }\n    else{\n      show_location_side_bar = \"\";\n    }\n\n    let show_side_bar;\n    \n    if(this.state.side_bar_open){\n      show_side_bar = <Sidebar closeSidebar={this.closeSideBar} emergency={this.state.selected_emergency}/>\n    }\n    else{\n      show_side_bar = \"\";\n    }\n\n    return (\n      <div style={mapStyle}>\n          {show_location_side_bar}\n          {show_side_bar}\n          <div className=\"laser-top-panel\">\n             <h4 className=\"laser-inline\">Laser Emergency Admin Platform</h4>\n             <div className=\"laser-controls laser-inline\">\n                \n                <div className=\"laser-inline\" style={dateStyle}>\n                  <DatePicker\n                    onCalendarOpen={this.onCalendarOpen}\n                    maxDate={new Date()}\n                    style={dateStyle}\n                    onChange={this.onDateChange}\n                    value={this.state.date}/>\n                </div>  \n\n                <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"calls\" name=\"calls\" value={this.selected_call} onChange={this.onCallsChanged}>\n                    <option>Calls (All)</option>\n                    <option>Emergency Management(LASEMA)</option>\n                    <option>Police</option>\n                    <option>Distress</option>\n                    <option>Environmental and Special Offences Task Force</option>\n                    <option>Fire / Safety Services</option>\n                    <option>Environmental / Noise Pollution</option>\n                    <option>Broken Pipe / Water Leakage</option>\n                    <option>Pothole / Collapsed Road</option>\n                    <option>None</option>\n                </select>\n                \n                <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"emergencies\" name=\"emergencies\" value={this.selected_call} onChange={this.onEmergenciesChanged}>\n                    <option>Emergencies (All)</option>\n                    <option>Police Cases</option>\n                    <option>Hospital Cases</option>\n                    <option>Fire Cases</option>\n                    <option>None</option>\n                </select>\n                \n             </div>\n          </div>\n          <Map google={this.props.google} \n              style={mapStyle}\n              onReady={this.fetchPlaces}\n              initialCenter={this.state.center}\n              center={this.state.center}\n              zoom={11}>\n    \n            {this.getLocationsMarkers()}\n            {this.getEmergenciesMarkers()}\n\n          </Map>\n      </div>\n    );\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyADNxHcgsHDyx_OSbqxBg5xB5lV2YJDcKI')\n})(App)\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nfunction Laser(){\r\n    return (\r\n        <Router>\r\n            <Route path=\"/\" exact component={App} />\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Laser;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Laser from './Laser';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Laser />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/emergency.5372e70f.png\";","module.exports = __webpack_public_path__ + \"static/media/call.8f7505e8.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}