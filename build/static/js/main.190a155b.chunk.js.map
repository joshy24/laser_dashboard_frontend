{"version":3,"sources":["icons/emergency_with_circle.gif","icons/call_with_circle.gif","icons/emergency.gif","icons/call.gif","icons/police_car_right.png","icons/fire_truck_right.png","icons/ambulance_right.png","icons/police_car_left.png","icons/fire_truck_left.png","icons/ambulance_left.png","icons/police_car_right_enroute.png","icons/fire_truck_right_enroute.png","icons/ambulance_right_enroute.png","icons/police_car_left_enroute.png","icons/fire_truck_left_enroute.png","icons/ambulance_left_enroute.png","sounds/alert.mp3","logo.svg","icons/car_test.png","utils/Utils.js","components/Sidebar.js","components/Text.js","components/Action.js","components/AgentDetails.js","components/LocationSideBar.js","components/TopPanel.js","components/LatestItem.js","components/Latest.js","components/RouteStatus.js","components/ConfirmAction.js","utils/Persistence.js","auth/AuthHelperMethods.js","api/Api.js","App.js","components/agents/Agent.js","components/Loader.js","components/agents/AddAgent.js","components/agents/Agents.js","components/agents/Department.js","components/agents/AddDepartment.js","components/agents/Departments.js","components/Login.js","Laser.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Util","str","moment","utc","format","arr","sort","a","b","Date","created","utils","Utils","Sidebar","props","react_default","createElement","className","onClick","e","closeSidebar","startMonitoring","emergency","resolve","is_trackable","getTime","full_name","emergency_numbers","length","map","item","index","key","email","phone_number","device","full_address","sub_admin_address","reasons","getReasons","style","width","Text","closeAction","text","Action","action","message","getText","background","border","color","padding","borderRadius","style_remove_btn","AgentDetails","closeAgentSideBar","agent","firstname","lastname","department","is_on_route","removeAgentFromRoute","user","addAgentToMonitoring","LocationSidebar","location","reason","dateStyle","zIndex","marginLeft","marginRight","controls_style","TopPanel","_this","this","getAllAgentsLocation","entry_default","onCalendarOpen","maxDate","onChange","onDateChange","value","date","id","name","selected_call","onCallsChanged","selected_emergency","onEmergenciesChanged","logout","Component","LatestItem","itemClicked","getColor","laser_type","textAlign","styling","height","Latest","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","preventDefault","latestClicked","_this2","react_scroll_to_bottom_lib_default","latest","_id","box_style","margin","float","OrderStatus","react_modal_lib_default","isOpen","overlayClassName","contentLabel","closeRouteResponse","route_response","removeAgentFromRouteAndCloseRouteResponse","ReactModal","setAppElement","btn_style_left","btn_style_right","ConfirmAction","yesClicked","noClicked","Persistence","selected_agents","localStorage","setItem","JSON","stringify","parse","getItem","tracked_users","AuthHelperMethods","login","username","password","axios","then","res","setToken","data","token","catch","err","loggedIn","getToken","isTokenExpired","decode","exp","now","console","log","idToken","removeItem","getConfirm","answer","url","headers","Accept","Content-Type","method","baseURL","timeout","_checkStatus","response","status","error","Error","statusText","Axios","getLocations","getEmergencies","getDepartments","persistence","mapStyle","todays_date","toISOString","today","App","showConfirm","locations","emergencies","filtered_locations","filtered_emergencies","side_bar_open","agent_side_bar_open","location_side_bar_open","clicked_user","clicked_agent","center","lat","lng","zoom","show_red_circle","show_blue_circle","clicked_marker_id","play_sound","channels_list","laser_agents","route_responses_from_agents","action_message","tracked_area","pubnub","PubNubReact","publishKey","subscribeKey","init","closeSideBar","onAgentClicked","getAgentIcon","subscribeAndGetAllAgentsLocation","handleSongFinishedPlaying","getLocationsDate","getEmergenciesDate","getLatestEmergencies","getLatestLocations","getSelectedAgentsIds","setSelectedAgentsFromIds","resolveCall","resolveEmergency","hideConfirm","showConfirmResolveEmergency","showConfirmResolveLocation","year","split","setState","publish","channel","sendByPost","storeInHistory","splice","indexOf","saveTrackedUsers","_this3","pn_gcm","notification_body","agents","list","new_selected_agents","age","new_list","found_agent","find","new_found_agent","assign","unsubscribe","channels","saveSelectedAgents","_this4","array","_this5","latitude","longitude","push","subscribe","_this6","setHours","getHours","event","target","emer","includes","toLowerCase","_this7","loc","dist","onLocationClicked","title","position","icon","blue_circle","call_icon","_this8","onEmergencyClicked","red_circle","emergency_icon","_this9","i","bearing","police_car_left_enroute","police_car_left","police_car_right_enroute","police_car_right","fire_car_left_enroute","fire_car_left","fire_car_right_enroute","fire_car_right","ambulance_car_left_enroute","ambulance_car_left","ambulance_car_right_enroute","ambulance_car_right","selected_location","mapProps","ids","found_agent_id","sel","_this10","persisted_agents","getSelectedAgents","persisted_tracked_users","getTrackedUsers","addListener","st","category","tracked_user_id","user_id","users","userMetadata","found_agent_on_route_possibly","forEach","socket","socketIOClient","on","attempt","API","self","sortDates","_this11","_this12","sound","show_location_side_bar","show_side_bar","react_sound_lib_default","alert","playStatus","Sound","PLAYING","playFromPosition","onLoading","handleSongLoading","onPlaying","handleSongPlaying","onFinishedPlaying","Latest_Latest","TopPanel_TopPanel","google","onReady","fetchPlaces","initialCenter","getLocationsMarkers","getEmergenciesMarkers","getAgentMarkers","GoogleApiWrapper","apiKey","override","display","Loader","isLoading","BarLoader_default","css","sizeUnit","size","loading","Agents","password_again","submitClicked","onFieldChanged","showLoading","hideLoading","departments","type","checked","defineProperty","htmlFor","required","autoComplete","placeholder","dep","closeModal","agents_filter","selected_department","selected_agent","showAddAgent","showDeleteAgent","showEditAgent","confirmMessage","getAgents","getAgentsDepartment","deleteAgent","onDepartmentChanged","filter","deps","react_router_dom","to","AddAgent_Agents","Department","getDate","deleteClicked","editClicked","AddDepartment","saveDepartment","Departments","showAddDepartment","showDeleteDepartment","showEditDepartment","deleteDepartment","AddDepartment_AddDepartment","Auth","zero_margin","marginBottom","marginTop","Login","history","Laser","isLogin","react_router","path","exact","render","src_App_0","Agents_Agents","Departments_Departments","Login_Login","Boolean","window","hostname","match","ReactDOM","src_Laser","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0ECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0ECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6FCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,snBCEnBC,mGACTC,GAIJ,OAHWC,KAAOD,GACOE,MAAMC,OAAO,kDAKlCH,GAIJ,OAHWC,KAAOD,GACOE,MAAMC,OAAO,8CAKhCC,GAON,OANAA,EAAIC,KAAK,SAAiBC,EAAGC,GAGzB,OAFY,IAAIC,KAAKF,EAAEG,SACX,IAAID,KAAKD,EAAEE,WAIpBL,WCnBTM,GAAQ,IAAIC,GAEH,SAASC,GAAQC,GAC5B,OAAOC,EAAAR,EAAAS,cAAA,OAAKC,UAAU,kBACVF,EAAAR,EAAAS,cAAA,MAAIC,UAAU,YAAYC,QAAS,SAAAC,GAAC,OAAIL,EAAMM,aAAaD,KAA3D,UACAJ,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,MAAIC,UAAU,8BAA6BF,EAAAR,EAAAS,cAAA,wCAC3CD,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAQC,UAAU,wBAAwBC,QAAS,SAAAC,GAAC,OAAIL,EAAMO,gBAAgBF,EAAGL,EAAMQ,aAAvF,oBACAP,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAQC,UAAU,yBAAyBC,QAAS,SAAAC,GAAC,OAAIL,EAAMS,QAAQJ,KAAvE,WACAJ,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,sBAAJ,MAAwBF,EAAMQ,UAAUE,aAAe,MAAQ,MAC/DT,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,iBAAJ,MAAmBL,GAAMc,QAAQX,EAAMQ,UAAUZ,UACjDK,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,yBAAJ,MAA2BF,EAAMQ,UAAUI,WAC3CX,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,wCAAJ,MAA2CF,EAAMQ,UAAUK,mBAAqBb,EAAMQ,UAAUK,kBAAkBC,OAAO,EAAmBd,EAAMQ,UAAUK,kBAiB7JE,IAAI,SAACC,EAAKC,GACjB,OAAOhB,EAAAR,EAAAS,cAAA,KAAGgB,IAAKD,GAAQD,KAlBkK,IACjLf,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,0BAAJ,MAA4BF,EAAMQ,UAAUW,MAAQnB,EAAMQ,UAAUW,MAAQ,IAC5ElB,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,yBAAJ,MAA2BF,EAAMQ,UAAUY,aAAepB,EAAMQ,UAAUY,aAAe,IACzFnB,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,mBAAJ,MAAqBF,EAAMQ,UAAUa,OAASrB,EAAMQ,UAAUa,OAAS,IACvEpB,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,mCAAJ,MAAqCF,EAAMQ,UAAUc,aAAetB,EAAMQ,UAAUc,aAAe,IACnGrB,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,oCAAJ,MAAsCF,EAAMQ,UAAUe,kBAAoBvB,EAAMQ,UAAUe,kBAAoB,IAC9GtB,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,iCAAJ,MAAmCF,EAAMQ,UAAUgB,QAUnE,SAAoBA,GAChB,OAAOA,EAAQV,QACX,KAAK,EACH,MAAO,GACT,KAAK,EACH,OAAOU,EAAQ,GAAG,aACpB,KAAK,EACH,OAAOA,EAAQ,GAAI,eAAgBA,EAAQ,GAAI,aACjD,KAAK,EACH,OAAOA,EAAQ,GAAI,eAAgBA,EAAQ,GAAI,eAAgBA,EAAQ,GAAI,cAnBRC,CAAWzB,EAAMQ,UAAUgB,SAAW,KClCnH,IAAME,GAAQ,CACVC,MAAO,QAGI,SAASC,GAAK5B,GACzB,OAAQC,EAAAR,EAAAS,cAAA,OAAKC,UAAU,iCACXF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,OACXF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,aACXF,EAAAR,EAAAS,cAAA,MAAIwB,MAAOA,IAAOzB,EAAAR,EAAAS,cAAA,QAAME,QAAS,SAAAC,GAAC,OAAIL,EAAM6B,YAAYxB,IAAIF,UAAU,oBAApD,YAEtBF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,aACXF,EAAAR,EAAAS,cAAA,UAAKF,EAAM8B,SCTpB,SAASC,GAAO/B,GAE3B,OAAOC,EAAAR,EAAAS,cAAA,WAIX,SAAiB8B,EAAQC,EAASJ,GAC9B,OAAOG,GACH,IAAK,UAEL,OAAO/B,EAAAR,EAAAS,cAAC0B,GAAD,CAAME,KAAM,aAAcD,YAAaA,IAG9C,IAAK,QAEL,MAAO,GAEP,IAAK,iBAEL,OAAO5B,EAAAR,EAAAS,cAAC0B,GAAD,CAAME,KAAM,yCAA0CD,YAAaA,IAE1E,IAAK,qBAEL,OAAO5B,EAAAR,EAAAS,cAAC0B,GAAD,CAAME,KAAM,+CAAgDD,YAAaA,IAEhF,IAAK,UAEL,OAAO5B,EAAAR,EAAAS,cAAC0B,GAAD,CAAME,KAAMG,EAASJ,YAAaA,KAzBhCK,CAAQlC,EAAMgC,OAAQhC,EAAMiC,QAASjC,EAAM6B,cCJ5D,IAAMH,GAAQ,CACVS,WAAY,UACZC,OAAQ,oBACRC,MAAO,UACPC,QAAS,MACTC,aAAc,OAGZC,GAAmB,CACrBL,WAAY,UACZC,OAAQ,oBACRC,MAAO,UACPC,QAAS,MACTC,aAAc,OAGH,SAASE,GAAazC,GAEjC,OAAOC,EAAAR,EAAAS,cAAA,OAAKC,UAAU,wBACVF,EAAAR,EAAAS,cAAA,MAAIC,UAAU,YAAYC,QAAS,SAAAC,GAAC,OAAIL,EAAM0C,kBAAkBrC,KAAhE,UACAJ,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,MAAIC,UAAU,gCAA+BF,EAAAR,EAAAS,cAAA,4BAC7CD,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,wBAAJ,MAA0BF,EAAM2C,MAAMA,MAAMC,UAA5C,IAAwD5C,EAAM2C,MAAMA,MAAME,UAC1E5C,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,yBAAJ,MAA2BF,EAAM2C,MAAMA,MAAMvB,cAC7CnB,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,mBAAJ,MAAqBF,EAAM2C,MAAMA,MAAMG,YACvC7C,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,6BAAJ,MAA+BF,EAAM2C,MAAMrB,cAC3CrB,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,yBAAJ,MAA2BF,EAAM2C,MAAMI,YAAc/C,EAAM2C,MAAMA,MAAMC,UAAU,iDAAqD5C,EAAM2C,MAAMA,MAAMC,UAAU,iBAClK3C,EAAAR,EAAAS,cAAA,SAAIF,EAAM2C,MAAMI,YAAc9C,EAAAR,EAAAS,cAAA,UAAQwB,MAAOc,GAAkBpC,QAAS,SAAAC,GAAC,OAAIL,EAAMgD,qBAAqB3C,EAAGL,EAAM2C,QAAQxC,UAAU,IAArG,2BAA2I,IACzKF,EAAAR,EAAAS,cAAA,WACCF,EAAMiD,KAAKrC,UAAaX,EAAAR,EAAAS,cAAA,UAAQwB,MAAOA,GAAOtB,QAAS,SAAAC,GAAC,OAAIL,EAAMkD,qBAAqB7C,EAAGL,EAAM2C,QAAQxC,UAAU,IAA1F,cAAyGH,EAAM2C,MAAMA,MAAMC,UAA3H,IAAuI5C,EAAM2C,MAAMA,MAAME,SAAzJ,OAAuK7C,EAAMiD,KAAKrC,UAAlL,gBAAoN,IChC7P,IAAMf,GAAQ,IAAIC,GAEH,SAASqD,GAAgBnD,GACpC,OAAOC,EAAAR,EAAAS,cAAA,OAAKC,UAAU,kBACVF,EAAAR,EAAAS,cAAA,MAAIC,UAAU,YAAYC,QAAS,SAAAC,GAAC,OAAIL,EAAMM,aAAaD,KAA3D,UACAJ,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,MAAIC,UAAU,+BAA8BF,EAAAR,EAAAS,cAAA,mCAC5CD,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,iBAAJ,MAAmBL,GAAMc,QAAQX,EAAMoD,SAASxD,UAChDK,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,yBAAJ,MAA2BF,EAAMoD,SAASxC,WAC1CX,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,0BAAJ,MAA4BF,EAAMoD,SAASjC,MAAQnB,EAAMoD,SAASjC,MAAQ,IAC1ElB,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,yBAAJ,MAA2BF,EAAMoD,SAAShC,aAAepB,EAAMoD,SAAShC,aAAe,IACvFnB,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,8BAAJ,MAAgCF,EAAMoD,SAAS9B,aAAetB,EAAMoD,SAAS9B,aAAe,IAC5FrB,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,+BAAJ,MAAiCF,EAAMoD,SAAS7B,kBAAoBvB,EAAMoD,SAAS7B,kBAAoB,IACvGtB,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,4BAAJ,MAA8BF,EAAMoD,SAASC,OAASrD,EAAMoD,SAASC,OAAS,8BCpBxFC,GAAY,CACdjB,MAAO,UACPD,OAAQ,oBACRmB,OAAQ,OACRC,WAAW,MACXC,YAAa,MACbnB,QAAS,OAGPoB,GAAiB,CACnBF,WAAW,MACXC,YAAa,OAGIE,oLAET,IAAAC,EAAAC,KACJ,OACI5D,EAAAR,EAAAS,cAAA,OAAKC,UAAU,mBACXF,EAAAR,EAAAS,cAAA,MAAIC,UAAU,qBAAd,mDACAF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,kBACXF,EAAAR,EAAAS,cAAA,UAAQE,QAAS,SAAAC,GAAC,OAAIuD,EAAK5D,MAAM8D,qBAAqBzD,IAAIF,UAAU,mEAApE,qBAEAF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,eAAeuB,MAAO4B,IACjCrD,EAAAR,EAAAS,cAAC6D,GAAAtE,EAAD,CACIuE,eAAgBH,KAAK7D,MAAMgE,eAC3BC,QAAS,IAAItE,KACb+B,MAAO4B,GACPY,SAAUL,KAAK7D,MAAMmE,aACrBC,MAAOP,KAAK7D,MAAMqE,QAG1BpE,EAAAR,EAAAS,cAAA,UAAQwB,MAAOgC,GAAgBvD,UAAU,4CAA4CmE,GAAG,QAAQC,KAAK,QAAQH,MAAOP,KAAK7D,MAAMwE,cAAeN,SAAUL,KAAK7D,MAAMyE,gBAC/JxE,EAAAR,EAAAS,cAAA,6BACAD,EAAAR,EAAAS,cAAA,8CACAD,EAAAR,EAAAS,cAAA,wBACAD,EAAAR,EAAAS,cAAA,0BACAD,EAAAR,EAAAS,cAAA,+DACAD,EAAAR,EAAAS,cAAA,wCACAD,EAAAR,EAAAS,cAAA,iDACAD,EAAAR,EAAAS,cAAA,6CACAD,EAAAR,EAAAS,cAAA,0CACAD,EAAAR,EAAAS,cAAA,uBAGJD,EAAAR,EAAAS,cAAA,UAAQwB,MAAOgC,GAAgBvD,UAAU,4CAA4CmE,GAAG,cAAcC,KAAK,cAAcH,MAAOP,KAAK7D,MAAM0E,mBAAoBR,SAAUL,KAAK7D,MAAM2E,sBAChL1E,EAAAR,EAAAS,cAAA,mCACAD,EAAAR,EAAAS,cAAA,8BACAD,EAAAR,EAAAS,cAAA,gCACAD,EAAAR,EAAAS,cAAA,4BACAD,EAAAR,EAAAS,cAAA,uBAGJD,EAAAR,EAAAS,cAAA,UAAQE,QAAS,SAAAC,GAAC,OAAIuD,EAAK5D,MAAM4E,OAAOvE,IAAIF,UAAU,oEAAtD,mBAvCkB0E,aCdhChF,GAAQ,IAAIC,GAEZ4B,GAAQ,CACVS,WAAY,gBACZC,OAAQ,qBAGG,SAAS0C,GAAW9E,GAC/B,OAAOC,EAAAR,EAAAS,cAAA,UAAQC,UAAU,YAAYuB,MAAOA,GAAOtB,QAAS,SAAAC,GAAC,OAAIL,EAAM+E,YAAY1E,EAAGL,EAAMgB,QAChFf,EAAAR,EAAAS,cAAA,MAAIwB,MAAOsD,GAAShF,EAAMgB,KAAKiE,aAAcjF,EAAMgB,KAAKJ,UAAxD,MAAsEf,GAAMc,QAAQX,EAAMgB,KAAKpB,SAA/F,MAA4GI,EAAMgB,KAAKO,oBAIvI,SAASyD,GAASC,GACd,OAAOA,GACH,IAAK,YACD,MAAO,CACH5C,MAAO,UACP6C,UAAW,QAEnB,IAAK,OACD,MAAO,CACH7C,MAAO,UACP6C,UAAW,QAEnB,QACI,MAAO,CACH7C,MAAO,UACP6C,UAAW,kCC3BrBC,GAAU,CACZxD,MAAO,QACPyD,OAAQ,SAGSC,eACjB,SAAAA,EAAYrF,GAAM,IAAA4D,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAAwB,IACdzB,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA7B,KAAM7D,KAED2F,MAAO,GAKZ/B,EAAKmB,YAAcnB,EAAKmB,YAAYa,KAAjBN,OAAAO,EAAA,EAAAP,CAAA1B,IARLA,2EAWNvD,EAAGW,GACXX,EAAEyF,iBACFjC,KAAK7D,MAAM+F,cAAc/E,oCAGrB,IAAAgF,EAAAnC,KACJ,OACI5D,EAAAR,EAAAS,cAAA,OAAKC,UAAU,iCACXF,EAAAR,EAAAS,cAAA,MAAIC,UAAU,gCAAd,kBACAF,EAAAR,EAAAS,cAAC+F,GAAAxG,EAAD,CAAgBiC,MAAOyD,IAEftB,KAAK7D,MAAMkG,OAAOnF,IAAI,SAAAC,GAClB,OAAOf,EAAAR,EAAAS,cAAC4E,GAAD,CAAY5D,IAAKF,EAAKmF,IAAKpB,YAAaiB,EAAKjB,YAAa/D,KAAMA,eAxB/D6D,iCCN9BuB,GAAY,CACdC,OAAQ,QAIN3E,GAAQ,CACVS,WAAY,UACZC,OAAQ,oBACRC,MAAO,UACPC,QAAS,MACTC,aAAc,MACd+D,MAAO,OACP9C,WAAY,QAMD,SAAS+C,GAAYvG,GAChC,OAAOC,EAAAR,EAAAS,cAAA,WACKD,EAAAR,EAAAS,cAACsG,GAAA/G,EAAD,CACIgH,QAAQ,EACRtG,UAAU,QACVuG,iBAAiB,UACjBC,aAAa,yBACb1G,EAAAR,EAAAS,cAAA,MAAIC,UAAU,eAAd,sBACAF,EAAAR,EAAAS,cAAA,UAAQC,UAAU,4BAA4BuB,MAAO0E,GAAWhG,QAASJ,EAAM4G,oBAA/E,SACA3G,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,WAEAD,EAAAR,EAAAS,cAAA,OAAKC,UAAU,OACXF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,qBACXF,EAAAR,EAAAS,cAAA,MAAIC,UAAU,cAAcH,EAAM6G,eAAelE,MAAMA,MAAMC,UAA7D,IAAyE5C,EAAM6G,eAAelE,MAAMA,MAAME,SAA1G,+BAAgJ7C,EAAM6G,eAAe5D,KAAKrC,UAA1K,gBAEJX,EAAAR,EAAAS,cAAA,OAAKC,UAAU,qBACXF,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,0BACJD,EAAAR,EAAAS,cAAA,UAAKF,EAAM6G,eAAelE,MAAMA,MAAMvB,gBAG9CnB,EAAAR,EAAAS,cAAA,OAAKC,UAAU,OACXF,EAAAR,EAAAS,cAAA,UAAID,EAAAR,EAAAS,cAAA,UAAQC,UAAU,kBAAkBuB,MAAOA,GAAOtB,QAAS,SAAAC,GAAC,OAAIL,EAAM8G,0CAA0CzG,EAAGL,EAAM6G,eAAelE,MAAO3C,EAAM6G,kBAArJ,+BAxB5BE,KAAWC,cAAc,SChBzBD,KAAWC,cAAc,SAEzB,IAAMC,GAAiB,CACnBzD,WAAY,OACZC,YAAa,OAGXyD,GAAkB,CACpB1D,WAAY,MACZC,YAAa,QAGF,SAAS0D,GAAcnH,GAClC,OAAQC,EAAAR,EAAAS,cAAA,WACID,EAAAR,EAAAS,cAACsG,GAAA/G,EAAD,CACIgH,QAAQ,EACRtG,UAAU,eACVuG,iBAAiB,UACjBC,aAAa,yBACb1G,EAAAR,EAAAS,cAAA,MAAIC,UAAU,yBAAd,gBACAF,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,MAAIC,UAAU,eAAeH,EAAMiC,SACnChC,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAQC,UAAU,sCAAsCuB,MAAOuF,GAAgB7G,QAASJ,EAAMoH,YAA9F,OACAnH,EAAAR,EAAAS,cAAA,UAAQC,UAAU,gCAAgCuB,MAAOwF,GAAiB9G,QAASJ,EAAMqH,WAAzF,YC3BCC,8GACEC,GACfC,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAUJ,gDAIvD,OAAOG,KAAKE,MAAMJ,aAAaK,QAAQ,6DAG1BC,GACbN,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUG,8CAIrD,OAAOJ,KAAKE,MAAMJ,aAAaK,QAAQ,sHCT1BE,oDAEjBC,MAAQ,SAACC,EAAUC,GACf,OAAQtE,EAAKuE,MALH,SAKoB,CAACF,WAASC,aAC3BE,KAAK,SAAAC,GAEF,OADAzE,EAAK0E,SAASD,EAAIE,KAAKC,OAChBH,IAEVI,MAAM,SAAAC,GACH,MAAO,gBAI3BC,SAAW,WAEP,IAAMH,EAAQ5E,EAAKgF,WACnB,QAASJ,IAAU5E,EAAKiF,eAAeL,SAG3CK,eAAiB,SAAAL,GACb,IAEI,OADgBM,KAAON,GACXO,IAAMpJ,KAAKqJ,MAAQ,IAIjC,MAAON,GAEL,OADAO,QAAQC,IAAI,kDACL,SAIfZ,SAAW,SAAAa,GAEP3B,aAAaC,QAAQ,WAAY0B,SAGrCP,SAAW,WAEP,OAAOpB,aAAaK,QAAQ,kBAGhCjD,OAAS,WAEL4C,aAAa4B,WAAW,kBAG5BC,WAAa,WAET,IAAIC,EAASR,KAAOlF,EAAKgF,YAEzB,OADAK,QAAQC,IAAI,oBACLI,QAGXnB,MAAQ,SAACoB,EAAKhB,GAEV,IAAMiB,EAAU,CACZC,OAAU,mBACVC,eAAgB,oBASpB,OAJI9F,EAAK+E,aACLa,EAAO,cAAoB,UAAY5F,EAAKgF,YAGzCT,KAAM,CACToB,IAAIA,EACJI,OAAQ,OACRpB,KAAMA,EACNqB,QAAS,6BAETC,QAAS,IACTL,QAASA,IAEZpB,KAAKxE,EAAKkG,cACV1B,KAAK,SAAA2B,GAAQ,OAAIA,IACjBtB,MAAM,SAAAC,GAAG,OAAIA,UAGlBoB,aAAe,SAAAC,GAEX,GAAIA,EAASC,QAAU,KAAOD,EAASC,OAAS,IAE5C,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAMH,EAASI,YAE/B,MADAF,EAAMF,SAAWA,EACXE,ICzFZG,IAFO,IAAIrC,IAEEI,MAmBNkC,GAAe,SAAC9B,GACzB,OAAQ6B,GAlBU,gBAkBW7B,GAChBH,KAAK,SAAAC,GACF,OAAOA,IAEVI,MAAM,SAAAC,GAEH,OADAO,QAAQC,IAAI,CAACR,QACN,WAId4B,GAAiB,SAAC/B,GAC3B,OAAQ6B,GA5BY,kBA4BW7B,GAClBH,KAAK,SAAAC,GACF,OAAOA,IAEVI,MAAM,SAAAC,GAEH,OADAO,QAAQC,IAAI,CAACR,QACN,WAiFd6B,GAAiB,WAC1B,OAAQH,GAvGc,oBAwGThC,KAAK,SAAAC,GACF,OAAOA,IAEVI,MAAM,SAAAC,GACH,MAAO,WCtFrB7I,GAAQ,IAAIC,GACZ0K,GAAc,IAAIlD,GAElBmD,GAAW,CACbrF,OAAQ,QACRzD,MAAO,QAMP+I,IAAc,IAAI/K,MAAOgL,cAEzBC,GAAQ,KAENC,eACJ,SAAAA,EAAY7K,GAAM,IAAA4D,EAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAAgH,IACdjH,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAuF,GAAAnF,KAAA7B,KAAM7D,KAED2F,MAAQ,CACTmF,YAAa,CACT9I,OAAQ,GACRgI,QAAQ,GAEZ9D,OAAQ,GACR6E,UAAW,GACXC,YAAa,GACbC,mBAAoB,GACpBC,qBAAsB,GACtBC,eAAe,EACfC,qBAAqB,EACrBC,wBAAwB,EACxBC,aAAc,GACdC,cAAe,GACfC,OAAQ,CAACC,IAAK,OAAOC,IAAK,QAC1BlH,cAAc,cACdE,mBAAmB,oBACnBiH,KAAO,GACPC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAmB,GACnBC,YAAY,EACZC,cAAe,CAAC,UAAW,gBAAiB,kBAAmB,kBAAmB,iBAAkB,kBAAmB,oBACvHC,aAAa,GACb1E,gBAAiB,GACjB2E,4BAA6B,GAC7BpE,cAAe,GACf9F,OAAQ,UACRmK,eAAgB,GAChBC,aAAc,UACd/H,KAAM,IAAI1E,KACVsC,QAAS,IAGb2B,EAAKyI,OAAS,IAAIC,KAAY,CAC5BC,WAAY,6CACZC,aAAc,+CAEhB5I,EAAKyI,OAAOI,KAAZnH,OAAAO,EAAA,EAAAP,CAAA1B,IAEAA,EAAK8I,aAAe9I,EAAK8I,aAAa9G,KAAlBN,OAAAO,EAAA,EAAAP,CAAA1B,IACpBA,EAAKa,eAAiBb,EAAKa,eAAemB,KAApBN,OAAAO,EAAA,EAAAP,CAAA1B,IACtBA,EAAKe,qBAAuBf,EAAKe,qBAAqBiB,KAA1BN,OAAAO,EAAA,EAAAP,CAAA1B,IAC5BA,EAAK+I,eAAiB/I,EAAK+I,eAAe/G,KAApBN,OAAAO,EAAA,EAAAP,CAAA1B,IACtBA,EAAKO,aAAeP,EAAKO,aAAayB,KAAlBN,OAAAO,EAAA,EAAAP,CAAA1B,IACpBA,EAAKI,eAAiBJ,EAAKI,eAAe4B,KAApBN,OAAAO,EAAA,EAAAP,CAAA1B,IACtBA,EAAKmC,cAAgBnC,EAAKmC,cAAcH,KAAnBN,OAAAO,EAAA,EAAAP,CAAA1B,IACrBA,EAAKrD,gBAAkBqD,EAAKrD,gBAAgBqF,KAArBN,OAAAO,EAAA,EAAAP,CAAA1B,IACvBA,EAAK/B,YAAc+B,EAAK/B,YAAY+D,KAAjBN,OAAAO,EAAA,EAAAP,CAAA1B,IACnBA,EAAKlB,kBAAoBkB,EAAKlB,kBAAkBkD,KAAvBN,OAAAO,EAAA,EAAAP,CAAA1B,IACzBA,EAAKV,qBAAuBU,EAAKV,qBAAqB0C,KAA1BN,OAAAO,EAAA,EAAAP,CAAA1B,IAC5BA,EAAKgJ,aAAehJ,EAAKgJ,aAAahH,KAAlBN,OAAAO,EAAA,EAAAP,CAAA1B,IACpBA,EAAKiJ,iCAAmCjJ,EAAKiJ,iCAAiCjH,KAAtCN,OAAAO,EAAA,EAAAP,CAAA1B,IACxCA,EAAKkJ,0BAA4BlJ,EAAKkJ,0BAA0BlH,KAA/BN,OAAAO,EAAA,EAAAP,CAAA1B,IACjCA,EAAKZ,qBAAuBY,EAAKZ,qBAAqB4C,KAA1BN,OAAAO,EAAA,EAAAP,CAAA1B,IAC5BA,EAAKgD,mBAAqBhD,EAAKgD,mBAAmBhB,KAAxBN,OAAAO,EAAA,EAAAP,CAAA1B,IAC1BA,EAAKkD,0CAA4ClD,EAAKkD,0CAA0ClB,KAA/CN,OAAAO,EAAA,EAAAP,CAAA1B,IAEjDA,EAAK0G,eAAiB1G,EAAK0G,eAAe1E,KAApBN,OAAAO,EAAA,EAAAP,CAAA1B,IACtBA,EAAKyG,aAAezG,EAAKyG,aAAazE,KAAlBN,OAAAO,EAAA,EAAAP,CAAA1B,IACpBA,EAAKmJ,iBAAmBnJ,EAAKmJ,iBAAiBnH,KAAtBN,OAAAO,EAAA,EAAAP,CAAA1B,IACxBA,EAAKoJ,mBAAqBpJ,EAAKoJ,mBAAmBpH,KAAxBN,OAAAO,EAAA,EAAAP,CAAA1B,IAC1BA,EAAKqJ,qBAAuBrJ,EAAKqJ,qBAAqBrH,KAA1BN,OAAAO,EAAA,EAAAP,CAAA1B,IAC5BA,EAAKsJ,mBAAqBtJ,EAAKsJ,mBAAmBtH,KAAxBN,OAAAO,EAAA,EAAAP,CAAA1B,IAE1BA,EAAKuJ,qBAAuBvJ,EAAKuJ,qBAAqBvH,KAA1BN,OAAAO,EAAA,EAAAP,CAAA1B,IAC5BA,EAAKwJ,yBAA2BxJ,EAAKwJ,yBAAyBxH,KAA9BN,OAAAO,EAAA,EAAAP,CAAA1B,IAEhCA,EAAKyJ,YAAczJ,EAAKyJ,YAAYzH,KAAjBN,OAAAO,EAAA,EAAAP,CAAA1B,IACnBA,EAAK0J,iBAAmB1J,EAAK0J,iBAAiB1H,KAAtBN,OAAAO,EAAA,EAAAP,CAAA1B,IACxBA,EAAK2J,YAAc3J,EAAK2J,YAAY3H,KAAjBN,OAAAO,EAAA,EAAAP,CAAA1B,IACnBA,EAAK4J,4BAA8B5J,EAAK4J,4BAA4B5H,KAAjCN,OAAAO,EAAA,EAAAP,CAAA1B,IACnCA,EAAK6J,2BAA6B7J,EAAK6J,2BAA2B7H,KAAhCN,OAAAO,EAAA,EAAAP,CAAA1B,IAElCA,EAAKgB,OAAShB,EAAKgB,OAAOgB,KAAZN,OAAAO,EAAA,EAAAP,CAAA1B,IAEd,IAAI8J,EAAOhD,GAAYiD,MAAM,SAAS,GAhFxB,OAkFdD,GAAY,iBAEZ9C,GAAQ,IAAIjL,KAAK+N,GApFH9J,wEAwFdC,KAAK7D,MAAM4E,gLAIXf,KAAK+J,SAAS,CACV9C,YAAa,CACX9I,OAAQ,GACRgI,QAAQ,GAEV/H,QAAS,GACTD,OAAQ,UACRmK,eAAgB,cDrGO5D,ECwGiB,CAACjE,GAAIT,KAAK8B,MAAM2F,aAAanF,KDvGnEiE,GAjDmB,oBAiDW7B,GACzBH,KAAK,SAAAC,GACF,OAAOA,IAEVI,MAAM,SAAAC,GAEH,OADAO,QAAQC,IAAI,CAACR,QACN,oBCmGR,UAFPqB,iCAGAlG,KAAK+J,SAAS,CACV5L,OAAQ,UACRmK,eAAgB,+EAKvBpC,IACClG,KAAKwI,OAAOwB,QACN,CACI5L,QAAS,GAGT6L,QAAS,iBACTC,YAAY,EACZC,gBAAgB,GAEpB,SAAChE,EAAQD,MAKflG,KAAK+J,SAAS,SAAAjI,GACR,IAAImC,EAAgBnC,EAAMmC,cAM1B,OAJAA,EAAcmG,OAAOnG,EAAcoG,QAAQlI,EAAKL,MAAM2F,aAAanF,KAAM,GAEzEqE,GAAY2D,iBAAiBrG,GAEtB,CACH9F,OAAQ,QACRmJ,eAAe,EACfrD,cAAeA,EACf5B,OAAQ,MAIlBrC,KAAKkJ,iBAAiBlJ,KAAK8B,MAAMtB,MACjCR,KAAKmJ,mBAAmBnJ,KAAK8B,MAAMtB,MAEnCR,KAAKqJ,qBACLrJ,KAAKoJ,yDDpJiB,IAAC1E,6NCyJ3B1E,KAAK+J,SAAS,CACV9C,YAAa,CACX9I,OAAQ,GACRgI,QAAQ,GAEV/H,QAAS,GACTD,OAAQ,UACRmK,eAAgB,cD3KM5D,EC8KiB,CAACjE,GAAIT,KAAK8B,MAAM2F,aAAanF,KD7KlEiE,GArCiB,eAqCW7B,GACvBH,KAAK,SAAAC,GACF,OAAOA,IAEVI,MAAM,SAAAC,GAEH,OADAO,QAAQC,IAAI,CAACR,QACN,iBCyKR,UAFPqB,WAGJlG,KAAK+J,SAAS,CACV5L,OAAQ,UACRmK,eAAgB,gDAInBpC,IACClG,KAAKwI,OAAOwB,QACN,CACI5L,QAAS,GAGT6L,QAAS,iBACTC,YAAY,EACZC,gBAAgB,GAEpB,SAAChE,EAAQD,MAKflG,KAAK+J,SAAS,CACZ5L,OAAQ,QACRqJ,wBAAwB,EACxBnF,OAAQ,KAGVrC,KAAKkJ,iBAAiBlJ,KAAK8B,MAAMtB,MACjCR,KAAKmJ,mBAAmBnJ,KAAK8B,MAAMtB,MAEnCR,KAAKqJ,qBACLrJ,KAAKoJ,yDDhNgB,IAAC1E,wGCqN1B1E,KAAK+J,SAAS,CACV9C,YAAa,CACX9I,OAAQ,GACRgI,QAAQ,GAEV/H,QAAS,yDAIW5B,GACxBA,EAAEyF,iBACFjC,KAAK+J,SAAS,CACV9C,YAAa,CACX9I,OAAQ,YACRgI,QAAQ,GAEV/H,QAAS,0HAKb4B,KAAK+J,SAAS,CACV9C,YAAa,CACX9I,OAAQ,WACRgI,QAAQ,GAEV/H,QAAS,uGAII5B,EAAGsC,GAAM,IAAAyL,EAAAvK,KAC1BxD,EAAEyF,iBAEFjC,KAAKwI,OAAOwB,QACR,CACI5L,QAAS,CACPoM,OAAQ,CACJ9F,KAAM,CACF+F,kBAAmB,6CACnB/F,KAAM,GACNvG,OAAQ,iBAIlB8L,QAASnL,EAAMA,MAAMwD,IACrB4H,YAAY,EACZC,gBAAgB,GAEpB,SAAChE,EAAQD,MAMblG,KAAKwI,OAAOwB,QACV,CACI5L,QAAS,CACLU,SAEJmL,QAAS,kBACTC,YAAY,EACZC,gBAAgB,GAEpB,SAAChE,EAAQD,MAKXlG,KAAK+J,SAAS,SAAAjI,GACV,IAAI4I,EAAS5I,EAAM4B,gBACfiH,EAAO7I,EAAMqG,cACbC,EAAetG,EAAMsG,aAErBwC,EAAsB,GAEvBF,EAAOzN,OAAS,IACf2N,EAAsBF,EAAOxN,IAAI,SAAA2N,GAC7B,GAAGA,EAAI/L,MAAMwD,MAAMxD,EAAMA,MAAMwD,IAC3B,OAAOuI,KAKnB,IAAIC,EAAWH,EAAKP,OAAOO,EAAKN,QAAQvL,EAAMA,MAAMwD,KAAM,GAGtDyI,EAAc3C,EAAa4C,KAAK,SAAAH,GAAG,OAAIA,EAAI/L,MAAMwD,MAAQxD,EAAMA,MAAMwD,MAErE2I,EAAkBxJ,OAAOyJ,OAAO,GAAIH,GAExCE,EAAgB/L,aAAc,EAEPkJ,EAAagC,OAAOhC,EAAaiC,QAAQU,GAAc,EAAGE,GASjF,OANAV,EAAK/B,OAAO2C,YAAY,CACrBC,SAAU,CAACtM,EAAMA,MAAMwD,OAG1BqE,GAAY0E,mBAAmBT,GAExB,CACHlH,gBAAiBkH,EACjBxC,aAAcA,EACdD,cAAe2C,EACfvD,qBAAqB,EACrBG,cAAe,wEAKelL,EAAGsC,EAAOkE,GAAe,IAAAsI,EAAAtL,KAC/DxD,EAAEyF,iBAEFjC,KAAKwI,OAAOwB,QACR,CACI5L,QAAS,CACPoM,OAAQ,CACJ9F,KAAM,CACF+F,kBAAmB,6CACnB/F,KAAM,GACNvG,OAAQ,iBAIlB8L,QAASnL,EAAMA,MAAMwD,IACrB4H,YAAY,EACZC,gBAAgB,GAEpB,SAAChE,EAAQD,MAMblG,KAAKwI,OAAOwB,QACF,CACI5L,QAAS,CACLU,SAEJmL,QAAS,kBACTC,YAAY,EACZC,gBAAgB,GAEpB,SAAChE,EAAQD,MAKnBlG,KAAK+J,SAAS,SAAAjI,GACV,IAAI4I,EAAS5I,EAAM4B,gBACfiH,EAAO7I,EAAMqG,cACboD,EAAQzJ,EAAMuG,4BAElBkD,EAAMnB,OAAOmB,EAAMlB,QAAQrH,GAAgB,GAE3C,IAAI4H,EAAsB,GAEvBF,EAAOzN,OAAS,IACf2N,EAAsBF,EAAOxN,IAAI,SAAA2N,GAC7B,GAAGA,EAAI/L,MAAMwD,MAAMxD,EAAMA,MAAMwD,IAC3B,OAAOuI,KAKnB,IAAIC,EAAWH,EAAKP,OAAOO,EAAKN,QAAQvL,EAAMA,MAAMwD,KAAM,GAS1D,OANAgJ,EAAK9C,OAAO2C,YAAY,CAClBC,SAAU,CAACtM,EAAMA,MAAMwD,OAG7BqE,GAAY0E,mBAAmBT,GAExB,CACHlH,gBAAiBkH,EACjBzC,cAAe2C,EACfzC,4BAA6BkD,EAC7BhE,qBAAqB,EACrBG,cAAe,mDAKNlL,EAAGsC,GAAM,IAAA0M,EAAAxL,KAC1BxD,EAAEyF,iBAIFjC,KAAKwI,OAAOwB,QACR,CACE5L,QAAS,CACLoM,OAAQ,CACJ9F,KAAM,CACF+F,kBAAmB,yCACnB/F,KAAM1E,KAAK8B,MAAM2F,aAAalK,aAAe,CAACR,UAAWiD,KAAK8B,MAAM2F,aAAa1K,UAAWuF,IAAKtC,KAAK8B,MAAM2F,aAAarI,KAAM7B,aAAcyC,KAAK8B,MAAM2F,aAAalK,aAAckO,SAAUzL,KAAK8B,MAAM2F,aAAagE,SAAUC,UAAW1L,KAAK8B,MAAM2F,aAAaiE,WAAa,CAAC3O,UAAWiD,KAAK8B,MAAM2F,aAAa1K,UAAWuF,IAAKtC,KAAK8B,MAAM2F,aAAarI,KAAMqM,SAAUzL,KAAK8B,MAAM2F,aAAagE,SAAUC,UAAW1L,KAAK8B,MAAM2F,aAAaiE,WAChbvN,OAAQ,mBAIpB8L,QAASnL,EAAMA,MAAMwD,IACrB4H,YAAY,EACZC,gBAAgB,GAElB,SAAChE,EAAQD,MAOblG,KAAKwI,OAAOwB,QACN,CACI5L,QAAS,CACLU,SAEJmL,QAAS,gBACTC,YAAY,EACZC,gBAAgB,GAEpB,SAAChE,EAAQD,MAKflG,KAAK+J,SAAS,SAAAjI,GACV,IAAI4I,EAAS5I,EAAM4B,gBACfiH,EAAO7I,EAAMqG,cAEbyC,EAAsB,GAEvBF,EAAOzN,OAAS,GACf2N,EAAsBF,EAAOxN,IAAI,SAAAtB,GAE/B,OAAGA,EAAEkD,MAAMwD,MAAQxD,EAAMA,MAAMwD,IACtBxD,EAEGlD,KAGwBoP,KAAK,SAAApP,GAAC,OAAIA,EAAEkD,MAAMwD,MAAQxD,EAAMA,MAAMwD,OAG1EsI,EAAoBe,KAAK7M,GAI3B8L,EAAoBe,KAAK7M,GAc7B,OAXoC,IAAjC6L,EAAKN,QAAQvL,EAAMA,MAAMwD,MAC1BqI,EAAKgB,KAAK7M,EAAMA,MAAMwD,KAIxBkJ,EAAKhD,OAAOoD,UAAU,CACpBR,SAAUT,IAGZhE,GAAY0E,mBAAmBT,GAExB,CACLlH,gBAAiBkH,EACjBzC,cAAewC,6CAOTnO,EAAGW,GAAK,IAAA0O,EAAA7L,KACpBxD,EAAEyF,iBAEFjC,KAAKwI,OAAOwB,QACR,CACI5L,QAAS,CACHoM,OAAQ,CACJ9F,KAAM,CACF+F,kBAAmB,4BACnB/F,KAAM,GACNvG,OAAQ,mBAItB8L,QAASjK,KAAK8B,MAAMyG,aACpB2B,YAAY,EACZC,gBAAgB,GAEpB,SAAChE,EAAQD,MAKblG,KAAK+J,SAAS,SAAAjI,GACR,IAAI6I,EAAO7I,EAAMqG,cACblE,EAAgBnC,EAAMmC,cAqB1B,OAnB8B,IAA3B0G,EAAKN,QAAQlN,EAAKiC,OAIbuL,EAAKgB,KAAKxO,EAAKiC,MAGN6E,EAAc+G,KAAK,SAAAvK,GAAE,OAAIA,IAAOtD,EAAKiC,QAGlD6E,EAAc0H,KAAKxO,EAAKiC,MAG5BuH,GAAY2D,iBAAiBrG,GAE7B4H,EAAKrD,OAAOoD,UAAU,CAClBR,SAAUT,IAGP,CACHxM,OAAQ,UACRmK,eAAgB,0BAA0BnL,EAAKJ,UAC/CoL,cAAewC,EACfvC,aAAc,GACdnE,cAAeA,2CAKf9G,GACV,OAAOA,EAAKiE,YACR,IAAK,YACDpB,KAAK+J,SAAS,CACZtC,aAActK,EACdmK,eAAe,EACfE,wBAAwB,EACxBD,qBAAqB,EACrBI,OAAQ,CACNC,IAAKzK,EAAKsO,SACV5D,IAAK1K,EAAKuO,WAEZ5D,KAAM,GACNC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAmB9K,EAAKmF,MAE1B,MACJ,IAAK,OACDtC,KAAK+J,SAAS,CACZtC,aAActK,EACdmK,eAAe,EACfE,wBAAwB,EACxBD,qBAAqB,EACrBI,OAAQ,CACNC,IAAKzK,EAAKsO,SACV5D,IAAK1K,EAAKuO,WAEZ5D,KAAM,GACNC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAmB9K,EAAKmF,gDAOlCtC,KAAK+J,SAAS,CACZ7B,YAAY,EACZZ,eAAe,EACfE,wBAAwB,EACxBD,qBAAqB,yCAId/G,IAGXA,EAAO,IAAI1E,KAAK0E,IACXsL,SAAStL,EAAKuL,WAAa,GAE/B/L,KAAK+J,SAAS,CACX7B,YAAY,EACZ1H,KAAMA,EACNuH,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAmB,GACnB9J,OAAQ,UACRmK,eAAgB,GAChB3H,cAAc,cACdE,mBAAmB,sBAGtBb,KAAKkJ,iBAAiB1I,GACtBR,KAAKmJ,mBAAmB3I,0CAGZwL,GACX,IAAMC,EAASD,EAAMC,OACf1L,EAAQ0L,EAAO1L,MAGjB7E,GAFSuQ,EAAOvL,KAEV,IAEPV,KAAK8B,MAAMoF,UAAUjK,OAAO,EAChB,gBAARsD,EACDP,KAAK+J,SAAS,SAAAjI,GAAK,MAAK,CACtBoG,YAAY,EACZd,mBAAoBtF,EAAMoF,UAC1BI,eAAe,EACf3G,cAAeJ,EACfgH,qBAAqB,EACrBC,wBAAwB,EACxBQ,kBAAkB,KAGN,SAARzH,EACNP,KAAK+J,SAAS,CACZ7B,YAAY,EACZd,mBAAoB,GACpBE,eAAe,EACf3G,cAAeJ,EACfgH,qBAAqB,EACrBC,wBAAwB,EACxBQ,kBAAkB,KAIpBhI,KAAK8B,MAAMoF,UAAUhK,IAAI,SAAAgP,GACpBA,EAAK1M,OAAO2M,SAAS5L,EAAM6L,gBAC5B1Q,EAAIiQ,KAAKO,KAIVxQ,EAAIuB,OAAO,EACZ+C,KAAK+J,SAAS,CACZ7B,YAAY,EACZd,mBAAoB1L,EACpBiF,cAAeJ,EACf+G,eAAe,EACfC,qBAAqB,EACrBC,wBAAwB,EACxBQ,kBAAkB,IAMpBhI,KAAK+J,SAAS,CACV7B,YAAY,EACZd,mBAAmB,GACnBzG,cAAeJ,EACf+G,eAAe,EACfE,wBAAwB,EACxBQ,kBAAkB,KAM1BhI,KAAK+J,SAAS,CACVpJ,cAAeJ,iDAKNyL,GACjB,IAAMC,EAASD,EAAMC,OACf1L,EAAQ0L,EAAO1L,MAGjB7E,GAFSuQ,EAAOvL,KAEV,IACPV,KAAK8B,MAAMqF,YAAYlK,OAAO,EAClB,sBAARsD,EACDP,KAAK+J,SAAS,SAAAjI,GAAK,MAAK,CACtBoG,YAAY,EACZb,qBAAsBvF,EAAMqF,YAC5BG,eAAe,EACfzG,mBAAoBN,EACpBiH,wBAAwB,EACxBD,qBAAqB,EACrBQ,iBAAiB,KAGL,SAARxH,EACNP,KAAK+J,SAAS,CACZ7B,YAAY,EACZb,qBAAqB,GACrBxG,mBAAoBN,EACpB+G,eAAe,EACfC,qBAAqB,EACrBC,wBAAwB,EACxBO,iBAAiB,KAInB/H,KAAK8B,MAAMqF,YAAYjK,IAAI,SAAAgP,GACtBA,EAAKvO,SAASuO,EAAKvO,QAAQV,OAAO,GACnCiP,EAAKvO,QAAQT,IAAI,SAAAsC,GACVe,EAAM6L,cAAcD,SAAS3M,IAC5B9D,EAAIiQ,KAAKO,OAMlBxQ,EAAIuB,OAAO,EACZ+C,KAAK+J,SAAS,CACZ7B,YAAY,EACZb,qBAAqB3L,EACrBmF,mBAAoBN,EACpB+G,eAAe,EACfC,qBAAqB,EACrBC,wBAAwB,EACxBO,iBAAiB,IAMnB/H,KAAK+J,SAAS,CACV7B,YAAY,EACZb,qBAAsB,GACtBC,eAAe,EACfzG,mBAAoBN,EACpBgH,qBAAqB,EACrBC,wBAAwB,EACxBO,iBAAiB,KAMzB/H,KAAK+J,SAAS,CACXlJ,mBAAoBN,8CAKbhB,EAAS/C,GACvBwD,KAAK+J,SAAS,CACV7B,YAAY,EACZT,aAAclI,EACd+H,eAAe,EACfC,qBAAqB,EACrBC,wBAAwB,EACxBG,OAAQ,CACNC,IAAKrI,EAASkM,SACd5D,IAAKtI,EAASmM,WAEhB5D,KAAM,GACNC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAmB1I,EAAS+C,iDAIjB3F,EAAUH,GACzBwD,KAAK+J,SAAS,CACV7B,YAAY,EACZT,aAAc9K,EACd+K,cAAe,GACfJ,eAAe,EACfC,qBAAqB,EACrBC,wBAAwB,EACxBG,OAAQ,CACJC,IAAKjL,EAAU8O,SACf5D,IAAKlL,EAAU+O,WAEnB5D,KAAM,GACNC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAmBtL,EAAU2F,6CAItBxD,EAAMtC,GACjBwD,KAAK+J,SAAS,CACV7B,YAAY,EACZR,cAAe5I,EACfyI,qBAAqB,kDAIR,IAAA8E,EAAArM,KAkBf,OAfGA,KAAK8B,MAAMsF,mBAAmBnK,OAAO,EACrB+C,KAAK8B,MAAMsF,mBAAmBlK,IAAI,SAAAoP,GAC7C,OAAQlQ,EAAAR,EAAAS,cAACkQ,EAAA,OAAD,CAAQlP,IAAKiP,EAAIhK,IAAK/F,QAAS,SAAAC,GAAC,OAAI6P,EAAKG,kBAAkBF,EAAI9P,IAC3DkE,KAAM4L,EAAI9M,OACViN,MAAOH,EAAIvP,UACX2P,SAAU,CAAC9E,IAAK0E,EAAIb,SAAU5D,IAAKyE,EAAIZ,WACvCiB,KAAM,CACNjH,IAAM2G,EAAKvK,MAAMmG,oBAAoBqE,EAAIhK,IAAOsK,IAAcC,SAK/D,mDAMF,IAAAC,EAAA9M,KAkBnB,OAfGA,KAAK8B,MAAMuF,qBAAqBpK,OAAO,EACrB+C,KAAK8B,MAAMuF,qBAAqBnK,IAAI,SAAAgP,GACnD,OAAO9P,EAAAR,EAAAS,cAACkQ,EAAA,OAAD,CAAQlP,IAAK6O,EAAK5J,IAAK/F,QAAS,SAAAC,GAAC,OAAIsQ,EAAKC,mBAAmBb,EAAK1P,IAC/DkE,KAAMwL,EAAKvO,QAAQ,GACnB8O,MAAOP,EAAKnP,UACZ2P,SAAU,CAAC9E,IAAKsE,EAAKT,SAAU5D,IAAKqE,EAAKR,WACzCiB,KAAM,CACJjH,IAAMoH,EAAKhL,MAAMmG,oBAAoBiE,EAAK5J,IAAO0K,IAAaC,SAK3D,6CAMR,IAAAC,EAAAlN,KAkBb,OAfGA,KAAK8B,MAAMsG,aAAanL,OAAO,EACpB+C,KAAK8B,MAAMsG,aAAalL,IAAI,SAAC4B,EAAMqO,GAC7C,OAAO/Q,EAAAR,EAAAS,cAACkQ,EAAA,OAAD,CAAQlP,IAAK8P,EAAI5Q,QAAS,SAAAC,GAAC,OAAI0Q,EAAKpE,eAAehK,EAAMtC,IACtDkE,KAAM5B,EAAMrB,aACZgP,MAAO3N,EAAMrB,aACbiP,SAAU,CAAC9E,IAAK9I,EAAM2M,SAAU5D,IAAK/I,EAAM4M,WAC3CiB,KAAM,CACJjH,IAAKwH,EAAKnE,aAAajK,QAKzB,wCAMLA,GACT,OAAOA,EAAMA,MAAMG,YACf,IAAK,SACD,OAAGH,EAAMsO,QAAQ,IAAItO,EAAMsO,SAAS,IACxBtO,EAAMI,YAAemO,IAA0BC,IAG/CxO,EAAMI,YAAeqO,IAA2BC,IAGhE,IAAK,OACD,OAAG1O,EAAMsO,QAAQ,IAAItO,EAAMsO,SAAS,IACxBtO,EAAMI,YAAeuO,IAAwBC,IAG7C5O,EAAMI,YAAeyO,IAAyBC,IAG9D,IAAK,WACD,OAAG9O,EAAMsO,QAAQ,IAAItO,EAAMsO,SAAS,IACxBtO,EAAMI,YAAe2O,IAA4BC,IAGjDhP,EAAMI,YAAe6O,IAA8BC,yCAM/DxR,GACRwD,KAAK+J,SAAS,CACV5L,OAAQ,QACRmK,eAAgB,0CAIX9L,GACTwD,KAAK+J,SAAS,CACV7B,YAAY,EACZZ,eAAe,EACfE,wBAAwB,EACxBD,qBAAqB,EACrB0G,kBAAmB,GACnBpN,mBAAoB,GACpBoH,kBAAmB,+CAITzL,GACdwD,KAAK+J,SAAS,CACVrC,cAAe,GACfH,qBAAqB,+CAIVvE,GACfhD,KAAK+J,SAAS,SAAAjI,GACV,IAAIyJ,EAAQzJ,EAAMuG,4BAIlB,OAFAkD,EAAMnB,OAAOmB,EAAMlB,QAAQrH,GAAgB,GAEpC,CACHqF,4BAA6BkD,yCAK7B2C,EAAUhR,+DAKlB8C,KAAKwI,OAAOoD,UAAU,CACpBR,SAAUpL,KAAK8B,MAAMqG,gBAGvBnI,KAAK+J,SAAS,CACZ3B,aAAc,KAGhBpI,KAAKwI,OAAOwB,QACV,CACI5L,QAAS,CACLoM,OAAQ,CACJ9F,KAAM,CACF+F,kBAAmB,4BACnB/F,KAAM,GACNvG,OAAQ,mBAIpB8L,QAASjK,KAAK8B,MAAMyG,aACpB2B,YAAY,EACZC,gBAAgB,GAEpB,SAAChE,EAAQD,qDAOX,IAAIiI,EAAM,GAMV,OAJAnO,KAAK8B,MAAM4B,gBAAgBxG,IAAI,SAAA4B,GAC3BqP,EAAIxC,KAAK7M,EAAMA,MAAMwD,OAGlB6L,mDAGcA,GACrBnO,KAAK+J,SAAS,SAAAjI,GACV,IAAIsG,EAAetG,EAAMsG,aAErB1E,EAAkB5B,EAAM4B,gBAgB5B,OAdA0E,EAAalL,IAAI,SAAA4B,GACb,IAAIsP,EAAiBD,EAAInD,KAAK,SAAAvK,GAAE,OAAKA,IAAO3B,EAAMA,MAAMwD,MAErD8L,IACa1K,EAAgBsH,KAAK,SAAAqD,GAAG,OAAIA,EAAIvP,MAAMwD,MAAQ8L,KAGtD1K,EAAgBiI,KAAK7M,MAKjC6H,GAAY0E,mBAAmB3H,GAExB,CACHA,gBAAiBA,oDAOzB1D,KAAKwI,OAAO2C,YAAY,CACpBC,SAAUpL,KAAK8B,MAAMqG,4DAIV,IAAAmG,EAAAtO,KAGbuO,EAAmB5H,GAAY6H,oBAEb,OAAnBD,GAA2BA,EAAiBtR,OAAS,GACpD+C,KAAK+J,SAAS,CACVrG,gBAAiB6K,IAIzB,IAAIE,EAA0B9H,GAAY+H,kBAEb,OAA1BD,GAAkCA,EAAwBxR,OAAS,GAClE+C,KAAK+J,SAAS,CACV9F,cAAewK,IAKvBzO,KAAKwI,OAAOoD,UAAU,CAClBR,SAAUpL,KAAK8B,MAAMqG,gBAGzBnI,KAAKgJ,mCAELhJ,KAAKwI,OAAOmG,YAAY,CACtBxI,OAAQ,SAACyI,GACgB,0BAAhBA,EAAGC,WACFP,EAAK9F,OAAOwB,QACR,CACI5L,QAAS,GAGT6L,QAAS,kBACTC,YAAY,EACZC,gBAAgB,GAEpB,SAAChE,EAAQD,MAKboI,EAAKvE,SAAS,CACV5L,OAAQ,QACRmK,eAAgB,MAIJ,0BAAhBsG,EAAGC,WACHP,EAAK9F,OAAOwB,QACR,CACI5L,QAAS,GAGT6L,QAAS,kBACTC,YAAY,EACZC,gBAAgB,GAEpB,SAAChE,EAAQD,MAKboI,EAAKvE,SAAS,CACV5L,OAAQ,QACRmK,eAAgB,MAIJ,4BAAhBsG,EAAGC,UACHP,EAAKvE,SAAS,CACV5L,OAAQ,UACRmK,eAAgB,yCAIJ,0BAAhBsG,EAAGC,UACHP,EAAKvE,SAAS,CACV5L,OAAQ,UACRmK,eAAgB,oCAIJ,sBAAhBsG,EAAGC,UACHP,EAAKvE,SAAS,CACV5L,OAAQ,UACRmK,eAAgB,wCAI9BlK,QAAS,SAACA,GAIA,IAsIF0Q,EAxImB,oBAApB1Q,EAAQ6L,UACL7E,QAAQC,IAAI,UAAUjH,EAAQA,UAC1B0Q,EAAkBR,EAAKxM,MAAMmC,cAAc+G,KAAK,SAAAvK,GAAE,OAAIA,IAAOrC,EAAQA,QAAQ2Q,YAG7ET,EAAKvE,SAAS,SAAAjI,GACV,IAAImC,EAAgBnC,EAAMmC,cAM1B,OAJAA,EAAc0H,KAAKvN,EAAQA,QAAQ2Q,SAEnCpI,GAAY2D,iBAAiBrG,GAEtB,CACHA,cAAeA,MA6HjC,GAvHuB,kBAApB7F,EAAQ6L,UACL7E,QAAQC,IAAI,WAAWjH,EAAQA,SAC/BkQ,EAAKvE,SAAS,SAAAjI,GACV,IAAI4I,EAAS5I,EAAM4B,gBAEhBgH,EAAOzN,OAAS,IACYqR,EAAKxM,MAAM4B,gBAAgBsH,KAAK,SAAAH,GAAG,OAAIA,EAAI/L,MAAMwD,MAAQlE,EAAQA,QAAQU,MAAMwD,QAGtGoI,EAAOiB,KAAKvN,EAAQA,SAEpBuI,GAAY0E,mBAAmBX,KAIvC,MAAO,CACHhH,gBAAiBgH,MAKR,oBAApBtM,EAAQ6L,SACLqE,EAAKvE,SAAS,SAAAjI,GACV,IAAI4I,EAAS5I,EAAM4B,gBAEhBgH,EAAOzN,OAAS,IACYqR,EAAKxM,MAAM4B,gBAAgBsH,KAAK,SAAAH,GAAG,OAAIA,EAAI/L,MAAMwD,MAAQlE,EAAQA,QAAQU,MAAMwD,QAGtGoI,EAAON,OAAOM,EAAOL,QAAQjM,EAAQA,SAAS,GAE9CuI,GAAY0E,mBAAmBX,KAIvC,MAAO,CACHhH,gBAAiBgH,KAKR,mBAApBtM,EAAQ6L,UACLqE,EAAKpF,iBAAiBoF,EAAKxM,MAAMtB,MACjC8N,EAAKnF,mBAAmBmF,EAAKxM,MAAMtB,MAEnC8N,EAAKvE,SAAS,CACV1H,OAAQ,KAGZiM,EAAKjF,qBACLiF,EAAKlF,wBAIY,oBAApBhL,EAAQ6L,UAILqE,EAAK9F,OAAOwB,QACR,CACI5L,QAAS,CACLsM,OAAQ4D,EAAKhF,wBAEjBW,QAAS,mBACTC,YAAY,EACZC,gBAAgB,GAEpB,SAAChE,EAAQD,MAKboI,EAAK9F,OAAOwB,QACR,CACI5L,QAAS,CACL4Q,MAAOV,EAAKxM,MAAMmC,eAEtBgG,QAAS,mBACTC,YAAY,EACZC,gBAAgB,GAEpB,SAAChE,EAAQD,OAMI,qBAApB9H,EAAQ6L,UACJ7L,EAAQA,QAAQsM,QACZtM,EAAQA,QAAQsM,OAAOzN,OAAS,GACjCqR,EAAK/E,yBAAyBnL,EAAQA,QAAQsM,QAIjDtM,EAAQA,QAAQ4Q,OACZ5Q,EAAQA,QAAQ4Q,MAAM/R,OAAS,GAC5BqR,EAAKvE,SAAS,SAAAjI,GACV,IAAImC,EAAgBnC,EAAMmC,cAY1B,OAVA7F,EAAQA,QAAQ4Q,MAAM9R,IAAI,SAAA6R,GACV9K,EAAc+G,KAAK,SAAAvK,GAAE,OAAIA,IAAOsO,KAGxC9K,EAAc0H,KAAKoD,KAI3BpI,GAAY2D,iBAAiBrG,GAEvB,CACFA,cAAeA,OAOjC6K,EAAkBR,EAAKxM,MAAMmC,cAAc+G,KAAK,SAAAvK,GAAE,OAAIA,IAAOrC,EAAQ6L,YAIhE7L,EAAQ6Q,cAAgD,yBAAhC7Q,EAAQ6Q,aAAa9Q,OAAkC,CAC9E,IAAIzC,EAAM4S,EAAKxM,MAAMqF,YAAYjK,IAAI,SAAAP,GACjC,OAAGA,EAAUyC,OAAS0P,GAClBnS,EAAU8O,SAAWrN,EAAQA,QAAQqN,SACrC9O,EAAU+O,UAAYtN,EAAQA,QAAQsN,UAC/B/O,GAGAA,IAMf2R,EAAKvE,SAAS,SAAAjI,GACV,MAAM,CACFqF,YAAazL,KAM/B,GAAG0C,EAAQ6L,UAAYqE,EAAKxM,MAAMyG,cAC3BnK,EAAQ6Q,cAAgD,0BAAhC7Q,EAAQ6Q,aAAa9Q,OAAmC,CAC/E,IAAIuM,EAAS4D,EAAKxM,MAAMsG,aAEpB2C,EAAcuD,EAAKxM,MAAMsG,aAAa4C,KAAK,SAAAlM,GAAK,OAAIA,EAAMA,MAAMwD,MAAQlE,EAAQA,QAAQU,MAAMwD,MAE/FgM,EAAKxM,MAAMsG,aAAanL,QAAQ,IAAI8N,EACnCL,EAAOiB,KAAKvN,EAAQA,SAGpBsM,EAAS4D,EAAKxM,MAAMsG,aAAalL,IAAI,SAAA4B,GACjC,GAAGA,EAAMA,MAAMwD,MAAQlE,EAAQA,QAAQU,MAAMwD,IAAI,CAE7C,IAAI4M,EAAgCZ,EAAKxM,MAAM4B,gBAAgBsH,KAAK,SAAAH,GAAG,OAAIA,EAAI/L,MAAMwD,MAAQlE,EAAQA,QAAQU,MAAMwD,MASnH,OANIlE,EAAQA,QAAQc,cADjBgQ,GAC+BA,EAA8BhQ,YAMzDd,EAAQA,QAGX8Q,EAAgCZ,EAAKxM,MAAM4B,gBAAgBsH,KAAK,SAAAH,GAAG,OAAIA,EAAI/L,MAAMwD,MAAQxD,EAAMA,MAAMwD,MASzG,OANGxD,EAAMI,cADNgQ,GACoBA,EAA8BhQ,YAM9CJ,IAKnBwP,EAAKvE,SAAS,SAAAjI,GACV,MAAO,CACDsG,aAAcsC,KAQ7B4D,EAAKxM,MAAM4B,gBAAgBzG,OAAS,GAEnCqR,EAAKxM,MAAM4B,gBAAgByL,QAAQ,SAACrQ,EAAM1B,GAEnC0B,EAAMA,MAAMwD,MAAQlE,EAAQ6L,UAExB7L,EAAQ6Q,cAAgD,2BAAhC7Q,EAAQ6Q,aAAa9Q,UACd,IAA3BC,EAAQA,QAAQ8H,SAEfoI,EAAKvE,SAAS,SAAAjI,GACV,IAAI4I,EAAS5I,EAAM4B,gBAMnB,OAJAgH,EAAOtN,GAAO8B,aAAc,EAE5ByH,GAAY0E,mBAAmBX,GAExB,CACDhH,gBAAiBgH,EACjBvM,OAAQ,UACRmK,eAAgB,SAAUxJ,EAAMA,MAAMC,UAAW,IAAKD,EAAMA,MAAME,SAAU,uBAAuBsP,EAAKxM,MAAM2F,aAAa1K,UAAU,iBAM/IuR,EAAKvE,SAAS,SAAAjI,GACZ,IAAI4I,EAAS5I,EAAM4B,gBAMnB,OAJAgH,EAAOtN,GAAO8B,aAAc,EAE5ByH,GAAY0E,mBAAmBX,GAExB,CACHhH,gBAAiBgH,EACjBvM,OAAQ,UACRmK,eAAgB,SAAUxJ,EAAMA,MAAMC,UAAW,IAAKD,EAAMA,MAAME,SAAU,kCAAkCsP,EAAKxM,MAAM2F,aAAa1K,UAAU,kBAM3JqB,EAAQ6Q,cAAgD,oBAAhC7Q,EAAQ6Q,aAAa9Q,QAEzCC,EAAQA,SACPkQ,EAAKvE,SAAS,SAAAjI,GACV,IAAIyJ,EAAQzJ,EAAMuG,4BAEdjJ,EAAOhB,EAAQA,QAInB,OAFAmN,EAAMI,KAAK,CAACvM,KAAKA,EAAMN,MAAMA,IAEtB,CACHuJ,4BAA8BkD,WAYhE,IAAM6D,EAASC,KAr1CG,wBAu1ClBD,EAAOE,GAAG,UACR,kBAAMlK,QAAQC,IAAI,4BAGpB+J,EAAOE,GAAG,YAAa,SAAAC,GACnBnK,QAAQC,IAAI,2BAMhB+J,EAAOE,GAAG,YACR,SAAA5K,GACMA,GACC4J,EAAKvE,SAAS,SAAAjI,GACb,IAAIpG,EAAMoG,EAAMqF,YACZS,EAAM9F,EAAMO,OAKhB,OAHAuF,EAAI+D,KAAKjH,GACThJ,EAAIiQ,KAAKjH,GAEF,CACHwD,YAAY,EACZ7F,OAAQuF,EACRK,kBAAmBvD,EAAKpC,IACxBwF,KAAM,GACNX,YAAazL,EACbiM,OAAQ,CACNC,IAAKlD,EAAK+G,SACV5D,IAAKnD,EAAKgH,gBAQ1B0D,EAAOE,GAAG,OACR,SAAA5K,GACKA,GACC4J,EAAKvE,SAAS,SAAAjI,GACZ,IAAIpG,EAAMoG,EAAMoF,UACZU,EAAM9F,EAAMO,OAKhB,OAHAuF,EAAI+D,KAAKjH,GACThJ,EAAIiQ,KAAKjH,GAEF,CACHwD,YAAY,EACZ7F,OAAQuF,EACRK,kBAAmBvD,EAAKpC,IACxBwF,KAAM,GACNZ,UAAWxL,EACXiM,OAAQ,CACNC,IAAKlD,EAAK+G,SACV5D,IAAKnD,EAAKgH,gBAQ1B1L,KAAKwG,eACLxG,KAAKyG,kGAGgBjG,yFACMgP,GAAiB,CAAChP,mBAE5B,UAFP0F,iCAGFlG,KAAK+J,SAAS,CACV5L,OAAQ,iBACR+I,UAAW,GACXE,mBAAoB,+BAMzBlB,GAAUA,EAASxB,MAAMwB,EAASxB,KAAKwC,WACtC9B,QAAQC,IAAI,CAACa,aACY,YAAtBlG,KAAK8B,MAAM3D,OACV6B,KAAK+J,SAAS,CACV5L,OAAQ,QACR+I,UAAWhB,EAASxB,KAAKwC,UACzBE,mBAAoBlB,EAASxB,KAAKwC,YAItClH,KAAK+J,SAAS,CACV7C,UAAWhB,EAASxB,KAAKwC,UACzBE,mBAAoBlB,EAASxB,KAAKwC,aAK1ClH,KAAK+J,SAAS,CACV5L,OAAQ,QACR+I,UAAW,GACXE,mBAAoB,2LAKT5G,yFACIgP,GAAmB,CAAChP,mBAE9B,UAFP0F,iCAGFlG,KAAK+J,SAAS,CACV5L,OAAQ,qBACRgJ,YAAa,GACbE,qBAAsB,+BAK3BnB,GAAUA,EAASxB,MAAMwB,EAASxB,KAAKyC,aACtC/B,QAAQC,IAAI,CAACa,aACY,YAAtBlG,KAAK8B,MAAM3D,OACV6B,KAAK+J,SAAS,CACV5L,OAAQ,QACRgJ,YAAajB,EAASxB,KAAKyC,YAC3BE,qBAAsBnB,EAASxB,KAAKyC,cAIxCnH,KAAK+J,SAAS,CACV5C,YAAajB,EAASxB,KAAKyC,YAC3BE,qBAAsBnB,EAASxB,KAAKyC,eAK5CnH,KAAK+J,SAAS,CACV5L,OAAQ,QACRgJ,YAAa,GACbE,qBAAsB,4QAM1BoI,EAAOzP,cACYwP,GAAiB,CAAChP,KAAMuG,eAElC,UAFPb,2DAMHA,GAAUA,EAASxB,MAAMwB,EAASxB,KAAKwC,WAAWhB,EAASxB,KAAKwC,UAAUjK,OAAO,GAChFwS,EAAK1F,SAAS,SAAAjI,GAGV,IAFA,IAAIwK,EAAMxK,EAAMO,OAER8K,EAAI,EAAGA,EAAEjH,EAASxB,KAAKwC,UAAUjK,OAAQkQ,IAC7Cb,EAAIX,KAAKzF,EAASxB,KAAKwC,UAAUiG,IAKrC,MAAO,CACH9K,OAHJiK,EAAMtQ,GAAM0T,UAAUpD,8QAW1BmD,EAAOzP,cACYwP,GAAmB,CAAChP,KAAMuG,eAEpC,UAFPb,2DAMHA,GAAUA,EAASxB,MAAMwB,EAASxB,KAAKyC,aAAajB,EAASxB,KAAKyC,YAAYlK,OAAO,GACpFwS,EAAK1F,SAAS,SAAAjI,GAGV,IAFA,IAAIwK,EAAMxK,EAAMO,OAER8K,EAAI,EAAGA,EAAEjH,EAASxB,KAAKyC,YAAYlK,OAAQkQ,IAC/Cb,EAAIX,KAAKzF,EAASxB,KAAKyC,YAAYgG,IAKvC,MAAO,CACH9K,OAHJiK,EAAMtQ,GAAM0T,UAAUpD,sRAUPkD,GAAmB,CAAChP,KAAMuG,eAEpC,UAFPb,iCAIFlG,KAAK+J,SAAS,CACV5L,OAAQ,qBACRgJ,YAAa,GACbE,qBAAsB,+BAK3BnB,GAAUA,EAASxB,MAAMwB,EAASxB,KAAKyC,aAAajB,EAASxB,KAAKyC,YAAYlK,OAAO,EACpF+C,KAAK+J,SAAS,SAAAjI,GAGd,IAFA,IAAIwK,EAAMxK,EAAMO,OAER8K,EAAI,EAAGA,EAAEjH,EAASxB,KAAKyC,YAAYlK,OAAQkQ,IAC/Cb,EAAIX,KAAKzF,EAASxB,KAAKyC,YAAYgG,IAKvC,OAFAb,EAAMtQ,GAAM0T,UAAUpD,GAEG,YAAtBqD,EAAK7N,MAAM3D,OACH,CACHA,OAAQ,QACRkE,OAASiK,EACTnF,YAAajB,EAASxB,KAAKyC,YAC3BE,qBAAsBnB,EAASxB,KAAKyC,aAIjC,CACH9E,OAASiK,EACTnF,YAAajB,EAASxB,KAAKyC,YAC3BE,qBAAsBnB,EAASxB,KAAKyC,eAM5CnH,KAAK+J,SAAS,CACV5L,OAAQ,QACRgJ,YAAa,GACbE,qBAAsB,mRAOPmI,GAAiB,CAAChP,KAAMuG,eAElC,UAFPb,iCAIFlG,KAAK+J,SAAS,CACV5L,OAAQ,iBACR+I,UAAW,GACXE,mBAAoB,+BAKzBlB,GAAUA,EAASxB,MAAMwB,EAASxB,KAAKwC,WAAWhB,EAASxB,KAAKwC,UAAUjK,OAAO,EAChF+C,KAAK+J,SAAS,SAAAjI,GAGV,IAFA,IAAIwK,EAAMxK,EAAMO,OAER8K,EAAI,EAAGA,EAAEjH,EAASxB,KAAKwC,UAAUjK,OAAQkQ,IAC7Cb,EAAIX,KAAKzF,EAASxB,KAAKwC,UAAUiG,IAKrC,OAFAb,EAAMtQ,GAAM0T,UAAUpD,GAEG,YAAtBsD,EAAK9N,MAAM3D,OACH,CACHA,OAAQ,QACRkE,OAASiK,EACTpF,UAAWhB,EAASxB,KAAKwC,UACzBE,mBAAoBlB,EAASxB,KAAKwC,WAI/B,CACH7E,OAASiK,EACTpF,UAAWhB,EAASxB,KAAKwC,UACzBE,mBAAoBlB,EAASxB,KAAKwC,aAM9ClH,KAAK+J,SAAS,CACV5L,OAAQ,QACR+I,UAAW,GACXE,mBAAoB,2JAM9BpH,KAAK+J,SAAS,CACV7B,YAAY,qCAMlB,IAAI2H,EAeAC,EASAC,EASJ,OA9BGF,EADA7P,KAAK8B,MAAMoG,WACH9L,EAAAR,EAAAS,cAAC2T,GAAApU,EAAD,CACR8J,IAAKuK,IACLC,WAAYC,KAAMhK,OAAOiK,QACzBC,iBAAkB,EAClBC,UAAWtQ,KAAKuQ,kBAChBC,UAAWxQ,KAAKyQ,kBAChBC,kBAAmB1Q,KAAKiJ,4BAGjB,GAMR6G,EADC9P,KAAK8B,MAAM0F,uBACapL,EAAAR,EAAAS,cAACiD,GAAD,CAAiB7C,aAAcuD,KAAK6I,aAActJ,SAAUS,KAAK8B,MAAM2F,aAAc7K,QAASoD,KAAK2J,8BAGnG,GAMzBoG,EADC/P,KAAK8B,MAAMwF,cACIlL,EAAAR,EAAAS,cAACH,GAAD,CAASO,aAAcuD,KAAK6I,aAAclM,UAAWqD,KAAK8B,MAAM2F,aAAc/K,gBAAiBsD,KAAKtD,gBAAiBE,QAASoD,KAAK2J,8BAGnI,GAIdvN,EAAAR,EAAAS,cAAA,OAAKC,UAAU,mBAAmBuB,MAAO+I,IACrCxK,EAAAR,EAAAS,cAACsU,GAAD,CAAQtO,OAAQrC,KAAK8B,MAAMO,OAAQH,cAAelC,KAAKkC,gBACtD4N,EACAC,EACA/P,KAAK8B,MAAMyF,oBAAsBnL,EAAAR,EAAAS,cAACuC,GAAD,CAAcO,qBAAsBa,KAAKb,qBAAsBN,kBAAmBmB,KAAKnB,kBAAmBQ,qBAAsBW,KAAKX,qBAAsBP,MAAOkB,KAAK8B,MAAM4F,cAAetI,KAAMY,KAAK8B,MAAM2F,eAAkB,GAEjQrL,EAAAR,EAAAS,cAACuU,GAAD,CAAU7P,OAAQf,KAAKe,OAAQZ,eAAgBH,KAAKG,eAAgBG,aAAcN,KAAKM,aAAcE,KAAMR,KAAK8B,MAAMtB,KAAMG,cAAeX,KAAK8B,MAAMnB,cACtJC,eAAgBZ,KAAKY,eAAgBC,mBAAoBb,KAAK8B,MAAMjB,mBAAoBC,qBAAsBd,KAAKc,qBAAsBb,qBAAsBD,KAAKC,uBAEnK4P,EACDzT,EAAAR,EAAAS,cAACkQ,EAAA,IAAD,CAAKsE,OAAQ7Q,KAAK7D,MAAM0U,OACpBhT,MAAO+I,GACPkK,QAAS9Q,KAAK+Q,YACdC,cAAehR,KAAK8B,MAAM6F,OAC1BA,OAAQ3H,KAAK8B,MAAM6F,OACnBG,KAAM9H,KAAK8B,MAAMgG,MAEhB9H,KAAKiR,sBACLjR,KAAKkR,wBACLlR,KAAKmR,mBAIV/U,EAAAR,EAAAS,cAAC6B,GAAD,CAAQC,OAAQ6B,KAAK8B,MAAM3D,OAAQH,YAAagC,KAAKhC,YAAaI,QAAS4B,KAAK8B,MAAMwG,iBAGlFtI,KAAK8B,MAAMuG,4BAA4BpL,OAAS,EAAKb,EAAAR,EAAAS,cAACqG,GAAD,CAAaM,eAAgBhD,KAAK8B,MAAMuG,4BAA4BrI,KAAK8B,MAAMuG,4BAA4BpL,OAAS,GAAIgG,0CAA2CjD,KAAKiD,0CAA2CF,mBAAoB/C,KAAK+C,qBAAyB,IAI1R,IAAhC/C,KAAK8B,MAAMmF,YAAYd,OAAgB/J,EAAAR,EAAAS,cAACiH,GAAD,CAAgBC,WAA4C,cAAhCvD,KAAK8B,MAAMmF,YAAY9I,OAAuB6B,KAAKyJ,iBAAmBzJ,KAAKwJ,YAAahG,UAAWxD,KAAK0J,YAAatL,QAAS4B,KAAK8B,MAAM1D,UAAc,WA5rDxN4C,aAosDHoQ,8BAAiB,CAC5BC,OAAS,2CADED,CAEZpK,IC7vDW,IAAI/K,qCCElBiH,KAAWC,cAAc,SAEzB,IAAMmO,GAAW,CACbC,QAAS,QACT/O,OAAQ,SACRjE,OAAQ,qBAGG,SAASiT,GAAOrV,GAC3B,OAAQC,EAAAR,EAAAS,cAAA,WACID,EAAAR,EAAAS,cAACsG,GAAA/G,EAAD,CACIgH,OAAQzG,EAAMsV,UACdnV,UAAU,eACVuG,iBAAiB,iBACjBC,aAAa,yBAEb1G,EAAAR,EAAAS,cAACqV,GAAA9V,EAAD,CACI+V,IAAKL,GACLM,SAAU,KACVC,KAAM,GACNrT,MAAO,UACPsT,QAAS3V,EAAMsV,cClBvCvO,KAAWC,cAAc,SAEzB,IAAMC,GAAiB,CACnBxD,YAAa,OAGXyD,GAAkB,CACpB1D,WAAY,MACZC,YAAa,QAGXC,GAAiB,CACnBD,YAAa,OAGImS,eACjB,SAAAA,EAAY5V,GAAM,IAAA4D,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAA+R,IACdhS,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAsQ,GAAAlQ,KAAA7B,KAAM7D,KAED2F,MAAQ,CACT/C,UAAW,GACXC,SAAU,GACVzB,aAAc,GACd0B,WAAY,GACZoF,SAAU,GACV2N,eAAgB,GAChB5L,MAAO,GACPqL,WAAW,GAGf1R,EAAKkS,cAAgBlS,EAAKkS,cAAclQ,KAAnBN,OAAAO,EAAA,EAAAP,CAAA1B,IACrBA,EAAKmS,eAAiBnS,EAAKmS,eAAenQ,KAApBN,OAAAO,EAAA,EAAAP,CAAA1B,IACtBA,EAAKoS,YAAcpS,EAAKoS,YAAYpQ,KAAjBN,OAAAO,EAAA,EAAAP,CAAA1B,IACnBA,EAAKqS,YAAcrS,EAAKqS,YAAYrQ,KAAjBN,OAAAO,EAAA,EAAAP,CAAA1B,IAjBLA,6EAqBdC,KAAK+J,SAAS,CACV0H,WAAW,0CAKfzR,KAAK+J,SAAS,CACV0H,WAAW,kFAICjV,sEAChBA,EAAEyF,iBAEFjC,KAAK+J,SAAS,CACV3D,MAAO,OAGRpG,KAAK8B,MAAM/C,UAAU9B,QAAQ,GAAK+C,KAAK8B,MAAM9C,SAAS/B,QAAQ,0BAC7D+C,KAAK+J,SAAS,CACV3D,MAAO,4EAMZpG,KAAK8B,MAAMvE,aAAaN,OAAS,2BAChC+C,KAAK+J,SAAS,CACV3D,MAAO,qEAMZpG,KAAK8B,MAAM7C,WAAWhC,OAAS,2BAC9B+C,KAAK+J,SAAS,CACV3D,MAAO,oEAMZpG,KAAK8B,MAAMuC,SAASpH,OAAS,GAAK+C,KAAK8B,MAAMkQ,eAAe/U,OAAS,2BACpE+C,KAAK+J,SAAS,CACV3D,MAAO,0FAMZpG,KAAK8B,MAAMuC,WAAarE,KAAK8B,MAAMkQ,uCAClChS,KAAK+J,SAAS,CACV3D,MAAO,oDAMfhB,QAAQC,IAAIrF,KAAK8B,uJAwBF,IAAAK,EAAAnC,KACZA,KAAK7D,MAAMkW,YAAYpV,OAAS,GAC/B+C,KAAK+J,SAAS,SAAAjI,GACV,MAAO,CACH7C,WAAYkD,EAAKhG,MAAMkW,YAAY,6CAMpCrG,GACX,IAAMC,EAASD,EAAMC,OACf1L,EAAwB,aAAhB0L,EAAOqG,KAAsBrG,EAAOsG,QAAUtG,EAAO1L,MAC7DG,EAAOuL,EAAOvL,KAEpBV,KAAK+J,SAALtI,OAAA+Q,GAAA,EAAA/Q,CAAA,GACKf,EAAOH,qCAIR,IAAAgK,EAAAvK,KACJ,OACI5D,EAAAR,EAAAS,cAAA,WACID,EAAAR,EAAAS,cAACsG,GAAA/G,EAAD,CACIgH,QAAQ,EACRtG,UAAU,QACVuG,iBAAiB,UACjBC,aAAa,yBACb1G,EAAAR,EAAAS,cAAA,MAAIC,UAAU,yBAAd,aACAF,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,MAAIC,UAAU,kBAAmB0D,KAAK8B,MAAMsE,MAAQpG,KAAK8B,MAAMsE,MAAQ,IACvEhK,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,OAAKC,UAAU,OACXF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,YACXF,EAAAR,EAAAS,cAAA,SAAOoW,QAAQ,YAAWrW,EAAAR,EAAAS,cAAA,yBAC1BD,EAAAR,EAAAS,cAAA,SAAOqW,UAAQ,EAACC,aAAa,MAAMlS,GAAG,YAAY6R,KAAK,OAAO5R,KAAK,YAAYL,SAAUL,KAAKkS,eAAgB3R,MAAOP,KAAK8B,MAAM/C,UAAWzC,UAAU,8BAA8BsW,YAAY,gBAEnMxW,EAAAR,EAAAS,cAAA,OAAKC,UAAU,YACXF,EAAAR,EAAAS,cAAA,SAAOoW,QAAQ,YAAWrW,EAAAR,EAAAS,cAAA,wBAC1BD,EAAAR,EAAAS,cAAA,SAAOqW,UAAQ,EAACC,aAAa,MAAMlS,GAAG,WAAW6R,KAAK,OAAO5R,KAAK,WAAWL,SAAUL,KAAKkS,eAAgB3R,MAAOP,KAAK8B,MAAM9C,SAAU1C,UAAU,8BAA8BsW,YAAY,gBAGpMxW,EAAAR,EAAAS,cAAA,OAAKC,UAAU,OACXF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,YACXF,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,SAAOoW,QAAQ,YAAWrW,EAAAR,EAAAS,cAAA,2BAC1BD,EAAAR,EAAAS,cAAA,SAAOqW,UAAQ,EAACC,aAAa,MAAMlS,GAAG,eAAe6R,KAAK,QAAQ5R,KAAK,eAAeL,SAAUL,KAAKkS,eAAgB3R,MAAOP,KAAK8B,MAAMvE,aAAcjB,UAAU,8BAA8BsW,YAAY,kBAE7MxW,EAAAR,EAAAS,cAAA,OAAKC,UAAU,YACXF,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,SAAOoW,QAAQ,YAAWrW,EAAAR,EAAAS,cAAA,yBAC1BD,EAAAR,EAAAS,cAAA,UAAQwB,MAAOgC,GAAgBvD,UAAU,eAAemE,GAAG,aAAaC,KAAK,aAAaH,MAAOP,KAAK8B,MAAM7C,WAAYoB,SAAUL,KAAKkS,gBAE/HlS,KAAK7D,MAAMkW,YAAYnV,IAAI,SAAA2V,GACvB,OAAOzW,EAAAR,EAAAS,cAAA,cAASwW,QAMpCzW,EAAAR,EAAAS,cAAA,OAAKC,UAAU,OACXF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,YACXF,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,SAAOoW,QAAQ,YAAWrW,EAAAR,EAAAS,cAAA,uBAC1BD,EAAAR,EAAAS,cAAA,SAAOqW,UAAQ,EAACC,aAAa,MAAMlS,GAAG,WAAW6R,KAAK,WAAW5R,KAAK,WAAWL,SAAUL,KAAKkS,eAAgB3R,MAAOP,KAAK8B,MAAMuC,SAAU/H,UAAU,8BAA8BsW,YAAY,cAEpMxW,EAAAR,EAAAS,cAAA,OAAKC,UAAU,YACXF,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,SAAOoW,QAAQ,YAAWrW,EAAAR,EAAAS,cAAA,6BAC1BD,EAAAR,EAAAS,cAAA,SAAOqW,UAAQ,EAACC,aAAa,MAAMlS,GAAG,iBAAiB6R,KAAK,WAAW5R,KAAK,iBAAiBL,SAAUL,KAAKkS,eAAgB3R,MAAOP,KAAK8B,MAAMkQ,eAAgB1V,UAAU,8BAA8BsW,YAAY,qBAI1NxW,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAQC,UAAU,sCAAsCuB,MAAOuF,GAAgB7G,QAAS,SAAAC,GAAC,OAAI+N,EAAK0H,cAAczV,KAAhH,UACAJ,EAAAR,EAAAS,cAAA,UAAQC,UAAU,iDAAiDuB,MAAOwF,GAAiB9G,QAASyD,KAAK7D,MAAM2W,YAA/G,WAIJ1W,EAAAR,EAAAS,cAACmV,GAAD,CAAQC,UAAWzR,KAAK8B,MAAM2P,oBAzLVzQ,aCb9BnB,WAAiB,CACnBF,WAAW,MACXC,YAAa,QAGImS,eACjB,SAAAA,EAAY5V,GAAM,IAAA4D,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAA+R,IACdhS,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAsQ,GAAAlQ,KAAA7B,KAAM7D,KAED2F,MAAQ,CACT4I,OAAQ,GACR2H,YAAa,GACbU,cAAe,GACfC,oBAAqB,GACrBC,eAAgB,GAChBhM,aAAa,EACbiM,cAAc,EACdC,iBAAiB,EACjBC,eAAe,EACfC,eAAgB,GAChB5B,WAAW,GAGf1R,EAAKuT,UAAYvT,EAAKuT,UAAUvR,KAAfN,OAAAO,EAAA,EAAAP,CAAA1B,IACjBA,EAAKwT,oBAAsBxT,EAAKwT,oBAAoBxR,KAAzBN,OAAAO,EAAA,EAAAP,CAAA1B,IAC3BA,EAAK2G,eAAiB3G,EAAK2G,eAAe3E,KAApBN,OAAAO,EAAA,EAAAP,CAAA1B,IACtBA,EAAKyT,YAAczT,EAAKyT,YAAYzR,KAAjBN,OAAAO,EAAA,EAAAP,CAAA1B,IACnBA,EAAK+S,WAAa/S,EAAK+S,WAAW/Q,KAAhBN,OAAAO,EAAA,EAAAP,CAAA1B,IAClBA,EAAKoT,gBAAkBpT,EAAKoT,gBAAgBpR,KAArBN,OAAAO,EAAA,EAAAP,CAAA1B,IACvBA,EAAKmT,aAAenT,EAAKmT,aAAanR,KAAlBN,OAAAO,EAAA,EAAAP,CAAA1B,IACpBA,EAAKqT,cAAgBrT,EAAKqT,cAAcrR,KAAnBN,OAAAO,EAAA,EAAAP,CAAA1B,IACrBA,EAAK0T,oBAAsB1T,EAAK0T,oBAAoB1R,KAAzBN,OAAAO,EAAA,EAAAP,CAAA1B,IAC3BA,EAAKoS,YAAcpS,EAAKoS,YAAYpQ,KAAjBN,OAAAO,EAAA,EAAAP,CAAA1B,IACnBA,EAAKqS,YAAcrS,EAAKqS,YAAYrQ,KAAjBN,OAAAO,EAAA,EAAAP,CAAA1B,IA3BLA,6EA+BdC,KAAK+J,SAAS,CACV0H,WAAW,0CAKfzR,KAAK+J,SAAS,CACV0H,WAAW,6JAKfzR,KAAKmS,uBLUD5L,GAtDS,eAuDJhC,KAAK,SAAAC,GACF,OAAOA,IAEVI,MAAM,SAAAC,GAEH,OADAO,QAAQC,IAAI,CAACR,QACN,oBKdbqB,SAENlG,KAAKoS,cAES,UAAXlM,mDAKAA,GAAYA,EAASxB,MAAQwB,EAASxB,KAAKzH,OAAS,GACnD+C,KAAK+J,SAAS,CACVW,OAAQxE,EAASxB,6LAKHgP,gFACtB1T,KAAKmS,uBLED5L,GAhEmB,0BAgEW,CAACtH,WKAYyU,ILCtCnP,KAAK,SAAAC,GACF,OAAOA,IAEVI,MAAM,SAAAC,GAEH,OADAO,QAAQC,IAAI,CAACR,QACN,oBKNbqB,SAENlG,KAAKoS,cAES,UAAXlM,mDAKAA,GAAYA,EAASxB,MAAQwB,EAASxB,KAAKzH,OAAS,GACnD+C,KAAK+J,SAAS,CACVW,OAAQxE,EAASxB,wQAMzB1E,KAAKmS,uBAEkB3C,eAAjBtJ,SAENlG,KAAKoS,cAES,UAAXlM,mDAKAA,GAAYA,EAASxB,MAAQwB,EAASxB,KAAKzH,OAAS,GACnD+C,KAAK+J,SAAS,SAAAjI,GACV,IAAI6R,EAAO,CAAC,OAMZ,OAJAzN,EAASxB,KAAKxH,IAAI,SAAA2V,GACdc,EAAKhI,KAAKkH,EAAInS,QAGX,CACH2R,YAAasB,mLAMX7U,uFACdkB,KAAKmS,uBLZe1R,EKcmB3B,EAAMwD,ILb1CiE,GAnGY,gBAmGU,CAAC9F,OACrB8D,KAAK,SAAAC,GACF,OAAOA,IAEVI,MAAM,SAAAC,GAEH,OADAO,QAAQC,IAAIR,GACL,oBKOTqB,SAENlG,KAAKoS,cAES,UAAXlM,mDAKAA,GAAYA,EAASxB,MAAQwB,EAASxB,KAAKzH,OAAS,GACnD+C,KAAK+J,SAAS,SAAAjI,GACV,IAAI4I,EAASvI,EAAKL,MAAM4I,OAIxB,OAFAA,EAAON,OAAOjI,EAAKuI,OAAOL,QAAQvL,GAAO,GAElC,CACH4L,OAAQA,sCL9BD,IAACjK,wGKqCpBT,KAAK+J,SAAS,CACV9C,aAAa,EACbiM,cAAc,EACdC,iBAAiB,EACjBC,eAAe,4CAIPtU,GACZkB,KAAK+J,SAAS,CACVkJ,eAAgBnU,EAChBmI,aAAa,EACboM,eAAgB,yCAA0CvU,EAAMC,UAAW,4EAK/EiB,KAAK+J,SAAS,CACVmJ,cAAe,0CAITpU,GACVkB,KAAK+J,SAAS,CACVqJ,eAAgB,EAChBH,eAAgBnU,gDAIJkN,GAChB,IACMzL,EADSyL,EAAMC,OACA1L,MAErBP,KAAK+J,SAAS,CACViJ,oBAAqBzS,IAGd,QAARA,EACCP,KAAKsT,YAGLtT,KAAKuT,oBAAoBhT,+CAK7BP,KAAKsT,YACLtT,KAAK0G,kDAGD,IAAA6D,EAAAvK,KACJ,OACI5D,EAAAR,EAAAS,cAAA,OAAKC,UAAU,oBACXF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,mBACXF,EAAAR,EAAAS,cAAA,MAAIC,UAAU,gBAAd,kCACAF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,kBACXF,EAAAR,EAAAS,cAACuX,EAAA,EAAD,CAAM/V,MAAOgC,GAAgBgU,GAAI,IAAKvX,UAAU,yDAC5CF,EAAAR,EAAAS,cAAA,UAAQC,UAAU,uCAAlB,aAGJF,EAAAR,EAAAS,cAAA,UAAQwB,MAAOgC,GAAgBvD,UAAU,4CAA4CmE,GAAG,SAASC,KAAK,SAASH,MAAOP,KAAK8B,MAAMkR,oBAAqB3S,SAAUL,KAAKyT,qBAE7JzT,KAAK8B,MAAMuQ,YAAYnV,IAAI,SAAA2V,GACvB,OAAOzW,EAAAR,EAAAS,cAAA,cAASwW,MAI5BzW,EAAAR,EAAAS,cAAA,UAAQE,QAASyD,KAAKkT,aAAcrV,MAAOgC,GAAgBvD,UAAU,oEAArE,aACAF,EAAAR,EAAAS,cAACuX,EAAA,EAAD,CAAM/V,MAAOgC,GAAgBgU,GAAI,eAAgBvX,UAAU,4BACvDF,EAAAR,EAAAS,cAAA,UAAQC,UAAU,uCAAlB,gBAEJF,EAAAR,EAAAS,cAAA,UAAQE,QAAS,SAAAC,GAAC,OAAI+N,EAAKpO,MAAM4E,OAAOvE,IAAIF,UAAU,+EAAtD,YAGRF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,OACXF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,eAInBF,EAAAR,EAAAS,cAACmV,GAAD,CAAQC,UAAWzR,KAAK8B,MAAM2P,YAG1BzR,KAAK8B,MAAMoR,aAAe9W,EAAAR,EAAAS,cAACyX,GAAD,CAAUhB,WAAY9S,KAAK8S,WAAYT,YAAarS,KAAK8B,MAAMuQ,cAAkB,IAI9E,IAA7BrS,KAAK8B,MAAMqR,gBAAyB/W,EAAAR,EAAAS,cAACiH,GAAD,CAAgBC,WAAYvD,KAAKwT,YAAahQ,UAAWxD,KAAK8S,WAAY1U,QAAS4B,KAAK8B,MAAMuR,iBAAqB,WA5NvIrS,aCZ9BhF,GAAQ,IAAIC,GAEZ0D,GAAa,CACfA,WAAY,QAGD,SAASoU,GAAW5X,GAC/B,OAAQC,EAAAR,EAAAS,cAAA,OAAKC,UAAU,qBACXF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,qBACXF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,OACXF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,qBACXF,EAAAR,EAAAS,cAAA,MAAIC,UAAU,oBAAoBH,EAAM8C,WAAWyB,OAEvDtE,EAAAR,EAAAS,cAAA,OAAKC,UAAU,qBACXF,EAAAR,EAAAS,cAAA,UAAKL,GAAMgY,QAAQ7X,EAAM8C,WAAWlD,YAG5CK,EAAAR,EAAAS,cAAA,OAAKC,UAAU,OACXF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,qDACXF,EAAAR,EAAAS,cAAA,UAAQE,QAAS,SAAAC,GAAC,OAAIL,EAAM8X,cAAczX,EAAGL,EAAM8C,aAAa3C,UAAU,sCAA1E,UACAF,EAAAR,EAAAS,cAAA,UAAQwB,MAAO8B,GAAYpD,QAAS,SAAAC,GAAC,OAAIL,EAAM+X,YAAY1X,EAAGL,EAAM8C,aAAa3C,UAAU,uCAA3F,YCf5B4G,KAAWC,cAAc,SAEzB,IAAMC,GAAiB,CACnBzD,WAAY,OACZC,YAAa,OAGXyD,GAAkB,CACpB1D,WAAY,MACZC,YAAa,QAGIuU,eACjB,SAAAA,EAAYhY,GAAM,IAAA4D,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAAmU,IACdpU,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAA0S,GAAAtS,KAAA7B,KAAM7D,KAED2F,MAAQ,CACTpB,KAAM,GACNvC,OAAQ,UACRmK,eAAgB,GAChBmJ,WAAW,GAGf1R,EAAKoS,YAAcpS,EAAKoS,YAAYpQ,KAAjBN,OAAAO,EAAA,EAAAP,CAAA1B,IACnBA,EAAKqS,YAAcrS,EAAKqS,YAAYrQ,KAAjBN,OAAAO,EAAA,EAAAP,CAAA1B,IACnBA,EAAKmS,eAAiBnS,EAAKmS,eAAenQ,KAApBN,OAAAO,EAAA,EAAAP,CAAA1B,IACtBA,EAAKqU,eAAiBrU,EAAKqU,eAAerS,KAApBN,OAAAO,EAAA,EAAAP,CAAA1B,IAbRA,6EAiBdC,KAAK+J,SAAS,CACV0H,WAAW,0CAKfzR,KAAK+J,SAAS,CACV0H,WAAW,gKAKZzR,KAAK8B,MAAMpB,KAAKzD,OAAS,mCPmFHyD,EOlFuBV,KAAK8B,MAAMpB,KPmFxD6F,GApHiB,qBAoHU,CAAC7F,SAC1B6D,KAAK,SAAAC,GACF,OAAOA,IAEVI,MAAM,SAAAC,GACH,MAAO,oBOtFE,UAFPqB,iCAGFlG,KAAK+J,SAAS,CACV5L,OAAQ,UACRmK,eAAgB,4FAMrBpC,GAAUA,EAASxB,MAClB1E,KAAK7D,MAAM2W,aACX9S,KAAK7D,MAAMuK,kBAGX1G,KAAK+J,SAAS,CACV5L,OAAQ,2CPiEI,IAACuC,yGO3DdsL,GACX,IAAMC,EAASD,EAAMC,OACf1L,EAAwB,aAAhB0L,EAAOqG,KAAsBrG,EAAOsG,QAAUtG,EAAO1L,MAC7DG,EAAOuL,EAAOvL,KAEpBV,KAAK+J,SAALtI,OAAA+Q,GAAA,EAAA/Q,CAAA,GACKf,EAAOH,qCAKZ,OACInE,EAAAR,EAAAS,cAAA,WACID,EAAAR,EAAAS,cAACsG,GAAA/G,EAAD,CACIgH,QAAQ,EACRtG,UAAU,eACVuG,iBAAiB,UACjBC,aAAa,yBACb1G,EAAAR,EAAAS,cAAA,MAAIC,UAAU,yBAAd,kBACAF,EAAAR,EAAAS,cAAA,SAAOC,UAAU,mBAAmBmW,QAAQ,YAAWrW,EAAAR,EAAAS,cAAA,8BACvDD,EAAAR,EAAAS,cAAA,SAAOqW,UAAQ,EAACC,aAAa,MAAMlS,GAAG,OAAO6R,KAAK,OAAO5R,KAAK,OAAOL,SAAUL,KAAKkS,eAAgB3R,MAAOP,KAAK8B,MAAMpB,KAAMpE,UAAU,8BAA8BsW,YAAY,oBAChLxW,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAQC,UAAU,sCAAsCuB,MAAOuF,GAAgB7G,QAASyD,KAAKoU,gBAA7F,QACAhY,EAAAR,EAAAS,cAAA,UAAQC,UAAU,gCAAgCuB,MAAOwF,GAAiB9G,QAASyD,KAAK7D,MAAM2W,YAA9F,WAEJ1W,EAAAR,EAAAS,cAACmV,GAAD,CAAQC,UAAWzR,KAAK8B,MAAM2P,oBA/EHzQ,aCVrCnB,GAAiB,CACnBF,WAAW,MACXC,YAAa,OAGIyU,eACjB,SAAAA,EAAYlY,GAAM,IAAA4D,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAAqU,IACdtU,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAA4S,GAAAxS,KAAA7B,KAAM7D,KAED2F,MAAQ,CACTuQ,YAAa,GACbW,oBAAqB,GACrB/L,aAAa,EACbqN,mBAAmB,EACnBC,sBAAsB,EACtBC,oBAAoB,EACpBnB,eAAgB,GAChB5B,WAAW,GAGf1R,EAAK2G,eAAiB3G,EAAK2G,eAAe3E,KAApBN,OAAAO,EAAA,EAAAP,CAAA1B,IACtBA,EAAK0U,iBAAmB1U,EAAK0U,iBAAiB1S,KAAtBN,OAAAO,EAAA,EAAAP,CAAA1B,IACxBA,EAAK+S,WAAa/S,EAAK+S,WAAW/Q,KAAhBN,OAAAO,EAAA,EAAAP,CAAA1B,IAClBA,EAAKwU,qBAAuBxU,EAAKwU,qBAAqBxS,KAA1BN,OAAAO,EAAA,EAAAP,CAAA1B,IAC5BA,EAAKuU,kBAAoBvU,EAAKuU,kBAAkBvS,KAAvBN,OAAAO,EAAA,EAAAP,CAAA1B,IACzBA,EAAKyU,mBAAqBzU,EAAKyU,mBAAmBzS,KAAxBN,OAAAO,EAAA,EAAAP,CAAA1B,IAC1BA,EAAKoS,YAAcpS,EAAKoS,YAAYpQ,KAAjBN,OAAAO,EAAA,EAAAP,CAAA1B,IACnBA,EAAKqS,YAAcrS,EAAKqS,YAAYrQ,KAAjBN,OAAAO,EAAA,EAAAP,CAAA1B,IArBLA,6EA0BdC,KAAK+J,SAAS,CACV0H,WAAW,0CAKfzR,KAAK+J,SAAS,CACV0H,WAAW,kKAKfzR,KAAKmS,uBAEkB3C,eAAjBtJ,SAENlG,KAAKoS,cAES,UAAXlM,mDAKAA,GAAYA,EAASxB,MAAQwB,EAASxB,KAAKzH,OAAS,GACnD+C,KAAK+J,SAAS,CACVsI,YAAanM,EAASxB,yQAM9B1E,KAAKmS,uBRgFoB1R,EQ9EmBT,KAAK8B,MAAMkR,oBAAoB1Q,IR+ExEiE,GAtIiB,qBAsIU,CAAC9F,OAC1B8D,KAAK,SAAAC,GACF,OAAOA,IAEVI,MAAM,SAAAC,GACH,MAAO,oBQpFTqB,SAENlG,KAAKoS,cAES,UAAXlM,mDAKAA,GAAYA,EAASxB,MAAQwB,EAASxB,OACrC1E,KAAK8S,aACL9S,KAAK+J,SAAS,SAAAjI,GACV,IAAIuQ,EAAcvQ,EAAMuQ,YAIxB,OAFAA,EAAYjI,OAAOiI,EAAYhI,QAAQvI,EAAMkR,qBAAqB,GAE3D,CACHX,YAAaA,EACbW,oBAAqB,wCR4DT,IAACvS,+GQtDRjE,EAAGyC,GACpBe,KAAK+J,SAAS,CACViJ,oBAAqB/T,EACrBsV,sBAAsB,EACtBlB,eAAgB,6DAEpB7W,EAAEyF,6DAIFjC,KAAK+J,SAAS,CACVuK,mBAAoB,+CAIT9X,EAAGyC,GAClBe,KAAK+J,SAAS,CACVyK,oBAAqB,EACrBxB,oBAAqB/T,IAEzBzC,EAAEyF,sDAIFjC,KAAK+J,SAAS,CACV9C,aAAa,EACbqN,mBAAmB,EACnBC,sBAAsB,EACtBC,oBAAoB,gDAKxBxU,KAAK0G,kDAGD,IAAAvE,EAAAnC,KACJ,OACI5D,EAAAR,EAAAS,cAAA,OAAKC,UAAU,oBACXF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,mBACXF,EAAAR,EAAAS,cAAA,MAAIC,UAAU,gBAAd,uCACAF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,kBACXF,EAAAR,EAAAS,cAACuX,EAAA,EAAD,CAAM/V,MAAOgC,GAAgBgU,GAAI,IAAKvX,UAAU,yDAC5CF,EAAAR,EAAAS,cAAA,UAAQC,UAAU,uCAAlB,aAGJF,EAAAR,EAAAS,cAACuX,EAAA,EAAD,CAAM/V,MAAOgC,GAAgBgU,GAAI,UAAWvX,UAAU,4BAClDF,EAAAR,EAAAS,cAAA,UAAQC,UAAU,uCAAlB,WAEJF,EAAAR,EAAAS,cAACuX,EAAA,EAAD,CAAM/V,MAAOgC,GAAgBgU,GAAI,eAAgBvX,UAAU,4BACvDF,EAAAR,EAAAS,cAAA,UAAQC,UAAU,uCAAlB,gBAEJF,EAAAR,EAAAS,cAAA,UAAQwB,MAAOgC,GAAgBtD,QAASyD,KAAKsU,kBAAmBhY,UAAU,oEAA1E,kBACAF,EAAAR,EAAAS,cAAA,UAAQE,QAAS,SAAAC,GAAC,OAAI2F,EAAKhG,MAAM4E,OAAOvE,IAAIF,UAAU,+EAAtD,YAGRF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,OACXF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,aACXF,EAAAR,EAAAS,cAAA,WAEI2D,KAAK8B,MAAMuQ,YAAYnV,IAAI,SAAA+B,GACvB,OAAO7C,EAAAR,EAAAS,cAAC0X,GAAD,CAAY1W,IAAK4B,EAAWqD,IAAKrD,WAAYA,EAAYgV,cAAe9R,EAAKoS,qBAAsBL,YAAa/R,EAAKqS,yBAMxIxU,KAAK8B,MAAMwS,kBAAoBlY,EAAAR,EAAAS,cAACqY,GAAD,CAAehO,eAAgB1G,KAAK0G,eAAgBoM,WAAY9S,KAAK8S,aAAgB,IAGlF,IAAlC9S,KAAK8B,MAAMyS,qBAA8BnY,EAAAR,EAAAS,cAACiH,GAAD,CAAgBC,WAAYvD,KAAKyU,iBAAkBjR,UAAWxD,KAAK8S,WAAY1U,QAAS4B,KAAK8B,MAAMuR,iBAAqB,GAErKjX,EAAAR,EAAAS,cAACmV,GAAD,CAAQC,UAAWzR,KAAK8B,MAAM2P,oBA5JLzQ,aCTnC2T,GAAO,IAAIzQ,GAEX0Q,GAAc,CAChBC,aAAc,MACdC,UAAW,OAGMC,eACjB,SAAAA,EAAY5Y,GAAM,IAAA4D,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAA+U,IACdhV,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAsT,GAAAlT,KAAA7B,KAAM7D,KAED2F,MAAO,CACRsC,SAAU,GACVC,SAAU,GACV+B,MAAO,GACPqL,WAAW,GAGf1R,EAAKkS,cAAgBlS,EAAKkS,cAAclQ,KAAnBN,OAAAO,EAAA,EAAAP,CAAA1B,IACrBA,EAAKmS,eAAiBnS,EAAKmS,eAAenQ,KAApBN,OAAAO,EAAA,EAAAP,CAAA1B,IACtBA,EAAKoS,YAAcpS,EAAKoS,YAAYpQ,KAAjBN,OAAAO,EAAA,EAAAP,CAAA1B,IACnBA,EAAKqS,YAAcrS,EAAKqS,YAAYrQ,KAAjBN,OAAAO,EAAA,EAAAP,CAAA1B,IAbLA,6EAiBdC,KAAK+J,SAAS,CACV0H,WAAW,0CAKfzR,KAAK+J,SAAS,CACV0H,WAAW,kFAICjV,EAAGW,4EACnBX,EAAEyF,iBAEFjC,KAAK+J,SAAS,CACV3D,MAAO,OAGRpG,KAAK8B,MAAMsC,SAASnH,QAAQ,GAAK+C,KAAK8B,MAAMuC,SAASpH,QAAQ,0BAC5D+C,KAAK+J,SAAS,CACV3D,MAAO,+EAMfpG,KAAKmS,uBAEkBwC,GAAKxQ,MAAMnE,KAAK8B,MAAMsC,SAAUpE,KAAK8B,MAAMuC,oBAA5D6B,SAENlG,KAAKoS,cAES,UAAXlM,0BAGClG,KAAK+J,SAAS,CACV3D,MAAO,uFAMZF,GAAYA,EAASxB,OACpB1E,KAAK7D,MAAMgI,QACXnE,KAAK7D,MAAM6Y,QAAQrJ,KAAK,mJAIjBK,GACX,IAAMC,EAASD,EAAMC,OACf1L,EAAwB,aAAhB0L,EAAOqG,KAAsBrG,EAAOsG,QAAUtG,EAAO1L,MAC7DG,EAAOuL,EAAOvL,KAEpBV,KAAK+J,SAALtI,OAAA+Q,GAAA,EAAA/Q,CAAA,GACKf,EAAOH,qCAKZ,OACInE,EAAAR,EAAAS,cAAA,OAAKC,UAAU,kBACXF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,gCACXF,EAAAR,EAAAS,cAAA,MAAIC,UAAU,gCAAgCuB,MAAO+W,IAArD,SACAxY,EAAAR,EAAAS,cAAA,MAAIC,UAAU,gCAAgCuB,MAAO+W,IAArD,SACAxY,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,MAAIC,UAAU,kBAAmB0D,KAAK8B,MAAMsE,MAAQpG,KAAK8B,MAAMsE,MAAQ,IACvEhK,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,SAAOC,UAAU,mBAAmBmW,QAAQ,YAAWrW,EAAAR,EAAAS,cAAA,wBACvDD,EAAAR,EAAAS,cAAA,SAAOqW,UAAQ,EAACC,aAAa,MAAMlS,GAAG,WAAW6R,KAAK,OAAO5R,KAAK,WAAWL,SAAUL,KAAKkS,eAAgB3R,MAAOP,KAAK8B,MAAMsC,SAAU9H,UAAU,8BAA8BsW,YAAY,cAC5LxW,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,SAAOC,UAAU,mBAAmBmW,QAAQ,YAAWrW,EAAAR,EAAAS,cAAA,uBACvDD,EAAAR,EAAAS,cAAA,SAAOqW,UAAQ,EAACC,aAAa,MAAMlS,GAAG,WAAW6R,KAAK,WAAW5R,KAAK,WAAWL,SAAUL,KAAKkS,eAAgB3R,MAAOP,KAAK8B,MAAMuC,SAAU/H,UAAU,8BAA8BsW,YAAY,aAChMxW,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,WACAD,EAAAR,EAAAS,cAAA,UAAQC,UAAU,yBAAyBC,QAASyD,KAAKiS,eAAzD,aAEJ7V,EAAAR,EAAAS,cAACmV,GAAD,CAAQC,UAAWzR,KAAK8B,MAAM2P,oBA/FXzQ,aCL7B2T,GAAO,IAAIzQ,GAiEF+Q,eA9DX,SAAAA,EAAY9Y,GAAM,IAAA4D,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAAiV,IACdlV,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAwT,GAAApT,KAAA7B,KAAM7D,KAUV4E,OAAS,WACL4T,GAAK5T,SAELhB,EAAKgK,SAAS,CACVmL,SAAS,KAfCnV,EAmBlBoE,MAAQ,WACJpE,EAAKgK,SAAS,CACVmL,SAAS,KAlBbnV,EAAK+B,MAAQ,CACToT,SAAU,GAGdnV,EAAKgB,OAAShB,EAAKgB,OAAOgB,KAAZN,OAAAO,EAAA,EAAAP,CAAA1B,IACdA,EAAKoE,MAAQpE,EAAKoE,MAAMpC,KAAXN,OAAAO,EAAA,EAAAP,CAAA1B,IARCA,wEAyBV,IAAAoC,EAAAnC,KACJ,OACI5D,EAAAR,EAAAS,cAAA,WACID,EAAAR,EAAAS,cAACuX,EAAA,EAAD,KACIxX,EAAAR,EAAAS,cAAC8Y,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,OAAQ,SAACnZ,GAAD,OACN,IAApBwY,GAAK7P,WACC1I,EAAAR,EAAAS,cAACkZ,GAAD9T,OAAAyJ,OAAA,GAAS/O,EAAT,CAAgB4E,OAAQoB,EAAKpB,UAC7B3E,EAAAR,EAAAS,cAAC8Y,EAAA,EAAD,CAAUtB,GAAG,SAAS1P,MAAOhC,EAAKgC,WAG5C/H,EAAAR,EAAAS,cAAC8Y,EAAA,EAAD,CAAOC,KAAK,UAAUC,OAAK,EAACC,OAAQ,SAACnZ,GAAD,OACZ,IAApBwY,GAAK7P,WACC1I,EAAAR,EAAAS,cAACmZ,GAAD/T,OAAAyJ,OAAA,GAAY/O,EAAZ,CAAmB4E,OAAQoB,EAAKpB,UAChC3E,EAAAR,EAAAS,cAAC8Y,EAAA,EAAD,CAAUtB,GAAG,SAAS1P,MAAOhC,EAAKgC,WAG5C/H,EAAAR,EAAAS,cAAC8Y,EAAA,EAAD,CAAOC,KAAK,eAAeC,OAAK,EAACC,OAAQ,SAACnZ,GAAD,OACjB,IAApBwY,GAAK7P,WACC1I,EAAAR,EAAAS,cAACoZ,GAADhU,OAAAyJ,OAAA,GAAiB/O,EAAjB,CAAwB4E,OAAQoB,EAAKpB,UACrC3E,EAAAR,EAAAS,cAAC8Y,EAAA,EAAD,CAAUtB,GAAG,SAAS1P,MAAOhC,EAAKgC,WAG5C/H,EAAAR,EAAAS,cAAC8Y,EAAA,EAAD,CAAOC,KAAK,SAASC,OAAK,EAACC,OAAQ,SAACnZ,GAAD,OACX,IAApBwY,GAAK7P,WACC1I,EAAAR,EAAAS,cAACqZ,GAADjU,OAAAyJ,OAAA,GAAW/O,EAAX,CAAkBgI,MAAOhC,EAAKgC,SAC9B/H,EAAAR,EAAAS,cAAC8Y,EAAA,EAAD1T,OAAAyJ,OAAA,CAAU2I,GAAG,KAAQ1X,EAArB,CAA4B4E,OAAQoB,EAAKpB,aAG3B,GAApBf,KAAK8B,MAAMoT,QAAgB9Y,EAAAR,EAAAS,cAAC8Y,EAAA,EAAD,CAAUtB,GAAG,SAAS1P,MAAOnE,KAAKmE,QAAY,YAtD7EnD,aCCA2U,QACW,cAA7BC,OAAOrW,SAASsW,UAEe,UAA7BD,OAAOrW,SAASsW,UAEhBD,OAAOrW,SAASsW,SAASC,MACvB,2DCbNC,IAAST,OAAOlZ,EAAAR,EAAAS,cAAC2Z,GAAD,MAAWC,SAASC,eAAe,SD4H7C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9R,KAAK,SAAA+R,GACjCA,EAAaC","file":"static/js/main.190a155b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/emergency_with_circle.0153b7ea.gif\";","module.exports = __webpack_public_path__ + \"static/media/call_with_circle.34c87478.gif\";","module.exports = __webpack_public_path__ + \"static/media/emergency.445ccffb.gif\";","module.exports = __webpack_public_path__ + \"static/media/call.37865c67.gif\";","module.exports = __webpack_public_path__ + \"static/media/police_car_right.ac863eef.png\";","module.exports = __webpack_public_path__ + \"static/media/fire_truck_right.6e37ce5f.png\";","module.exports = __webpack_public_path__ + \"static/media/ambulance_right.b91382e8.png\";","module.exports = __webpack_public_path__ + \"static/media/police_car_left.8d1f2526.png\";","module.exports = __webpack_public_path__ + \"static/media/fire_truck_left.9d5483a7.png\";","module.exports = __webpack_public_path__ + \"static/media/ambulance_left.87cffdc0.png\";","module.exports = __webpack_public_path__ + \"static/media/police_car_right_enroute.5563c3ab.png\";","module.exports = __webpack_public_path__ + \"static/media/fire_truck_right_enroute.7fd11c10.png\";","module.exports = __webpack_public_path__ + \"static/media/ambulance_right_enroute.03ea87aa.png\";","module.exports = __webpack_public_path__ + \"static/media/police_car_left_enroute.7a96989b.png\";","module.exports = __webpack_public_path__ + \"static/media/fire_truck_left_enroute.de7da3a0.png\";","module.exports = __webpack_public_path__ + \"static/media/ambulance_left_enroute.90098924.png\";","module.exports = __webpack_public_path__ + \"static/media/alert.77e4ae16.mp3\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/car_test.4b63a07a.png\";","import moment from 'moment';\r\n\r\nexport default class Util{\r\n    getDate(str){\r\n        var date = moment(str);\r\n        var dateComponent = date.utc().format('YYYY - MM - DD');\r\n\r\n        return dateComponent;\r\n    }\r\n\r\n    getTime(str){\r\n        var date = moment(str);\r\n        var timeComponent = date.utc().format('HH:mm:ss');\r\n\r\n        return timeComponent;\r\n    }\r\n\r\n    sortDates(arr){\r\n        arr.sort(function compare(a, b) {\r\n            var dateA = new Date(a.created);\r\n            var dateB = new Date(b.created);\r\n            return dateA - dateB;\r\n        });\r\n          \r\n        return arr;\r\n    }\r\n\r\n}","\r\nimport React from 'react';\r\n\r\nimport Utils from '../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nexport default function Sidebar(props){\r\n    return <div className=\"laser-side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeSidebar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-red-text\"><b>Emergency Location Details</b></h4>\r\n                <br/>\r\n                <button className=\"laser-red-bg laserbtn\" onClick={e => props.startMonitoring(e, props.emergency)}>Start Monitoring</button>\r\n                <br/>\r\n                <br/>                \r\n                <button className=\"laser-blue-bg laserbtn\" onClick={e => props.resolve(e)}>Resolve</button>\r\n                <br/>\r\n                <h5><b>Trackable</b> - {props.emergency.is_trackable ? \"Yes\" : \"No\" }</h5>\r\n                <br/>\r\n                <h5><b>Time</b> - {utils.getTime(props.emergency.created)}</h5>\r\n                <br/>\r\n                <h5><b>Persons Name</b> - {props.emergency.full_name}</h5>\r\n                <br/>\r\n                <h5><b>Person's Emergency Contacts</b> - {(props.emergency.emergency_numbers && props.emergency.emergency_numbers.length>0) ? ParseContacts(props.emergency.emergency_numbers) : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Email Address</b> - {props.emergency.email ? props.emergency.email : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.emergency.phone_number ? props.emergency.phone_number : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Device</b> - {props.emergency.device ? props.emergency.device : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Emergency Full Address</b> - {props.emergency.full_address ? props.emergency.full_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Emergency Admin Address</b> - {props.emergency.sub_admin_address ? props.emergency.sub_admin_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Reason For Emergency</b> - {props.emergency.reasons ? getReasons(props.emergency.reasons) : \"\"}</h5>\r\n           </div>\r\n}\r\n\r\nfunction ParseContacts(arr){\r\n    return arr.map((item,index) => {\r\n        return <p key={index}>{item}</p>\r\n    })\r\n}\r\n\r\nfunction getReasons(reasons){\r\n    switch(reasons.length){\r\n        case 0:\r\n          return \"\";\r\n        case 1:\r\n          return reasons[0]+\" emergency\";\r\n        case 2:\r\n          return reasons[0] +\" emergency, \" +reasons[1] +\" emergency\";\r\n        case 3:\r\n          return reasons[0] +\" emergency, \" +reasons[1] +\" emergency, \" +reasons[2] +\" emergency\";\r\n    }\r\n}","import React from 'react';\r\n\r\nconst style = {\r\n    width: \"100%\"\r\n}\r\n\r\nexport default function Text(props){\r\n    return  <div className=\"laser-action_div laser-shadow\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 style={style}><span onClick={e => props.closeAction(e)} className=\"action_close_btn\">&#10005;</span></h1>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <h5>{props.text}</h5>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n}","import React from \"react\"\r\n\r\nimport Text from \"./Text\";\r\n\r\nexport default function Action(props){\r\n\r\n    return <div>{getText(props.action, props.message, props.closeAction)}</div>\r\n\r\n}\r\n\r\nfunction getText(action, message, closeAction){\r\n    switch(action){\r\n        case \"loading\":\r\n        \r\n        return <Text text={\"Loading...\"} closeAction={closeAction}/>\r\n\r\n       \r\n        case \"close\":\r\n        \r\n        return \"\";\r\n\r\n        case \"err_calls_load\":\r\n        \r\n        return <Text text={\"An Error occurred loading latest calls\"} closeAction={closeAction}/>;\r\n\r\n        case \"err_emergency_load\":\r\n        \r\n        return <Text text={\"An Error occurred loading latest emergencies\"} closeAction={closeAction}/>;\r\n\r\n        case \"message\":\r\n\r\n        return <Text text={message} closeAction={closeAction}/> \r\n    }\r\n}","import React from \"react\"\r\n\r\nconst style = {\r\n    background: \"#2E86C1\",\r\n    border: \"0px solid #000000\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"8px\",\r\n    borderRadius: \"4px\"\r\n}\r\n\r\nconst style_remove_btn = {\r\n    background: \"#000000\",\r\n    border: \"0px solid #000000\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"8px\",\r\n    borderRadius: \"4px\"\r\n}\r\n\r\nexport default function AgentDetails(props){\r\n    \r\n    return <div className=\"laser-agent_side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeAgentSideBar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-black-text\"><b>Agents Details</b></h4>\r\n                <br/>\r\n                <h5><b>Agents Name</b> - {props.agent.agent.firstname} {props.agent.agent.lastname}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.agent.agent.phone_number}</h5>\r\n                <br/>\r\n                <h5><b>Agency</b> - {props.agent.agent.department}</h5>\r\n                <br/>\r\n                <h5><b>Current Location</b> - {props.agent.full_address}</h5>\r\n                <br/>\r\n                <h5><b>Availability</b> - {props.agent.is_on_route ? props.agent.agent.firstname+\" is currently on route to a person's locations\"   : props.agent.agent.firstname+\" is available\"}</h5>\r\n                <p>{props.agent.is_on_route ? <button style={style_remove_btn} onClick={e => props.removeAgentFromRoute(e, props.agent)} className=\"\">Remove agent from route</button> : \"\"}</p>\r\n                <br/>\r\n                {props.user.full_name ?  <button style={style} onClick={e => props.addAgentToMonitoring(e, props.agent)} className=\"\">Send Agent {props.agent.agent.firstname} {props.agent.agent.lastname} to {props.user.full_name}'s location </button> : \"\"}\r\n           </div>\r\n\r\n}","import React from 'react';\r\n\r\nimport Utils from '../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nexport default function LocationSidebar(props){\r\n    return <div className=\"laser-side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeSidebar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-blue-text\"><b>Call Location Details</b></h4> \r\n                <br/>\r\n                <h5><b>Time</b> - {utils.getTime(props.location.created)}</h5>\r\n                <br/>\r\n                <h5><b>Persons Name</b> - {props.location.full_name}</h5>\r\n                <br/>\r\n                <h5><b>Email Address</b> - {props.location.email ? props.location.email : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.location.phone_number ? props.location.phone_number : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Call Full Address</b> - {props.location.full_address ? props.location.full_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Call Admin Address</b> - {props.location.sub_admin_address ? props.location.sub_admin_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Reason For Call</b> - {props.location.reason ? props.location.reason : \"\"}</h5>\r\n           </div>\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport DatePicker from 'react-date-picker';\r\n\r\nconst dateStyle = {\r\n    color: \"#111111\",\r\n    border: \"1px solid #FFFFFF\",\r\n    zIndex: \"6000\",\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\",\r\n    padding: \"8px\"\r\n}\r\n\r\nconst controls_style = {\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class TopPanel extends Component{\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-top-panel\">\r\n                <h4 className=\"laser-header-text\">Laser Emergency Admin - Monitoring and Dispatch</h4>\r\n                <div className=\"laser-controls\">\r\n                    <button onClick={e => this.props.getAllAgentsLocation(e)} className=\"form-control laser-inline laser-150-width laser-red-bg laserbtn\">Locate All Agents</button>\r\n                    \r\n                    <div className=\"laser-inline\" style={dateStyle}>\r\n                        <DatePicker\r\n                            onCalendarOpen={this.props.onCalendarOpen}\r\n                            maxDate={new Date()}\r\n                            style={dateStyle}\r\n                            onChange={this.props.onDateChange}\r\n                            value={this.props.date}/>\r\n                    </div>  \r\n\r\n                    <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"calls\" name=\"calls\" value={this.props.selected_call} onChange={this.props.onCallsChanged}>\r\n                        <option>Calls (All)</option>\r\n                        <option>Emergency Management(LASEMA)</option>\r\n                        <option>Police</option>\r\n                        <option>Distress</option>\r\n                        <option>Environmental and Special Offences Task Force</option>\r\n                        <option>Fire / Safety Services</option>\r\n                        <option>Environmental / Noise Pollution</option>\r\n                        <option>Broken Pipe / Water Leakage</option>\r\n                        <option>Pothole / Collapsed Road</option>\r\n                        <option>None</option>\r\n                    </select>\r\n                    \r\n                    <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"emergencies\" name=\"emergencies\" value={this.props.selected_emergency} onChange={this.props.onEmergenciesChanged}>\r\n                        <option>Emergencies (All)</option>\r\n                        <option>Police Cases</option>\r\n                        <option>Hospital Cases</option>\r\n                        <option>Fire Cases</option>\r\n                        <option>None</option>\r\n                    </select>\r\n\r\n                    <button onClick={e => this.props.logout(e)} className=\"form-control laser-inline laser-100-width laser-grey-bg laserbtn\">logout</button>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} ","import React from 'react';\r\n\r\nimport Utils from '../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nconst style = {\r\n    background: \"rgba(0,0,0,0)\",\r\n    border: \"0px solid #000000\"\r\n}\r\n\r\nexport default function LatestItem(props){\r\n    return <button className=\"laserItem\" style={style} onClick={e => props.itemClicked(e, props.item)}>\r\n                <h5 style={getColor(props.item.laser_type)}>{props.item.full_name} - {utils.getTime(props.item.created)} - {props.item.sub_admin_address}</h5>\r\n           </button>\r\n}\r\n\r\nfunction getColor(laser_type){\r\n    switch(laser_type){\r\n        case \"emergency\":\r\n            return {\r\n                color: \"#E74C3C\",\r\n                textAlign: \"left\"\r\n            }\r\n        case \"call\":\r\n            return {\r\n                color: \"#3498DB\",\r\n                textAlign: \"left\"\r\n            }\r\n        default:\r\n            return {\r\n                color: \"#000000\",\r\n                textAlign: \"left\"\r\n            }\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport LatestItem from './LatestItem';\r\n\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\nconst styling = {\r\n    width: \"380px\",\r\n    height: \"400px\"\r\n}\r\n\r\nexport default class Latest extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state= {\r\n\r\n        }\r\n\r\n\r\n        this.itemClicked = this.itemClicked.bind(this);\r\n    }\r\n\r\n    itemClicked(e, item){\r\n        e.preventDefault();\r\n        this.props.latestClicked(item);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-latest-div laser-shadow\">\r\n                <h4 className=\"text-center laser-black-text\">Latest Reports</h4>    \r\n                <ScrollToBottom style={styling}>\r\n                    {\r\n                        this.props.latest.map(item => {\r\n                            return <LatestItem key={item._id} itemClicked={this.itemClicked} item={item}/>\r\n                        })\r\n                    }\r\n                </ScrollToBottom>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\"\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nconst box_style = {\r\n    margin: \"16px\"\r\n}\r\n\r\n\r\nconst style = {\r\n    background: \"#2E86C1\",\r\n    border: \"0px solid #000000\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"8px\",\r\n    borderRadius: \"4px\",\r\n    float: \"left\",\r\n    marginLeft: \"20px\"\r\n}\r\n\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nexport default function OrderStatus(props){\r\n    return <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"Modal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center\">Message From Agent</h4>\r\n                    <button className=\"grey-bg bt-btn pull-right\" style={box_style} onClick={props.closeRouteResponse}>close</button>\r\n                    <br/>\r\n                    <br/>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 col-sm-8\">\r\n                            <h5 className=\"black-text\">{props.route_response.agent.agent.firstname} {props.route_response.agent.agent.lastname} has completed the route to {props.route_response.user.full_name}'s location</h5>\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-4\">\r\n                            <h5><b>Phone Number</b></h5>\r\n                            <h5>{props.route_response.agent.agent.phone_number}</h5>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <h5><button className=\"green-bg bt-btn\" style={style} onClick={e => props.removeAgentFromRouteAndCloseRouteResponse(e, props.route_response.agent, props.route_response)}>Remove Agent From Route</button></h5>\r\n                    </div>\r\n\r\n                </ReactModal>\r\n           </div>\r\n}","import React from 'react';\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst btn_style_left = {\r\n    marginLeft: \"16px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nconst btn_style_right = {\r\n    marginLeft: \"8px\",\r\n    marginRight: \"16px\"\r\n}\r\n\r\nexport default function ConfirmAction(props){\r\n    return  <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"ConfirmModal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center blue-text\">Confirmation</h4>\r\n                    <br/>\r\n                    <h5 className=\"text-center\">{props.message}</h5>\r\n                    <br/>\r\n                    <button className=\"laser-inline laser-blue-bg laserbtn\" style={btn_style_left} onClick={props.yesClicked}>yes</button>\r\n                    <button className=\"laser-inline grey-bg laserbtn\" style={btn_style_right} onClick={props.noClicked}>no</button>\r\n                </ReactModal>\r\n            </div>\r\n}","\r\nexport default class Persistence{\r\n    saveSelectedAgents(selected_agents){\r\n        localStorage.setItem(\"selected_agents\", JSON.stringify(selected_agents));\r\n    }\r\n\r\n    getSelectedAgents(){\r\n        return JSON.parse(localStorage.getItem(\"selected_agents\"));\r\n    }\r\n\r\n    saveTrackedUsers(tracked_users){\r\n        localStorage.setItem(\"tracked_users\", JSON.stringify(tracked_users));\r\n    }\r\n\r\n    getTrackedUsers(){\r\n        return JSON.parse(localStorage.getItem(\"tracked_users\"));\r\n    }\r\n}","import axios from 'axios';\r\n\r\nimport decode from 'jwt-decode'\r\n\r\nconst login_url = '/login'\r\n\r\nexport default class AuthHelperMethods{\r\n\r\n    login = (username, password) => {\r\n        return  this.axios(login_url, {username,password})\r\n                    .then(res => {\r\n                        this.setToken(res.data.token); \r\n                        return res;\r\n                    })\r\n                    .catch(err => {\r\n                        return \"error\";\r\n                    })\r\n    }\r\n\r\n    loggedIn = () => {\r\n        // Checks if there is a saved token and it's still valid\r\n        const token = this.getToken(); // Getting token from localstorage\r\n        return !!token && !this.isTokenExpired(token); // handwaiving here\r\n    };\r\n\r\n    isTokenExpired = token => {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.now() / 1000) {\r\n            // Checking if token is expired.\r\n            return true;\r\n            } else return false;\r\n        } catch (err) {\r\n            console.log(\"expired check failed! Line 42: AuthService.js\");\r\n            return false;\r\n        }\r\n    };\r\n\r\n    setToken = idToken => {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem(\"id_token\", idToken);\r\n    };\r\n\r\n    getToken = () => {\r\n        // Retrieves the user token from localStorage\r\n        return localStorage.getItem(\"id_token\");\r\n    };\r\n\r\n    logout = () => {\r\n        // Clear user token and profile data from localStorage\r\n        localStorage.removeItem(\"id_token\");\r\n    };\r\n\r\n    getConfirm = () => {\r\n        // Using jwt-decode npm package to decode the token\r\n        let answer = decode(this.getToken());\r\n        console.log(\"Recieved answer!\");\r\n        return answer;\r\n    };\r\n    \r\n    axios = (url, data) => {\r\n        // performs api calls sending the required authentication headers\r\n        const headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        };\r\n\r\n        // Setting Authorization header\r\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\r\n        if (this.loggedIn()) {\r\n            headers[\"Authorization\"] = \"Bearer:\" + this.getToken();\r\n        }\r\n\r\n        return axios({\r\n            url:url,\r\n            method: \"post\",\r\n            data: data, \r\n            baseURL: 'http://52.59.255.174/admin',\r\n            //baseURL: 'http://localhost:3077/admin',\r\n            timeout: 30000,\r\n            headers: headers\r\n        })\r\n        .then(this._checkStatus)\r\n        .then(response => response)\r\n        .catch(err => err)\r\n    };\r\n\r\n    _checkStatus = response => {\r\n        // raises an error in case response status is not a success\r\n        if (response.status >= 200 && response.status < 300) {\r\n            // Success status lies between 200 to 300\r\n            return response;\r\n        } else {\r\n            var error = new Error(response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    };\r\n\r\n}","\r\n//Our Auth Service\r\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nconst Axios = Auth.axios;\r\n\r\nconst locations_url = \"/getLocations\";\r\nconst emergencies_url = \"/getEmergencies\";\r\nconst resolve_emergenciy_url = \"/resolveEmergency\";\r\nconst resolve_location_url = \"/resolveCall\";\r\n\r\nconst createAgentUrl = \"/create_agent\";\r\nconst editAgentUrl = \"/edit_agent\";\r\nconst deleteAgentUrl = \"/delete_agent\";\r\nconst getAgentsUrl = \"/get_agents\";\r\nconst getAgentsDepartmentUrl = \"/get_agents_departments\";\r\n\r\nconst createDepartmentUrl = \"/create_department\";\r\nconst editDepartmentUrl = \"/edit_department\";\r\nconst deleteDepartmentUrl = \"/delete_department\";\r\nconst getDepartmentsUrl = \"/get_departments\";\r\n\r\n\r\nexport const getLocations = (data) => {\r\n    return  Axios(locations_url, data)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const getEmergencies = (data) => {\r\n    return  Axios(emergencies_url, data)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const resolveLocation = (data) => {\r\n    return  Axios(resolve_location_url, data)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const resolveEmergency = (data) => {\r\n    return  Axios(resolve_emergenciy_url, data)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const getAgents = () => {\r\n    return  Axios(getAgentsUrl)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const getAgentsDepartment = (department) => {\r\n    return  Axios(getAgentsDepartmentUrl, {department})\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const createAgent = (data) => {\r\n    return Axios(createAgentUrl, data)\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const editAgent = (data) => {\r\n    return Axios(editAgentUrl, data)\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const deleteAgent = (id) => {\r\n    return Axios(deleteAgentUrl, {id})\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const getDepartments = () => {\r\n    return  Axios(getDepartmentsUrl)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const createDepartment = (name) => {\r\n    return Axios(createDepartmentUrl, {name})\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const editDepartment = (data) => {\r\n    return Axios(editDepartmentUrl, data)\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const deleteDepartment = (id) => {\r\n    return Axios(deleteDepartmentUrl, {id})\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                return \"error\";\r\n            })\r\n}","import React, {Component} from 'react';\r\nimport logo from './logo.svg';\r\nimport red_circle from './icons/emergency_with_circle.gif';\r\nimport blue_circle from './icons/call_with_circle.gif';\r\nimport emergency_icon from './icons/emergency.gif';\r\nimport call_icon from './icons/call.gif';\r\nimport car_test from './icons/car_test.png';\r\n\r\nimport police_car_right from './icons/police_car_right.png'\r\nimport fire_car_right from './icons/fire_truck_right.png'\r\nimport ambulance_car_right from './icons/ambulance_right.png'\r\n\r\nimport police_car_left from './icons/police_car_left.png'\r\nimport fire_car_left from './icons/fire_truck_left.png'\r\nimport ambulance_car_left from './icons/ambulance_left.png'\r\n\r\nimport police_car_right_enroute from './icons/police_car_right_enroute.png'\r\nimport fire_car_right_enroute from './icons/fire_truck_right_enroute.png'\r\nimport ambulance_car_right_enroute from './icons/ambulance_right_enroute.png'\r\n\r\nimport police_car_left_enroute from './icons/police_car_left_enroute.png'\r\nimport fire_car_left_enroute from './icons/fire_truck_left_enroute.png'\r\nimport ambulance_car_left_enroute from './icons/ambulance_left_enroute.png'\r\n\r\nimport alert from \"./sounds/alert.mp3\";\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport Sidebar from './components/Sidebar';\r\nimport Action from './components/Action';\r\nimport AgentDetails from './components/AgentDetails';\r\nimport LocationSidebar from './components/LocationSideBar';\r\nimport TopPanel from './components/TopPanel';\r\nimport Latest from './components/Latest';\r\nimport RouteStatus from './components/RouteStatus';\r\nimport ConfirmAction from './components/ConfirmAction';\r\nimport Utils from './utils/Utils';\r\nimport Persistence from './utils/Persistence';\r\nimport Sound from 'react-sound';\r\nimport PubNubReact from 'pubnub-react';\r\n\r\nimport './App.css';\r\n\r\nimport * as API from './api/Api';\r\n\r\nconst utils = new Utils();\r\nconst persistence = new Persistence();\r\n\r\nconst mapStyle = {\r\n    height: '100vh', \r\n    width: '100%'\r\n}\r\n\r\nconst socket_io_url = 'http://52.59.255.174';\r\n//const socket_io_url = 'http://localhost:3077';\r\n\r\nlet todays_date = new Date().toISOString();\r\n\r\nlet today = null;\r\n\r\nclass App extends Component{\r\n  constructor(props){\r\n      super(props);\r\n\r\n      this.state = {\r\n          showConfirm: {\r\n              action: \"\",\r\n              status: false\r\n          },\r\n          latest: [],\r\n          locations: [], \r\n          emergencies: [], \r\n          filtered_locations: [],\r\n          filtered_emergencies: [],\r\n          side_bar_open: false, \r\n          agent_side_bar_open: false, \r\n          location_side_bar_open: false, \r\n          clicked_user: {}, \r\n          clicked_agent: {},\r\n          center: {lat: 6.5244,lng: 3.3792}, \r\n          selected_call:\"Calls (All)\", \r\n          selected_emergency:\"Emergencies (All)\",\r\n          zoom : 11,\r\n          show_red_circle: false,\r\n          show_blue_circle: false,\r\n          clicked_marker_id: \"\",\r\n          play_sound: false,\r\n          channels_list: [\"lllaser\", \"agent_tracked\", \"agent_untracked\", \"users_monitored\", \"issue_resolved\", \"request_tracked\", \"response_tracked\"],\r\n          laser_agents:[], //all agents\r\n          selected_agents: [], //selected agents to resolve issues\r\n          route_responses_from_agents: [],\r\n          tracked_users: [],\r\n          action: \"loading\",\r\n          action_message: \"\",\r\n          tracked_area: \"lllaser\", //the user in which the admin is currently viewing whether the user wants to be tracked or not\r\n          date: new Date(),\r\n          message: \"\"\r\n      }\r\n      \r\n      this.pubnub = new PubNubReact({\r\n        publishKey: 'pub-c-100b3918-0e25-4fac-ade6-c58d013cd019',\r\n        subscribeKey: 'sub-c-21e1e450-9457-11e9-bf84-1623aee89087'\r\n      });\r\n      this.pubnub.init(this);\r\n\r\n      this.closeSideBar = this.closeSideBar.bind(this);\r\n      this.onCallsChanged = this.onCallsChanged.bind(this);\r\n      this.onEmergenciesChanged = this.onEmergenciesChanged.bind(this);\r\n      this.onAgentClicked = this.onAgentClicked.bind(this);\r\n      this.onDateChange = this.onDateChange.bind(this);\r\n      this.onCalendarOpen = this.onCalendarOpen.bind(this);\r\n      this.latestClicked = this.latestClicked.bind(this);\r\n      this.startMonitoring = this.startMonitoring.bind(this);\r\n      this.closeAction = this.closeAction.bind(this);\r\n      this.closeAgentSideBar = this.closeAgentSideBar.bind(this);\r\n      this.addAgentToMonitoring = this.addAgentToMonitoring.bind(this);\r\n      this.getAgentIcon = this.getAgentIcon.bind(this);\r\n      this.subscribeAndGetAllAgentsLocation = this.subscribeAndGetAllAgentsLocation.bind(this);\r\n      this.handleSongFinishedPlaying = this.handleSongFinishedPlaying.bind(this);\r\n      this.removeAgentFromRoute = this.removeAgentFromRoute.bind(this);\r\n      this.closeRouteResponse = this.closeRouteResponse.bind(this);\r\n      this.removeAgentFromRouteAndCloseRouteResponse = this.removeAgentFromRouteAndCloseRouteResponse.bind(this);\r\n\r\n      this.getEmergencies = this.getEmergencies.bind(this);\r\n      this.getLocations = this.getLocations.bind(this);\r\n      this.getLocationsDate = this.getLocationsDate.bind(this);\r\n      this.getEmergenciesDate = this.getEmergenciesDate.bind(this);\r\n      this.getLatestEmergencies = this.getLatestEmergencies.bind(this);\r\n      this.getLatestLocations = this.getLatestLocations.bind(this);\r\n\r\n      this.getSelectedAgentsIds = this.getSelectedAgentsIds.bind(this);\r\n      this.setSelectedAgentsFromIds = this.setSelectedAgentsFromIds.bind(this);\r\n\r\n      this.resolveCall = this.resolveCall.bind(this);\r\n      this.resolveEmergency = this.resolveEmergency.bind(this);\r\n      this.hideConfirm = this.hideConfirm.bind(this);\r\n      this.showConfirmResolveEmergency = this.showConfirmResolveEmergency.bind(this);\r\n      this.showConfirmResolveLocation = this.showConfirmResolveLocation.bind(this);\r\n\r\n      this.logout = this.logout.bind(this);\r\n    \r\n      var year = todays_date.split(/T(.+)/)[0];\r\n\r\n      year = year+\"T00:00:00.000Z\";\r\n\r\n      today = new Date(year);\r\n  }\r\n\r\n  logout(){\r\n      this.props.logout();\r\n  }\r\n\r\n  async resolveEmergency(){\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"\",\r\n            status: false\r\n          },\r\n          message: \"\",\r\n          action: \"loading\",\r\n          action_message: \"\"\r\n      })\r\n\r\n      const response = await API.resolveEmergency({id: this.state.clicked_user._id})\r\n\r\n      if(response==\"error\"){\r\n            this.setState({\r\n                action: \"message\",\r\n                action_message: \"Emergency could not be resolved. Try again later\"\r\n            })\r\n            return;\r\n      }\r\n      \r\n      if(response){\r\n          this.pubnub.publish(\r\n                {\r\n                    message: {\r\n                        \r\n                    },\r\n                    channel: \"issue_resolved\",\r\n                    sendByPost: false, // true to send via POST\r\n                    storeInHistory: false //override default storage options\r\n                },\r\n                (status, response) => {\r\n                    // handle status, response\r\n                }\r\n          );\r\n\r\n          this.setState(state => {\r\n                var tracked_users = state.tracked_users;\r\n                \r\n                tracked_users.splice(tracked_users.indexOf(this.state.clicked_user._id), 1);\r\n\r\n                persistence.saveTrackedUsers(tracked_users);\r\n\r\n                return {\r\n                    action: \"close\",\r\n                    side_bar_open: false,\r\n                    tracked_users: tracked_users,\r\n                    latest: []\r\n                }\r\n          })\r\n\r\n          this.getLocationsDate(this.state.date);\r\n          this.getEmergenciesDate(this.state.date);\r\n\r\n          this.getLatestLocations();\r\n          this.getLatestEmergencies();\r\n      }\r\n  }\r\n\r\n  async resolveCall(){\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"\",\r\n            status: false\r\n          },\r\n          message: \"\",\r\n          action: \"loading\",\r\n          action_message: \"\"\r\n      })\r\n\r\n      const response = await API.resolveLocation({id: this.state.clicked_user._id})\r\n\r\n      if(response==\"error\"){\r\n        this.setState({\r\n            action: \"message\",\r\n            action_message: \"Call could not be resolved. Try again later\"\r\n        })\r\n      }\r\n        \r\n      if(response){\r\n          this.pubnub.publish(\r\n                {\r\n                    message: {\r\n\r\n                    },\r\n                    channel: \"issue_resolved\",\r\n                    sendByPost: false, // true to send via POST\r\n                    storeInHistory: false //override default storage options\r\n                },\r\n                (status, response) => {\r\n                    // handle status, response\r\n                }\r\n          );\r\n\r\n          this.setState({\r\n            action: \"close\",\r\n            location_side_bar_open: false,\r\n            latest: []\r\n          })\r\n\r\n          this.getLocationsDate(this.state.date);\r\n          this.getEmergenciesDate(this.state.date);\r\n\r\n          this.getLatestLocations();\r\n          this.getLatestEmergencies();\r\n      }\r\n  }\r\n\r\n  hideConfirm(){\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"\",\r\n            status: false\r\n          },\r\n          message: \"\"\r\n      })\r\n  }\r\n\r\n  showConfirmResolveEmergency(e){\r\n      e.preventDefault();\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"emergency\",\r\n            status: true\r\n          },\r\n          message: \"Are you sure you want to mark this emergency issue as resolved ?\"\r\n      })\r\n  }\r\n\r\n  showConfirmResolveLocation(){\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"location\",\r\n            status: true\r\n          },\r\n          message: \"Are you sure you want to mark this call as resolved ?\"\r\n      })\r\n  }\r\n\r\n  removeAgentFromRoute(e, agent){\r\n      e.preventDefault();\r\n\r\n      this.pubnub.publish(\r\n          {\r\n              message: {\r\n                pn_gcm: {\r\n                    data: {\r\n                        notification_body: \"You need to abandon route. Tap to open app\",\r\n                        data: {},\r\n                        action: \"leave_route\"\r\n                    }\r\n                }\r\n              },\r\n              channel: agent.agent._id,\r\n              sendByPost: false, // true to send via POST\r\n              storeInHistory: false //override default storage options\r\n          },\r\n          (status, response) => {\r\n              // handle status, response\r\n          }\r\n      );\r\n\r\n      //tell other browsers about the agent being montiored\r\n      this.pubnub.publish(\r\n        {\r\n            message: {\r\n                agent\r\n            },\r\n            channel: \"agent_untracked\",\r\n            sendByPost: false, // true to send via POST\r\n            storeInHistory: false //override default storage options\r\n        },\r\n        (status, response) => {\r\n            // handle status, response\r\n        }\r\n      );\r\n\r\n      this.setState(state => {\r\n          var agents = state.selected_agents;\r\n          var list = state.channels_list;\r\n          var laser_agents = state.laser_agents;\r\n          \r\n          var new_selected_agents = [];\r\n\r\n          if(agents.length > 1){\r\n              new_selected_agents = agents.map(age => {\r\n                  if(age.agent._id!==agent.agent._id){\r\n                      return age;\r\n                  }\r\n              })\r\n          }\r\n\r\n          var new_list = list.splice(list.indexOf(agent.agent._id), 1);\r\n\r\n\r\n          var found_agent = laser_agents.find(age => age.agent._id === agent.agent._id);\r\n\r\n          var new_found_agent = Object.assign({}, found_agent);\r\n\r\n          new_found_agent.is_on_route = false;\r\n\r\n          var new_laser_agents = laser_agents.splice(laser_agents.indexOf(found_agent), 1, new_found_agent);\r\n\r\n          //subscribe to the agents id to receive a response to the route request\r\n          this.pubnub.unsubscribe({\r\n             channels: [agent.agent._id]\r\n          })\r\n          \r\n          persistence.saveSelectedAgents(new_selected_agents);\r\n\r\n          return {  \r\n              selected_agents: new_selected_agents,\r\n              laser_agents: laser_agents,\r\n              channels_list: new_list,\r\n              agent_side_bar_open: false,\r\n              clicked_agent: {}\r\n          }\r\n      })\r\n  }\r\n\r\n  removeAgentFromRouteAndCloseRouteResponse(e, agent, route_response){\r\n      e.preventDefault();\r\n\r\n      this.pubnub.publish(\r\n          {\r\n              message: {\r\n                pn_gcm: {\r\n                    data: {\r\n                        notification_body: \"You need to abandon route. Tap to open app\",\r\n                        data: {},\r\n                        action: \"leave_route\"\r\n                    }\r\n                }\r\n              },\r\n              channel: agent.agent._id,\r\n              sendByPost: false, // true to send via POST\r\n              storeInHistory: false //override default storage options\r\n          },\r\n          (status, response) => {\r\n              // handle status, response\r\n          }\r\n      );\r\n\r\n      //tell other browsers about the agent being montiored\r\n      this.pubnub.publish(\r\n                {\r\n                    message: {\r\n                        agent\r\n                    },\r\n                    channel: \"agent_untracked\",\r\n                    sendByPost: false, // true to send via POST\r\n                    storeInHistory: false //override default storage options\r\n                },\r\n                (status, response) => {\r\n                    // handle status, response\r\n                }\r\n      );\r\n\r\n      this.setState(state => {\r\n          var agents = state.selected_agents;\r\n          var list = state.channels_list;\r\n          var array = state.route_responses_from_agents;\r\n\r\n          array.splice(array.indexOf(route_response),1);\r\n          \r\n          var new_selected_agents = [];\r\n\r\n          if(agents.length > 1){\r\n              new_selected_agents = agents.map(age => {\r\n                  if(age.agent._id!==agent.agent._id){\r\n                      return age;\r\n                  }\r\n              })\r\n          }\r\n\r\n          var new_list = list.splice(list.indexOf(agent.agent._id), 1);\r\n\r\n          //subscribe to the agents id to receive a response to the route request\r\n          this.pubnub.unsubscribe({\r\n                channels: [agent.agent._id]\r\n          })\r\n\r\n          persistence.saveSelectedAgents(new_selected_agents);\r\n\r\n          return {  \r\n              selected_agents: new_selected_agents,\r\n              channels_list: new_list,\r\n              route_responses_from_agents: array,\r\n              agent_side_bar_open: false,\r\n              clicked_agent: {}\r\n          }\r\n      })\r\n  }\r\n\r\n  addAgentToMonitoring(e, agent){\r\n      e.preventDefault();\r\n      //send a request to the agent via pubnub\r\n      //wait for response\r\n      //if agent accepts set agent as on route\r\n      this.pubnub.publish(\r\n          {\r\n            message: {\r\n                pn_gcm: {\r\n                    data: {\r\n                        notification_body: \"You have a new route. Tap to open app.\",\r\n                        data: this.state.clicked_user.phone_number ? {full_name: this.state.clicked_user.full_name, _id: this.state.clicked_user.user, phone_number: this.state.clicked_user.phone_number, latitude: this.state.clicked_user.latitude, longitude: this.state.clicked_user.longitude} : {full_name: this.state.clicked_user.full_name, _id: this.state.clicked_user.user, latitude: this.state.clicked_user.latitude, longitude: this.state.clicked_user.longitude},\r\n                        action: \"route_request\"\r\n                    }\r\n                }\r\n            },\r\n            channel: agent.agent._id,\r\n            sendByPost: false, // true to send via POST\r\n            storeInHistory: false //override default storage options\r\n          },\r\n          (status, response) => {\r\n              // handle status, response\r\n          }\r\n      );\r\n\r\n\r\n      //tell other browsers about the agent being montiored\r\n      this.pubnub.publish(\r\n            {\r\n                message: {\r\n                    agent\r\n                },\r\n                channel: \"agent_tracked\",\r\n                sendByPost: false, // true to send via POST\r\n                storeInHistory: false //override default storage options\r\n            },\r\n            (status, response) => {\r\n                // handle status, response\r\n            }\r\n      );\r\n\r\n      this.setState(state => {\r\n          var agents = state.selected_agents;\r\n          var list = state.channels_list;\r\n\r\n          var new_selected_agents = [];\r\n\r\n          if(agents.length > 0){\r\n              new_selected_agents = agents.map(a => {\r\n                \r\n                if(a.agent._id === agent.agent._id){\r\n                  return agent;\r\n                }\r\n                else{return a}\r\n              })\r\n\r\n              var found_agent = new_selected_agents.find(a => a.agent._id === agent.agent._id)\r\n\r\n              if(!found_agent){\r\n                new_selected_agents.push(agent)\r\n              }\r\n          }\r\n          else{\r\n              new_selected_agents.push(agent)\r\n          }\r\n          \r\n          if(list.indexOf(agent.agent._id)===-1){\r\n            list.push(agent.agent._id)\r\n          }\r\n\r\n          //subscribe to the agents id to receive a response to the route request\r\n          this.pubnub.subscribe({\r\n            channels: list\r\n          })\r\n\r\n          persistence.saveSelectedAgents(new_selected_agents);\r\n\r\n          return {  \r\n            selected_agents: new_selected_agents,\r\n            channels_list: list\r\n          }\r\n      })\r\n  }\r\n\r\n  //Subscribe to the users sub admin area to receive updates and send out a request to all agents on the channel to send their location \r\n  //just in case some of them are not moving at the momemnt and their location is not updating\r\n  startMonitoring(e, item){\r\n      e.preventDefault();\r\n     \r\n      this.pubnub.publish(\r\n          {\r\n              message: {\r\n                    pn_gcm: {\r\n                        data: {\r\n                            notification_body: \"Tap to open the laser App\",\r\n                            data: {},\r\n                            action: \"send_location\"\r\n                        }\r\n                    }\r\n              },\r\n              channel: this.state.tracked_area,\r\n              sendByPost: false, // true to send via POST\r\n              storeInHistory: false //override default storage options\r\n          },\r\n          (status, response) => {\r\n              // handle status, response\r\n          }\r\n      );\r\n      \r\n      this.setState(state => {\r\n            var list = state.channels_list;\r\n            var tracked_users = state.tracked_users;\r\n\r\n            if(list.indexOf(item.user)===-1){\r\n                    //remove old user from list\r\n                    //unsubscribe from old user\r\n        \r\n                    list.push(item.user)\r\n            }\r\n\r\n            var found_user = tracked_users.find(id => id === item.user);\r\n            \r\n            if(!found_user){\r\n                tracked_users.push(item.user);\r\n            }\r\n\r\n            persistence.saveTrackedUsers(tracked_users);\r\n\r\n            this.pubnub.subscribe({\r\n                channels: list\r\n            })\r\n\r\n            return {\r\n                action: \"message\",\r\n                action_message: \"You are now monitoring \"+item.full_name,\r\n                channels_list: list,\r\n                laser_agents: [],\r\n                tracked_users: tracked_users\r\n            }\r\n      })\r\n  }\r\n\r\n  latestClicked(item){\r\n      switch(item.laser_type){\r\n          case \"emergency\":\r\n              this.setState({\r\n                clicked_user: item,\r\n                side_bar_open: true,\r\n                location_side_bar_open: false,\r\n                agent_side_bar_open: false,\r\n                center: {\r\n                  lat: item.latitude,\r\n                  lng: item.longitude\r\n                },\r\n                zoom: 19,\r\n                show_red_circle: true,\r\n                show_blue_circle: false,\r\n                clicked_marker_id: item._id\r\n              })\r\n              break;\r\n          case \"call\":\r\n              this.setState({\r\n                clicked_user: item,\r\n                side_bar_open: false,\r\n                location_side_bar_open: true,\r\n                agent_side_bar_open: false,\r\n                center: {\r\n                  lat: item.latitude,\r\n                  lng: item.longitude\r\n                },\r\n                zoom: 19,\r\n                show_red_circle: false,\r\n                show_blue_circle: true,\r\n                clicked_marker_id: item._id\r\n              })\r\n              break;\r\n      }\r\n  }\r\n\r\n  onCalendarOpen(){\r\n      this.setState({\r\n        play_sound: false,\r\n        side_bar_open: false, \r\n        location_side_bar_open: false,\r\n        agent_side_bar_open: false\r\n      })\r\n  }\r\n\r\n  onDateChange(date){\r\n\r\n    //We add 1 hour to the date because the date axios is sending to the server is 1 hour behind what it should be\r\n    date = new Date(date);\r\n    date.setHours(date.getHours() + 1);\r\n\r\n     this.setState({\r\n        play_sound: false,\r\n        date: date,\r\n        show_red_circle: false,\r\n        show_blue_circle: false,\r\n        clicked_marker_id: \"\",\r\n        action: \"loading\",\r\n        action_message: \"\",\r\n        selected_call:\"Calls (All)\", \r\n        selected_emergency:\"Emergencies (All)\"\r\n     })\r\n\r\n     this.getLocationsDate(date);\r\n     this.getEmergenciesDate(date);\r\n  }\r\n\r\n  onCallsChanged(event){\r\n      const target = event.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n\r\n      let arr = [];\r\n\r\n      if(this.state.locations.length>0){\r\n          if(value===\"Calls (All)\"){\r\n            this.setState(state => ({\r\n              play_sound: false,\r\n              filtered_locations: state.locations,\r\n              side_bar_open: false, \r\n              selected_call: value,\r\n              agent_side_bar_open: false,\r\n              location_side_bar_open: false,\r\n              show_blue_circle: false\r\n            }))\r\n          }\r\n          else if(value===\"None\"){\r\n            this.setState({\r\n              play_sound: false,\r\n              filtered_locations: [],\r\n              side_bar_open: false, \r\n              selected_call: value,\r\n              agent_side_bar_open: false,\r\n              location_side_bar_open: false,\r\n              show_blue_circle: false\r\n            })\r\n          }\r\n          else{\r\n            this.state.locations.map(emer => {\r\n              if(emer.reason.includes(value.toLowerCase())){\r\n                arr.push(emer)\r\n              }\r\n            })\r\n            \r\n            if(arr.length>0){\r\n              this.setState({\r\n                play_sound: false,\r\n                filtered_locations: arr,\r\n                selected_call: value,\r\n                side_bar_open: false, \r\n                agent_side_bar_open: false,\r\n                location_side_bar_open: false,\r\n                show_blue_circle: false\r\n              })\r\n            }\r\n            else{\r\n              //show message that there are no locations found for that parameter\r\n      \r\n              this.setState({\r\n                  play_sound: false,\r\n                  filtered_locations:[],\r\n                  selected_call: value,\r\n                  side_bar_open: false, \r\n                  location_side_bar_open: false,\r\n                  show_blue_circle: false\r\n              })\r\n            }\r\n          }\r\n      }\r\n      else{\r\n          this.setState({\r\n              selected_call: value\r\n          })\r\n      }\r\n  }\r\n\r\n  onEmergenciesChanged(event){\r\n      const target = event.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n      \r\n      let arr = [];\r\n      if(this.state.emergencies.length>0){\r\n          if(value===\"Emergencies (All)\"){\r\n            this.setState(state => ({\r\n              play_sound: false,\r\n              filtered_emergencies: state.emergencies,\r\n              side_bar_open: false, \r\n              selected_emergency: value,\r\n              location_side_bar_open: false,\r\n              agent_side_bar_open: false,\r\n              show_red_circle: false\r\n            }))\r\n          }\r\n          else if(value===\"None\"){\r\n            this.setState({\r\n              play_sound: false,\r\n              filtered_emergencies:[],\r\n              selected_emergency: value,\r\n              side_bar_open: false, \r\n              agent_side_bar_open: false,\r\n              location_side_bar_open: false,\r\n              show_red_circle: false\r\n            })\r\n          }\r\n          else{\r\n            this.state.emergencies.map(emer => {\r\n              if(emer.reasons&&emer.reasons.length>0){\r\n                emer.reasons.map(reason => {\r\n                    if(value.toLowerCase().includes(reason)){\r\n                        arr.push(emer)\r\n                    }\r\n                })\r\n              }\r\n            })\r\n      \r\n            if(arr.length>0){\r\n              this.setState({\r\n                play_sound: false,\r\n                filtered_emergencies:arr,\r\n                selected_emergency: value,\r\n                side_bar_open: false, \r\n                agent_side_bar_open: false,\r\n                location_side_bar_open: false,\r\n                show_red_circle: false\r\n              })\r\n            }\r\n            else{\r\n              //show message that there are no emregencies found for that parameter\r\n      \r\n              this.setState({\r\n                  play_sound: false,\r\n                  filtered_emergencies: [],\r\n                  side_bar_open: false, \r\n                  selected_emergency: value,\r\n                  agent_side_bar_open: false,\r\n                  location_side_bar_open: false,\r\n                  show_red_circle: false\r\n              })\r\n            }\r\n          }\r\n      }    \r\n      else{\r\n          this.setState({\r\n             selected_emergency: value\r\n          })\r\n      }\r\n  }\r\n\r\n  onLocationClicked(location,e){\r\n      this.setState({\r\n          play_sound: false,\r\n          clicked_user: location,\r\n          side_bar_open: false,\r\n          agent_side_bar_open: false,\r\n          location_side_bar_open: true,\r\n          center: {\r\n            lat: location.latitude,\r\n            lng: location.longitude\r\n          },\r\n          zoom: 19,\r\n          show_red_circle: false,\r\n          show_blue_circle: true,\r\n          clicked_marker_id: location._id\r\n      })\r\n  }\r\n\r\n  onEmergencyClicked(emergency,e){\r\n      this.setState({\r\n          play_sound: false,\r\n          clicked_user: emergency,\r\n          clicked_agent: {},\r\n          side_bar_open: true,\r\n          agent_side_bar_open: false,\r\n          location_side_bar_open: false,\r\n          center: {\r\n              lat: emergency.latitude,\r\n              lng: emergency.longitude\r\n          },\r\n          zoom: 19,\r\n          show_red_circle: true,\r\n          show_blue_circle: false,\r\n          clicked_marker_id: emergency._id\r\n      })\r\n  }\r\n\r\n  onAgentClicked(agent,e){\r\n      this.setState({\r\n          play_sound: false,\r\n          clicked_agent: agent,\r\n          agent_side_bar_open: true\r\n    })\r\n  }\r\n\r\n  getLocationsMarkers(){\r\n        let locations_ui;\r\n\r\n        if(this.state.filtered_locations.length>0){\r\n            locations_ui = this.state.filtered_locations.map(loc => {\r\n                return  <Marker key={loc._id} onClick={e => this.onLocationClicked(loc,e)}\r\n                            name={loc.reason} \r\n                            title={loc.full_name}\r\n                            position={{lat: loc.latitude, lng: loc.longitude}}\r\n                            icon={{\r\n                            url: (this.state.clicked_marker_id===loc._id) ? blue_circle : call_icon\r\n                            }}/> \r\n            })\r\n        }\r\n        else{\r\n            locations_ui = \"\";\r\n        }\r\n        \r\n        return locations_ui;\r\n  }\r\n\r\n  getEmergenciesMarkers(){\r\n      let emergencies_ui;\r\n\r\n      if(this.state.filtered_emergencies.length>0){\r\n          emergencies_ui = this.state.filtered_emergencies.map(emer => {\r\n            return <Marker key={emer._id} onClick={e => this.onEmergencyClicked(emer,e)}\r\n                      name={emer.reasons[0]} \r\n                      title={emer.full_name}\r\n                      position={{lat: emer.latitude, lng: emer.longitude}}\r\n                      icon={{\r\n                        url: (this.state.clicked_marker_id===emer._id) ? red_circle : emergency_icon\r\n                      }}/>\r\n          })\r\n      }\r\n      else{\r\n          emergencies_ui = \"\";\r\n      }\r\n      \r\n      return emergencies_ui;\r\n  }\r\n\r\n  getAgentMarkers(){\r\n      let agents_ui;\r\n\r\n      if(this.state.laser_agents.length>0){\r\n        agents_ui = this.state.laser_agents.map((agent,i) => {\r\n          return <Marker key={i}  onClick={e => this.onAgentClicked(agent,e)}\r\n                    name={agent.full_address} \r\n                    title={agent.full_address}\r\n                    position={{lat: agent.latitude, lng: agent.longitude}}\r\n                    icon={{\r\n                      url: this.getAgentIcon(agent) \r\n                    }}/>\r\n        })\r\n      }\r\n      else{\r\n        agents_ui = \"\";\r\n      }\r\n\r\n      return agents_ui;\r\n  }\r\n\r\n  getAgentIcon(agent){\r\n      switch(agent.agent.department){\r\n          case \"police\":\r\n              if(agent.bearing>90||agent.bearing<=270){\r\n                  return (agent.is_on_route) ? police_car_left_enroute : police_car_left;\r\n              }\r\n              else{\r\n                  return (agent.is_on_route) ? police_car_right_enroute : police_car_right;\r\n              }\r\n          break;\r\n          case \"fire\":\r\n              if(agent.bearing>90||agent.bearing<=270){\r\n                  return (agent.is_on_route) ? fire_car_left_enroute : fire_car_left;\r\n              }\r\n              else{\r\n                  return (agent.is_on_route) ? fire_car_right_enroute : fire_car_right;\r\n              }\r\n          break;\r\n          case \"hospital\":\r\n              if(agent.bearing>90||agent.bearing<=270){\r\n                  return (agent.is_on_route) ? ambulance_car_left_enroute: ambulance_car_left;\r\n              }\r\n              else{\r\n                  return (agent.is_on_route) ? ambulance_car_right_enroute : ambulance_car_right;\r\n              }\r\n          break;\r\n      }\r\n  }\r\n\r\n  closeAction(e){\r\n      this.setState({\r\n          action: \"close\",\r\n          action_message: \"\"\r\n      })\r\n  }\r\n\r\n  closeSideBar(e){\r\n      this.setState({\r\n          play_sound: false,\r\n          side_bar_open: false,\r\n          location_side_bar_open: false,\r\n          agent_side_bar_open: false,\r\n          selected_location: {},\r\n          selected_emergency: {},\r\n          clicked_marker_id: \"\"\r\n      })\r\n  }\r\n\r\n  closeAgentSideBar(e){\r\n      this.setState({\r\n          clicked_agent: {},\r\n          agent_side_bar_open: false\r\n      })\r\n  }\r\n\r\n  closeRouteResponse(route_response){\r\n      this.setState(state => {\r\n          var array = state.route_responses_from_agents;\r\n\r\n          array.splice(array.indexOf(route_response),1);\r\n\r\n          return {\r\n              route_responses_from_agents: array\r\n          }\r\n      })\r\n  }\r\n\r\n  fetchPlaces(mapProps, map) {\r\n\r\n  }\r\n\r\n  subscribeAndGetAllAgentsLocation(){\r\n      this.pubnub.subscribe({\r\n        channels: this.state.channels_list\r\n      })\r\n\r\n      this.setState({\r\n        laser_agents: []\r\n      })\r\n\r\n      this.pubnub.publish(\r\n        {\r\n            message: {\r\n                pn_gcm: {\r\n                    data: {\r\n                        notification_body: \"Tap to open the Laser App\",\r\n                        data: {},\r\n                        action: \"send_location\"\r\n                    }\r\n                }\r\n            },\r\n            channel: this.state.tracked_area,\r\n            sendByPost: false, // true to send via POST\r\n            storeInHistory: false //override default storage options\r\n        },\r\n        (status, response) => {\r\n            // handle status, response\r\n        }\r\n      );\r\n  }\r\n\r\n  getSelectedAgentsIds(){\r\n      var ids = [];\r\n\r\n      this.state.selected_agents.map(agent => {\r\n          ids.push(agent.agent._id);\r\n      });\r\n\r\n      return ids;\r\n  }\r\n\r\n  setSelectedAgentsFromIds(ids){\r\n      this.setState(state => {\r\n          var laser_agents = state.laser_agents;\r\n\r\n          var selected_agents = state.selected_agents;\r\n\r\n          laser_agents.map(agent => {\r\n              var found_agent_id = ids.find(id =>  id === agent.agent._id);\r\n\r\n              if(found_agent_id){\r\n                  var found = selected_agents.find(sel => sel.agent._id === found_agent_id)\r\n\r\n                  if(!found){\r\n                      selected_agents.push(agent);\r\n                  }\r\n              }\r\n          });\r\n\r\n          persistence.saveSelectedAgents(selected_agents);\r\n\r\n          return {\r\n              selected_agents: selected_agents\r\n          }\r\n\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      this.pubnub.unsubscribe({\r\n          channels: this.state.channels_list\r\n      });\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    //get selected agents from persistence(storage)\r\n    var persisted_agents = persistence.getSelectedAgents();\r\n    \r\n    if(persisted_agents!==null && persisted_agents.length > 0){\r\n        this.setState({\r\n            selected_agents: persisted_agents\r\n        })\r\n    }\r\n\r\n    var persisted_tracked_users = persistence.getTrackedUsers();\r\n    \r\n    if(persisted_tracked_users!==null && persisted_tracked_users.length > 0){\r\n        this.setState({\r\n            tracked_users: persisted_tracked_users\r\n        })\r\n    }\r\n\r\n    //subscribe to the parent channel to receive location updates from agents\r\n    this.pubnub.subscribe({\r\n        channels: this.state.channels_list\r\n    })\r\n\r\n    this.subscribeAndGetAllAgentsLocation();\r\n\r\n    this.pubnub.addListener({\r\n      status: (st) => {\r\n            if(st.category === \"PNReconnectedCategory\"){\r\n                this.pubnub.publish(\r\n                    {\r\n                        message: {\r\n                            \r\n                        },\r\n                        channel: \"request_tracked\",\r\n                        sendByPost: false, // true to send via POST\r\n                        storeInHistory: false //override default storage options\r\n                    },\r\n                    (status, response) => {\r\n                        // handle status, response\r\n                    }\r\n                );\r\n\r\n                this.setState({\r\n                    action: \"close\",\r\n                    action_message: \"\"\r\n                })\r\n            }\r\n\r\n            if (st.category === \"PNReconnectedCategory\") {\r\n                this.pubnub.publish(\r\n                    {\r\n                        message: {\r\n                            \r\n                        },\r\n                        channel: \"request_tracked\",\r\n                        sendByPost: false, // true to send via POST\r\n                        storeInHistory: false //override default storage options\r\n                    },\r\n                    (status, response) => {\r\n                        // handle status, response\r\n                    }\r\n                );\r\n\r\n                this.setState({\r\n                    action: \"close\",\r\n                    action_message: \"\"\r\n                })\r\n            }\r\n\r\n            if (st.category === \"PNNetworkIssuesCategory\") {\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"It appears there is a network issue.\"\r\n                })\r\n            }\r\n\r\n            if (st.category === \"PNNetworkDownCategory\") {\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"It appears the network is down.\"\r\n                })\r\n            }\r\n\r\n            if (st.category === \"PNTimeoutCategory\") {\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"Could not connect to the internet.\"\r\n                })\r\n            }\r\n      },\r\n      message: (message) => {\r\n          \r\n          if(message.channel === \"users_monitored\"){\r\n                console.log(\"user - \"+message.message);\r\n                var tracked_user_id = this.state.tracked_users.find(id => id === message.message.user_id);\r\n\r\n                if(!tracked_user_id){\r\n                    this.setState(state => {\r\n                        var tracked_users = state.tracked_users;\r\n\r\n                        tracked_users.push(message.message.user_id);\r\n\r\n                        persistence.saveTrackedUsers(tracked_users);\r\n\r\n                        return {\r\n                            tracked_users: tracked_users\r\n                        }\r\n                    })\r\n                }\r\n          }\r\n\r\n          if(message.channel === \"agent_tracked\"){\r\n                console.log(\"agent - \"+message.message);\r\n                this.setState(state => {\r\n                    var agents = state.selected_agents;\r\n                  \r\n                    if(agents.length > 1){\r\n                        var found_selected_agent = this.state.selected_agents.find(age => age.agent._id === message.message.agent._id);\r\n\r\n                        if(!found_selected_agent){\r\n                            agents.push(message.message);\r\n\r\n                            persistence.saveSelectedAgents(agents);\r\n                        }\r\n                    }\r\n        \r\n                    return {  \r\n                        selected_agents: agents\r\n                    }\r\n                })\r\n          }\r\n\r\n          if(message.channel === \"agent_untracked\"){\r\n                this.setState(state => {\r\n                    var agents = state.selected_agents;\r\n                \r\n                    if(agents.length > 1){\r\n                        var found_selected_agent = this.state.selected_agents.find(age => age.agent._id === message.message.agent._id);\r\n\r\n                        if(found_selected_agent){\r\n                            agents.splice(agents.indexOf(message.message),1);\r\n\r\n                            persistence.saveSelectedAgents(agents);\r\n                        }\r\n                    }\r\n        \r\n                    return {  \r\n                        selected_agents: agents\r\n                    }\r\n                })\r\n          }\r\n\r\n          if(message.channel === \"issue_resolved\"){\r\n                this.getLocationsDate(this.state.date);\r\n                this.getEmergenciesDate(this.state.date);\r\n    \r\n                this.setState({\r\n                    latest: []\r\n                })\r\n    \r\n                this.getLatestLocations();\r\n                this.getLatestEmergencies();\r\n          }\r\n\r\n          //We need a way to send the agents and users tracked to the other browsers\r\n          if(message.channel === \"request_tracked\"){\r\n\r\n                //splitting the publish into two so that the message wont be too heavy\r\n\r\n                this.pubnub.publish(\r\n                    {\r\n                        message: {\r\n                            agents: this.getSelectedAgentsIds()\r\n                        },\r\n                        channel: \"response_tracked\",\r\n                        sendByPost: false, // true to send via POST\r\n                        storeInHistory: false //override default storage options\r\n                    },\r\n                    (status, response) => {\r\n                        // handle status, response\r\n                    }\r\n                );\r\n\r\n                this.pubnub.publish(\r\n                    {\r\n                        message: {\r\n                            users: this.state.tracked_users\r\n                        },\r\n                        channel: \"response_tracked\",\r\n                        sendByPost: false, // true to send via POST\r\n                        storeInHistory: false //override default storage options\r\n                    },\r\n                    (status, response) => {\r\n                        // handle status, response\r\n                    }\r\n                );\r\n          }\r\n\r\n          if(message.channel === \"response_tracked\"){\r\n              if(message.message.agents){\r\n                  if(message.message.agents.length > 0){\r\n                    this.setSelectedAgentsFromIds(message.message.agents);\r\n                  }\r\n              }\r\n\r\n              if(message.message.users){\r\n                  if(message.message.users.length > 0){\r\n                        this.setState(state => {\r\n                            var tracked_users = state.tracked_users;\r\n    \r\n                            message.message.users.map(user_id => {\r\n                                var found = tracked_users.find(id => id === user_id)\r\n\r\n                                if(!found){\r\n                                    tracked_users.push(user_id)\r\n                                }\r\n                            })\r\n\r\n                            persistence.saveTrackedUsers(tracked_users);\r\n    \r\n                            return{\r\n                                tracked_users: tracked_users\r\n                            }\r\n                        })\r\n                  }\r\n              }\r\n          }\r\n          \r\n          var tracked_user_id = this.state.tracked_users.find(id => id === message.channel);\r\n\r\n          if(tracked_user_id){\r\n                //the message is from a user currently being monitored\r\n                if(message.userMetadata && message.userMetadata.action === \"user_location_update\"){\r\n                    var arr = this.state.emergencies.map(emergency => {\r\n                        if(emergency.user === tracked_user_id){\r\n                            emergency.latitude = message.message.latitude;\r\n                            emergency.longitude = message.message.longitude;\r\n                            return emergency;\r\n                        }\r\n                        else{\r\n                            return emergency;\r\n                        }\r\n                    })\r\n\r\n                    //var found_emergency = state.emergencies.find(emergency => emergency.user === state.tracked_user_id);\r\n\r\n                    this.setState(state => {\r\n                        return{\r\n                            emergencies: arr\r\n                        }\r\n                    })\r\n                }\r\n          }\r\n          \r\n          if(message.channel === this.state.tracked_area ){\r\n              if(message.userMetadata && message.userMetadata.action === \"agent_location_update\"){\r\n                  var agents = this.state.laser_agents;\r\n\r\n                  var found_agent = this.state.laser_agents.find(agent => agent.agent._id === message.message.agent._id);\r\n\r\n                  if(this.state.laser_agents.length<=0||!found_agent){\r\n                      agents.push(message.message);\r\n                  }\r\n                  else{\r\n                      agents = this.state.laser_agents.map(agent => {\r\n                          if(agent.agent._id === message.message.agent._id){\r\n\r\n                              var found_agent_on_route_possibly = this.state.selected_agents.find(age => age.agent._id === message.message.agent._id);\r\n\r\n                              if(found_agent_on_route_possibly){\r\n                                  message.message.is_on_route = found_agent_on_route_possibly.is_on_route;\r\n                              }\r\n                              else{\r\n                                message.message.is_on_route = false;\r\n                              }\r\n\r\n                              return message.message;\r\n                          }\r\n                          else{\r\n                              var found_agent_on_route_possibly = this.state.selected_agents.find(age => age.agent._id === agent.agent._id);\r\n                              \r\n                              if(found_agent_on_route_possibly){\r\n                                 agent.is_on_route = found_agent_on_route_possibly.is_on_route;\r\n                              }\r\n                              else{\r\n                                  agent.is_on_route = false;\r\n                              }\r\n\r\n                              return agent;\r\n                          }\r\n                      });\r\n                  }\r\n                  \r\n                  this.setState(state => {\r\n                      return {\r\n                            laser_agents: agents\r\n                      }\r\n                  })\r\n                  \r\n              }\r\n          }\r\n          \r\n          //Check if its an agent that is replying to a request, could also be used in future to check for other messages from the selected agents\r\n          if(this.state.selected_agents.length > 0){\r\n\r\n              this.state.selected_agents.forEach((agent,index) => {\r\n                  \r\n                  if(agent.agent._id === message.channel){\r\n                      \r\n                      if(message.userMetadata && message.userMetadata.action === \"route_request_response\"){\r\n                          if(message.message.response===true){\r\n\r\n                              this.setState(state => {\r\n                                  var agents = state.selected_agents;\r\n\r\n                                  agents[index].is_on_route = true;\r\n                                  \r\n                                  persistence.saveSelectedAgents(agents);\r\n\r\n                                  return {\r\n                                        selected_agents: agents,\r\n                                        action: \"message\",\r\n                                        action_message: \"Agent \" +agent.agent.firstname +\" \" +agent.agent.lastname +\" is now en route to \"+this.state.clicked_user.full_name+\"'s location\"\r\n                                  }\r\n                              })\r\n\r\n                          }\r\n                          else{\r\n                              this.setState(state => {\r\n                                var agents = state.selected_agents;\r\n\r\n                                agents[index].is_on_route = false;\r\n                                \r\n                                persistence.saveSelectedAgents(agents);\r\n\r\n                                return {\r\n                                    selected_agents: agents,\r\n                                    action: \"message\",\r\n                                    action_message: \"Agent \" +agent.agent.firstname +\" \" +agent.agent.lastname +\" declined the request to go to \"+this.state.clicked_user.full_name+\"'s location\"\r\n                                }\r\n                              })\r\n                          }\r\n                      }\r\n                      \r\n                      if(message.userMetadata && message.userMetadata.action === \"route_completed\"){\r\n                          //show message that agent has completed route\r\n                          if(message.message){\r\n                              this.setState(state => {\r\n                                  var array = state.route_responses_from_agents;\r\n\r\n                                  var user = message.message;\r\n\r\n                                  array.push({user:user, agent:agent})\r\n\r\n                                  return {\r\n                                      route_responses_from_agents : array\r\n                                  }\r\n                              })\r\n                          }\r\n                      }\r\n                  }\r\n              })\r\n          }\r\n\r\n      }\r\n    });\r\n\r\n    const socket = socketIOClient(socket_io_url);\r\n\r\n    socket.on(\"connect\", \r\n      () => console.log(\"connected to socket io\")\r\n    );\r\n\r\n    socket.on(\"reconnect\", attempt => {\r\n        console.log(\"Socket IO Reconnected\")\r\n        //successfully reconnected\r\n        //get the lastest data\r\n    })\r\n\r\n    //Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\r\n    socket.on(\"emergency\", \r\n      data => {\r\n         if(data){\r\n             this.setState(state => {\r\n              let arr = state.emergencies;\r\n              let lat = state.latest;\r\n              \r\n              lat.push(data);\r\n              arr.push(data)\r\n\r\n              return {\r\n                  play_sound: true,\r\n                  latest: lat,\r\n                  clicked_marker_id: data._id,\r\n                  zoom: 18,\r\n                  emergencies: arr,\r\n                  center: {\r\n                    lat: data.latitude,\r\n                    lng: data.longitude\r\n                 }\r\n              }\r\n            })\r\n         }\r\n      }\r\n    );\r\n\r\n    socket.on(\"call\", \r\n      data => {\r\n        if(data){\r\n            this.setState(state => {\r\n              let arr = state.locations;\r\n              let lat = state.latest;\r\n              \r\n              lat.push(data);\r\n              arr.push(data)\r\n\r\n              return {\r\n                  play_sound: true,\r\n                  latest: lat,\r\n                  clicked_marker_id: data._id,\r\n                  zoom: 18,\r\n                  locations: arr,\r\n                  center: {\r\n                    lat: data.latitude,\r\n                    lng: data.longitude\r\n                 }\r\n              }\r\n          })\r\n        }\r\n      }\r\n    );\r\n\r\n    this.getLocations();\r\n    this.getEmergencies();\r\n  }\r\n\r\n  async getLocationsDate(date){\r\n        const response = await API.getLocations({date})\r\n        \r\n        if(response==\"error\"){\r\n            this.setState({\r\n                action: \"err_calls_load\",\r\n                locations: [],\r\n                filtered_locations: []\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.locations){\r\n            console.log({response})\r\n            if(this.state.action === \"loading\"){\r\n                this.setState({\r\n                    action: \"close\",\r\n                    locations: response.data.locations,\r\n                    filtered_locations: response.data.locations\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    locations: response.data.locations,\r\n                    filtered_locations: response.data.locations\r\n                })\r\n            }\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\",\r\n                locations: [],\r\n                filtered_locations: []\r\n            })\r\n        }\r\n  }\r\n\r\n  async getEmergenciesDate(date){\r\n        const response = await API.getEmergencies({date})\r\n        \r\n        if(response==\"error\"){\r\n            this.setState({\r\n                action: \"err_emergency_load\",\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.emergencies){\r\n            console.log({response})\r\n            if(this.state.action === \"loading\"){\r\n                this.setState({\r\n                    action: \"close\",\r\n                    emergencies: response.data.emergencies,\r\n                    filtered_emergencies: response.data.emergencies\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    emergencies: response.data.emergencies,\r\n                    filtered_emergencies: response.data.emergencies\r\n                })\r\n            }\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\",\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n            })\r\n        }\r\n  }\r\n\r\n  async getLatestLocations(){\r\n        var self = this;\r\n        const response = await API.getLocations({date: today})\r\n\r\n        if(response==\"error\"){\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.locations&&response.data.locations.length>0){\r\n            self.setState(state => {\r\n                var loc = state.latest;\r\n\r\n                for(var i = 0; i<response.data.locations.length; i++){\r\n                    loc.push(response.data.locations[i]);\r\n                }\r\n\r\n                loc = utils.sortDates(loc);\r\n\r\n                return {\r\n                    latest : loc\r\n                }\r\n                \r\n            })\r\n        }\r\n  }\r\n\r\n  async getLatestEmergencies(){\r\n        var self = this;\r\n        const response = await API.getEmergencies({date: today})\r\n\r\n        if(response==\"error\"){\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.emergencies&&response.data.emergencies.length>0){\r\n            self.setState(state => {\r\n                var loc = state.latest;\r\n\r\n                for(var i = 0; i<response.data.emergencies.length; i++){\r\n                    loc.push(response.data.emergencies[i]);\r\n                }\r\n\r\n                loc = utils.sortDates(loc);\r\n\r\n                return {\r\n                    latest : loc\r\n                }\r\n            })\r\n        }\r\n  }\r\n\r\n  async getEmergencies(){\r\n        const response = await API.getEmergencies({date: today})\r\n\r\n        if(response==\"error\"){\r\n            //show error message\r\n            this.setState({\r\n                action: \"err_emergency_load\",\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.emergencies&&response.data.emergencies.length>0){\r\n            this.setState(state => {\r\n            var loc = state.latest;\r\n\r\n            for(var i = 0; i<response.data.emergencies.length; i++){\r\n                loc.push(response.data.emergencies[i]);\r\n            }\r\n\r\n            loc = utils.sortDates(loc);\r\n\r\n            if(this.state.action === \"loading\"){\r\n                return {\r\n                    action: \"close\",\r\n                    latest : loc,\r\n                    emergencies: response.data.emergencies,\r\n                    filtered_emergencies: response.data.emergencies\r\n                }\r\n            }\r\n            else{\r\n                return {\r\n                    latest : loc,\r\n                    emergencies: response.data.emergencies,\r\n                    filtered_emergencies: response.data.emergencies\r\n                }\r\n            }\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\",\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n            })\r\n        }\r\n  }\r\n\r\n  async getLocations(){\r\n\r\n        const response = await API.getLocations({date: today})\r\n\r\n        if(response==\"error\"){\r\n            //show error message\r\n            this.setState({\r\n                action: \"err_calls_load\",\r\n                locations: [],\r\n                filtered_locations: []\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.locations&&response.data.locations.length>0){\r\n            this.setState(state => {\r\n                var loc = state.latest;\r\n\r\n                for(var i = 0; i<response.data.locations.length; i++){\r\n                    loc.push(response.data.locations[i]);\r\n                }\r\n\r\n                loc = utils.sortDates(loc);\r\n\r\n                if(this.state.action === \"loading\"){\r\n                    return {\r\n                        action: \"close\",\r\n                        latest : loc,\r\n                        locations: response.data.locations,\r\n                        filtered_locations: response.data.locations\r\n                    }\r\n                }\r\n                else{\r\n                    return {\r\n                        latest : loc,\r\n                        locations: response.data.locations,\r\n                        filtered_locations: response.data.locations\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\",\r\n                locations: [],\r\n                filtered_locations: []\r\n            })\r\n        }\r\n  }\r\n\r\n  handleSongFinishedPlaying(){\r\n      this.setState({\r\n          play_sound: false\r\n      })\r\n }\r\n\r\n\r\nrender(){\r\n    let sound;\r\n\r\n    if(this.state.play_sound){\r\n       sound = <Sound\r\n       url={alert}\r\n       playStatus={Sound.status.PLAYING}\r\n       playFromPosition={1 /* in milliseconds */}\r\n       onLoading={this.handleSongLoading}\r\n       onPlaying={this.handleSongPlaying}\r\n       onFinishedPlaying={this.handleSongFinishedPlaying}/>;\r\n    }\r\n    else{\r\n      sound = \"\";\r\n    }\r\n\r\n    let show_location_side_bar;\r\n    \r\n    if(this.state.location_side_bar_open){\r\n      show_location_side_bar = <LocationSidebar closeSidebar={this.closeSideBar} location={this.state.clicked_user} resolve={this.showConfirmResolveEmergency} />\r\n    }\r\n    else{\r\n      show_location_side_bar = \"\";\r\n    }\r\n\r\n    let show_side_bar;\r\n    \r\n    if(this.state.side_bar_open){\r\n      show_side_bar = <Sidebar closeSidebar={this.closeSideBar} emergency={this.state.clicked_user} startMonitoring={this.startMonitoring} resolve={this.showConfirmResolveEmergency} />\r\n    }\r\n    else{\r\n      show_side_bar = \"\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"laser-parent-div\" style={mapStyle}>\r\n            <Latest latest={this.state.latest} latestClicked={this.latestClicked}/>\r\n            {show_location_side_bar}\r\n            {show_side_bar}\r\n            {this.state.agent_side_bar_open ? <AgentDetails removeAgentFromRoute={this.removeAgentFromRoute} closeAgentSideBar={this.closeAgentSideBar} addAgentToMonitoring={this.addAgentToMonitoring} agent={this.state.clicked_agent} user={this.state.clicked_user}/> : \"\" }\r\n\r\n            <TopPanel logout={this.logout} onCalendarOpen={this.onCalendarOpen} onDateChange={this.onDateChange} date={this.state.date} selected_call={this.state.selected_call} \r\n            onCallsChanged={this.onCallsChanged} selected_emergency={this.state.selected_emergency} onEmergenciesChanged={this.onEmergenciesChanged} getAllAgentsLocation={this.getAllAgentsLocation}/>\r\n\r\n            {sound}\r\n            <Map google={this.props.google} \r\n                style={mapStyle}\r\n                onReady={this.fetchPlaces}\r\n                initialCenter={this.state.center}\r\n                center={this.state.center}\r\n                zoom={this.state.zoom}>\r\n        \r\n                {this.getLocationsMarkers()}\r\n                {this.getEmergenciesMarkers()}\r\n                {this.getAgentMarkers()}\r\n\r\n            </Map>\r\n\r\n            <Action action={this.state.action} closeAction={this.closeAction} message={this.state.action_message}/>\r\n\r\n            {\r\n                this.state.route_responses_from_agents.length > 0 ?  <RouteStatus route_response={this.state.route_responses_from_agents[this.state.route_responses_from_agents.length - 1]} removeAgentFromRouteAndCloseRouteResponse={this.removeAgentFromRouteAndCloseRouteResponse} closeRouteResponse={this.closeRouteResponse} /> : \"\"\r\n            }\r\n\r\n            {\r\n                this.state.showConfirm.status===true ? <ConfirmAction  yesClicked={this.state.showConfirm.action===\"emergency\" ? this.resolveEmergency : this.resolveCall} noClicked={this.hideConfirm} message={this.state.message} /> : \"\"\r\n            }\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: ('AIzaSyADNxHcgsHDyx_OSbqxBg5xB5lV2YJDcKI')\r\n})(App)\r\n","import React, {Component} from \"react\";\r\n\r\nimport Utils from '../../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nexport default function Agent(props){\r\n    return <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-7 col-sm-7\">\r\n                        <h4>{props.agent.firstname} {props.agent.lastname}</h4>\r\n                        <h5>{utils.getDate(props.agent.created)}</h5>\r\n                    </div>\r\n                    <div className=\"col-md-5 col-sm-5\">\r\n                        <h4>{props.agent.phone_number}</h4>\r\n                        <h4>{props.agent.department}</h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-offset-6 col-md-6 col-sm-offset-6 col-sm-6\">\r\n                        <button onClick={props.deleteClicked(props.agent)} className=\"laserbtn laset-red-bg laser-inline\">delete</button>\r\n                        <button onClick={props.editClicked(props.agent)} className=\"laserbtn laset-blue-bg laser-inline\">edit</button>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n} ","import React from 'react';\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nimport BarLoader from 'react-spinners/BarLoader';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst override = {\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    border: \"0px solid #000000\"\r\n}\r\n\r\nexport default function Loader(props){\r\n    return  <div>\r\n                <ReactModal \r\n                    isOpen={props.isLoading}\r\n                    className=\"LoadingModal\"\r\n                    overlayClassName=\"LoadingOverlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n\r\n                    <BarLoader\r\n                        css={override}\r\n                        sizeUnit={\"px\"}\r\n                        size={80}\r\n                        color={'#2E86C1'}\r\n                        loading={props.isLoading}\r\n                    />\r\n\r\n                </ReactModal>\r\n            </div>\r\n}","import React, {Component} from \"react\";\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nimport Loader from '../../components/Loader';\r\nimport Action from '../Action';\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst btn_style_left = {\r\n    marginRight: \"8px\"\r\n}\r\n\r\nconst btn_style_right = {\r\n    marginLeft: \"8px\",\r\n    marginRight: \"16px\"\r\n}\r\n\r\nconst controls_style = {\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class Agents extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            phone_number: \"\",\r\n            department: \"\",\r\n            password: \"\",\r\n            password_again: \"\",\r\n            error: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.submitClicked = this.submitClicked.bind(this);\r\n        this.onFieldChanged = this.onFieldChanged.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async submitClicked(e){\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            error: \"\"\r\n        })\r\n\r\n        if(this.state.firstname.length<=0 || this.state.lastname.length<=0){\r\n            this.setState({\r\n                error: \"Please enter a valid first and last name\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.phone_number.length < 11){\r\n            this.setState({\r\n                error: \"Please enter a valid phone number\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.department.length < 0){\r\n            this.setState({\r\n                error: \"Please enter a valid department\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.password.length < 8 || this.state.password_again.length < 8){\r\n            this.setState({\r\n                error: \"Please enter a valid password with 8 characters or more\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.password !== this.state.password_again){\r\n            this.setState({\r\n                error: \"Passwords dont match\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        console.log(this.state)\r\n\r\n        /*this.showLoading();\r\n\r\n        const response = await(API.createAgent());\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n\r\n            this.setState({\r\n                error: \"An error occurred login you in. Please try again later.\"\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if(response && response.data){\r\n            this.props.login();\r\n            this.props.history.push('/')\r\n        }*/\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.departments.length > 0){\r\n            this.setState(state => {\r\n                return { \r\n                    department: this.props.departments[0]\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onFieldChanged(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"Modal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center blue-text\">Add Agent</h4>\r\n                    <br/>\r\n                    <h5 className=\"laser-red-text\">{ this.state.error ? this.state.error : \"\" }</h5>\r\n                    <br/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"category\"><h5>First Name</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"firstname\" type=\"text\" name=\"firstname\" onChange={this.onFieldChanged} value={this.state.firstname} className=\"form-control bt-login-input\" placeholder=\"First Name\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"category\"><h5>Last Name</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"lastname\" type=\"text\" name=\"lastname\" onChange={this.onFieldChanged} value={this.state.lastname} className=\"form-control bt-login-input\" placeholder=\"Last Name\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Phone Number</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"phone_number\" type=\"phone\" name=\"phone_number\" onChange={this.onFieldChanged} value={this.state.phone_number} className=\"form-control bt-login-input\" placeholder=\"Phone Number\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Department</h5></label>\r\n                            <select style={controls_style} className=\"form-control\" id=\"department\" name=\"department\" value={this.state.department} onChange={this.onFieldChanged}>\r\n                                {\r\n                                    this.props.departments.map(dep => {\r\n                                        return <option>{dep}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Password</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"password\" type=\"password\" name=\"password\" onChange={this.onFieldChanged} value={this.state.password} className=\"form-control bt-login-input\" placeholder=\"Password\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Password Again</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"password_again\" type=\"password\" name=\"password_again\" onChange={this.onFieldChanged} value={this.state.password_again} className=\"form-control bt-login-input\" placeholder=\"Password Again\"/>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <button className=\"laser-inline laser-blue-bg laserbtn\" style={btn_style_left} onClick={e => this.submitClicked(e)}>create</button>\r\n                    <button className=\"laser-inline grey-bg laserbtn laser-black-text\" style={btn_style_right} onClick={this.props.closeModal}>cancel</button>\r\n\r\n                </ReactModal>\r\n\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\n\r\nimport Agent from \"./Agent\"\r\nimport { Link } from 'react-router-dom'\r\nimport AddAgent from \"./AddAgent\"\r\nimport EditAgent from \"./EditAgent\"\r\nimport ConfirmAction from '../ConfirmAction';\r\nimport Loader from '../../components/Loader';\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nconst controls_style = {\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class Agents extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            agents: [],\r\n            departments: [],\r\n            agents_filter: [],\r\n            selected_department: \"\",\r\n            selected_agent: {},\r\n            showConfirm: false,\r\n            showAddAgent: false,\r\n            showDeleteAgent: false,\r\n            showEditAgent: false,\r\n            confirmMessage: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.getAgents = this.getAgents.bind(this);\r\n        this.getAgentsDepartment = this.getAgentsDepartment.bind(this);\r\n        this.getDepartments = this.getDepartments.bind(this);\r\n        this.deleteAgent = this.deleteAgent.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.showDeleteAgent = this.showDeleteAgent.bind(this);\r\n        this.showAddAgent = this.showAddAgent.bind(this);\r\n        this.showEditAgent = this.showEditAgent.bind(this);\r\n        this.onDepartmentChanged = this.onDepartmentChanged.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async getAgents(){\r\n        this.showLoading();\r\n\r\n        const response = await(API.getAgents());\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState({\r\n                agents: response.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async getAgentsDepartment(filter){\r\n        this.showLoading();\r\n\r\n        const response = await(API.getAgentsDepartment(filter));\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState({\r\n                agents: response.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async getDepartments(){\r\n        this.showLoading();\r\n\r\n        const response = await(API.getDepartments());\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState(state => {\r\n                var deps = [\"All\"];\r\n\r\n                response.data.map(dep => {\r\n                    deps.push(dep.name);\r\n                })\r\n                \r\n                return {\r\n                    departments: deps\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    async deleteAgent(agent){\r\n        this.showLoading();\r\n\r\n        const response = await(API.deleteAgent(agent._id));\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState(state => {\r\n                var agents = this.state.agents;\r\n\r\n                agents.splice(this.agents.indexOf(agent),1);\r\n\r\n                return {\r\n                    agents: agents\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({\r\n            showConfirm: false,\r\n            showAddAgent: false,\r\n            showDeleteAgent: false,\r\n            showEditAgent: false\r\n        })\r\n    }\r\n\r\n    showDeleteAgent(agent){\r\n        this.setState({\r\n            selected_agent: agent,\r\n            showConfirm: true,\r\n            confirmMessage: \"Are you sure you want to delete agent \" +agent.firstname +\"'s profile? This cant be undone.\"\r\n        })\r\n    }\r\n\r\n    showAddAgent(){\r\n        this.setState({\r\n            showAddAgent:  true\r\n        })\r\n    }\r\n\r\n    showEditAgent(agent){\r\n        this.setState({\r\n            showEditAgent:  true,\r\n            selected_agent: agent\r\n        })\r\n    }\r\n\r\n    onDepartmentChanged(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n        this.setState({\r\n            selected_department: value\r\n        })\r\n\r\n        if(value===\"All\"){\r\n            this.getAgents();\r\n        }\r\n        else{\r\n            this.getAgentsDepartment(value);\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAgents();\r\n        this.getDepartments();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-parent-div\">\r\n                <div className=\"laser-top-panel\">\r\n                    <h4 className=\"laser-inline\">Laser Emergency Admin - Agents</h4>\r\n                    <div className=\"laser-controls\">\r\n                        <Link style={controls_style} to={'/'} className=\"nav-link white-text link laser-inline laser-150-width\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">View Map</button>\r\n                        </Link>\r\n\r\n                        <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"filter\" name=\"filter\" value={this.state.selected_department} onChange={this.onDepartmentChanged}>\r\n                            {\r\n                                this.state.departments.map(dep => {\r\n                                    return <option>{dep}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                        <button onClick={this.showAddAgent} style={controls_style} className=\"laser-inline laser-100-width laserbtn laser-white_border-blue-bg\">Add Agent</button>\r\n                        <Link style={controls_style} to={'/departments'} className=\"nav-link white-text link\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">Departments</button>\r\n                        </Link>\r\n                        <button onClick={e => this.props.logout(e)} className=\"form-control laser-inline laser-100-width laser-grey-bg laserbtn pull-right\">logout</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"container\">\r\n                        \r\n                    </div>\r\n                </div>\r\n                <Loader isLoading={this.state.isLoading}/>\r\n                \r\n                {\r\n                    this.state.showAddAgent ? <AddAgent closeModal={this.closeModal} departments={this.state.departments} /> : \"\"\r\n                }\r\n\r\n                {\r\n                    this.state.showDeleteAgent===true ? <ConfirmAction  yesClicked={this.deleteAgent} noClicked={this.closeModal} message={this.state.confirmMessage} /> : \"\"\r\n                }\r\n            </div>   \r\n        );\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\n\r\nimport Utils from '../../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nconst marginLeft = {\r\n    marginLeft: \"16px\"\r\n}\r\n\r\nexport default function Department(props){\r\n    return  <div className=\"col-md-4 col-sm-4\">\r\n                <div className=\"laser-item shadow\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-7 col-sm-7\">\r\n                            <h4 className=\"laser-black-text\">{props.department.name}</h4>\r\n                        </div>\r\n                        <div className=\"col-md-5 col-sm-5\">\r\n                            <h5>{utils.getDate(props.department.created)}</h5>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-offset-6 col-md-6 col-sm-offset-6 col-sm-6\">\r\n                            <button onClick={e => props.deleteClicked(e, props.department)} className=\"laserbtn laser-red-bg laser-inline\">delete</button>\r\n                            <button style={marginLeft} onClick={e => props.editClicked(e, props.department)} className=\"laserbtn laser-blue-bg laser-inline\">edit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n} ","import React, {Component} from \"react\";\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nimport Loader from '../../components/Loader';\r\nimport Action from '../Action';\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst btn_style_left = {\r\n    marginLeft: \"16px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nconst btn_style_right = {\r\n    marginLeft: \"8px\",\r\n    marginRight: \"16px\"\r\n}\r\n\r\nexport default class AddDepartment extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            action: \"loading\",\r\n            action_message: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n        this.onFieldChanged = this.onFieldChanged.bind(this);\r\n        this.saveDepartment = this.saveDepartment.bind(this)\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async saveDepartment(){\r\n        if(this.state.name.length > 0){\r\n            const response = await API.createDepartment(this.state.name)\r\n        \r\n            if(response==\"error\"){\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"An error occurred creating department, Please try again later\"\r\n                })\r\n\r\n                return;\r\n            }\r\n\r\n            if(response&&response.data){\r\n                this.props.closeModal();\r\n                this.props.getDepartments();\r\n            }\r\n            else{\r\n                this.setState({\r\n                    action: \"close\"\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onFieldChanged(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"ConfirmModal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center blue-text\">Add Department</h4>\r\n                    <label className=\"laser-white-text\" htmlFor=\"category\"><h5>Department Name</h5></label>\r\n                    <input required autoComplete=\"off\" id=\"name\" type=\"text\" name=\"name\" onChange={this.onFieldChanged} value={this.state.name} className=\"form-control bt-login-input\" placeholder=\"Department Name\"/>\r\n                    <br/>\r\n                    <button className=\"laser-inline laser-blue-bg laserbtn\" style={btn_style_left} onClick={this.saveDepartment}>save</button>\r\n                    <button className=\"laser-inline grey-bg laserbtn\" style={btn_style_right} onClick={this.props.closeModal}>cancel</button>\r\n                </ReactModal>\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../../components/Loader';\r\nimport Department from './Department'\r\nimport ConfirmAction from '../ConfirmAction';\r\nimport AddDepartment from './AddDepartment'\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nconst controls_style = {\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class Departments extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            departments: [],\r\n            selected_department: {},\r\n            showConfirm: false,\r\n            showAddDepartment: false,\r\n            showDeleteDepartment: false,\r\n            showEditDepartment: false,\r\n            confirmMessage: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.getDepartments = this.getDepartments.bind(this);\r\n        this.deleteDepartment = this.deleteDepartment.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.showDeleteDepartment = this.showDeleteDepartment.bind(this);\r\n        this.showAddDepartment = this.showAddDepartment.bind(this);\r\n        this.showEditDepartment = this.showEditDepartment.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async getDepartments(){\r\n        this.showLoading();\r\n\r\n        const response = await(API.getDepartments());\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState({\r\n                departments: response.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async deleteDepartment(){\r\n        this.showLoading();\r\n        \r\n        const response = await(API.deleteDepartment(this.state.selected_department._id));\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data){\r\n            this.closeModal();\r\n            this.setState(state => {\r\n                var departments = state.departments;\r\n\r\n                departments.splice(departments.indexOf(state.selected_department),1);\r\n\r\n                return {\r\n                    departments: departments,\r\n                    selected_department: {}\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    showDeleteDepartment(e, department){\r\n        this.setState({\r\n            selected_department: department,\r\n            showDeleteDepartment: true,\r\n            confirmMessage: \"Are you sure you want to delete the selected department?\"\r\n        })\r\n        e.preventDefault();\r\n    }\r\n\r\n    showAddDepartment(){\r\n        this.setState({\r\n            showAddDepartment:  true\r\n        })\r\n    }\r\n\r\n    showEditDepartment(e, department){\r\n        this.setState({\r\n            showEditDepartment:  true,\r\n            selected_department: department\r\n        })\r\n        e.preventDefault();\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({\r\n            showConfirm: false,\r\n            showAddDepartment: false,\r\n            showDeleteDepartment: false,\r\n            showEditDepartment: false\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getDepartments();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-parent-div\">\r\n                <div className=\"laser-top-panel\">\r\n                    <h4 className=\"laser-inline\">Laser Emergency Admin - Departments</h4>\r\n                    <div className=\"laser-controls\">\r\n                        <Link style={controls_style} to={'/'} className=\"nav-link white-text link laser-inline laser-150-width\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">View Map</button>\r\n                        </Link>\r\n\r\n                        <Link style={controls_style} to={'/agents'} className=\"nav-link white-text link\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">Agents</button>\r\n                        </Link>\r\n                        <Link style={controls_style} to={'/departments'} className=\"nav-link white-text link\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">Departments</button>\r\n                        </Link>\r\n                        <button style={controls_style} onClick={this.showAddDepartment} className=\"laser-inline laser-150-width laserbtn laser-white_border-blue-bg\">Add Department</button>\r\n                        <button onClick={e => this.props.logout(e)} className=\"form-control laser-inline laser-100-width laser-grey-bg laserbtn pull-right\">logout</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"container\">\r\n                        <br/>\r\n                        {\r\n                            this.state.departments.map(department => {\r\n                                return <Department key={department._id} department={department} deleteClicked={this.showDeleteDepartment} editClicked={this.showEditDepartment} />\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.showAddDepartment ? <AddDepartment getDepartments={this.getDepartments} closeModal={this.closeModal}/> : \"\"\r\n                }\r\n                {\r\n                    this.state.showDeleteDepartment===true ? <ConfirmAction  yesClicked={this.deleteDepartment} noClicked={this.closeModal} message={this.state.confirmMessage} /> : \"\"\r\n                }\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from 'react'\r\n\r\nimport Loader from '../components/Loader';\r\n\r\n//Our Auth Service\r\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nconst zero_margin = {\r\n    marginBottom: \"0px\",\r\n    marginTop: \"0px\"\r\n}\r\n\r\nexport default class Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state= {\r\n            username: \"\",\r\n            password: \"\",\r\n            error: \"\",\r\n            isLoading: false\r\n        }\r\n        \r\n        this.submitClicked = this.submitClicked.bind(this);\r\n        this.onFieldChanged = this.onFieldChanged.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n    \r\n    async submitClicked(e, item){\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            error: \"\"\r\n        })\r\n\r\n        if(this.state.username.length<=0 || this.state.password.length<=0){\r\n            this.setState({\r\n                error: \"Please make sure all fields are completed\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        this.showLoading();\r\n\r\n        const response = await(Auth.login(this.state.username, this.state.password));\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n\r\n            this.setState({\r\n                error: \"An error occurred login you in. Please try again later.\"\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if(response && response.data){\r\n            this.props.login();\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n    onFieldChanged(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-login-bg\">\r\n                <div className=\"laser-login-div laser-shadow\">\r\n                    <h2 className=\"bt-blue-text laser-white-text\" style={zero_margin}>Admin</h2>\r\n                    <h2 className=\"bt-blue-text laser-white-text\" style={zero_margin}>Login</h2>\r\n                    <br/>\r\n                    <br/>\r\n                    <h5 className=\"laser-red-text\">{ this.state.error ? this.state.error : \"\" }</h5>\r\n                    <br/>\r\n                    <label className=\"laser-white-text\" htmlFor=\"category\"><h5>User Name</h5></label>\r\n                    <input required autoComplete=\"off\" id=\"username\" type=\"text\" name=\"username\" onChange={this.onFieldChanged} value={this.state.username} className=\"form-control bt-login-input\" placeholder=\"User Name\"/>\r\n                    <br/>\r\n                    <label className=\"laser-white-text\" htmlFor=\"category\"><h5>Password</h5></label>\r\n                    <input required autoComplete=\"off\" id=\"password\" type=\"password\" name=\"password\" onChange={this.onFieldChanged} value={this.state.password} className=\"form-control bt-login-input\" placeholder=\"Password\"/>\r\n                    <br/>\r\n                    <br/>\r\n                    <button className=\"laser-blue-bg laserbtn\" onClick={this.submitClicked}>CONTINUE</button>    \r\n                </div>\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport Agents from \"./components/agents/Agents\";\r\nimport Departments from \"./components/agents/Departments\";\r\nimport Login from \"./components/Login\"\r\n\r\nimport AuthHelperMethods from './auth/AuthHelperMethods';\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nclass Laser extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            isLogin : false\r\n        }\r\n\r\n        this.logout = this.logout.bind(this);\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    logout = () => {\r\n        Auth.logout();\r\n\r\n        this.setState({\r\n            isLogin: true\r\n        })\r\n    }\r\n\r\n    login = () => {\r\n        this.setState({\r\n            isLogin: false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Route path=\"/\" exact render={(props) => (\r\n                        Auth.loggedIn() === true\r\n                            ? <App {...props} logout={this.logout}/>\r\n                            : <Redirect to='/login' login={this.login} />\r\n                        )} />\r\n\r\n                    <Route path=\"/agents\" exact render={(props) => (\r\n                        Auth.loggedIn() === true\r\n                            ? <Agents {...props} logout={this.logout}/>\r\n                            : <Redirect to='/login' login={this.login} />\r\n                        )}/>\r\n\r\n                    <Route path=\"/departments\" exact render={(props) => (\r\n                        Auth.loggedIn() === true\r\n                            ? <Departments {...props} logout={this.logout}/>\r\n                            : <Redirect to='/login' login={this.login} />\r\n                        )}/>\r\n\r\n                    <Route path=\"/login\" exact render={(props) => (\r\n                        Auth.loggedIn() === false\r\n                            ? <Login {...props} login={this.login} />\r\n                            : <Redirect to='/' {...props} logout={this.logout} />\r\n                        )} />\r\n                    {\r\n                        this.state.isLogin==true ? <Redirect to='/login' login={this.login} /> : \"\"\r\n                    }\r\n                </Router>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Laser;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Laser from './Laser';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Laser />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}