{"version":3,"sources":["icons/emergency_with_circle.gif","icons/call_with_circle.gif","icons/emergency.gif","icons/call.gif","icons/police_car_right.png","icons/fire_truck_right.png","icons/ambulance_right.png","icons/police_car_left.png","icons/fire_truck_left.png","icons/ambulance_left.png","icons/police_car_right_enroute.png","icons/fire_truck_right_enroute.png","icons/ambulance_right_enroute.png","icons/police_car_left_enroute.png","icons/fire_truck_left_enroute.png","icons/ambulance_left_enroute.png","sounds/alert.mp3","logo.svg","icons/car_test.png","utils/Utils.js","components/Sidebar.js","components/Text.js","components/Action.js","components/AgentDetails.js","components/LocationSideBar.js","components/TopPanel.js","components/LatestItem.js","components/Latest.js","components/RouteStatus.js","components/ConfirmAction.js","utils/Persistence.js","auth/AuthHelperMethods.js","api/Api.js","App.js","components/agents/Agent.js","components/Loader.js","components/agents/AddAgent.js","components/agents/Agents.js","components/agents/Department.js","components/agents/AddDepartment.js","components/agents/Departments.js","components/Login.js","Laser.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Util","str","moment","utc","format","arr","sort","a","b","Date","created","utils","Utils","Sidebar","props","react_default","createElement","className","onClick","e","closeSidebar","startMonitoring","emergency","resolve","is_trackable","getTime","full_name","emergency_numbers","length","map","item","index","key","email","phone_number","device","full_address","sub_admin_address","reasons","getReasons","style","width","Text","closeAction","text","Action","action","message","getText","background","border","color","padding","borderRadius","style_remove_btn","AgentDetails","closeAgentSideBar","agent","firstname","lastname","department","is_on_route","removeAgentFromRoute","user","addAgentToMonitoring","LocationSidebar","location","reason","dateStyle","zIndex","marginLeft","marginRight","controls_style","TopPanel","_this","this","getAllAgentsLocation","entry_default","onCalendarOpen","maxDate","onChange","onDateChange","value","date","id","name","selected_call","onCallsChanged","selected_emergency","onEmergenciesChanged","logout","Component","LatestItem","itemClicked","getColor","laser_type","textAlign","styling","height","Latest","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","preventDefault","latestClicked","_this2","react_scroll_to_bottom_lib_default","latest","_id","box_style","margin","float","OrderStatus","react_modal_lib_default","isOpen","overlayClassName","contentLabel","closeRouteResponse","route_response","removeAgentFromRouteAndCloseRouteResponse","ReactModal","setAppElement","btn_style_left","btn_style_right","ConfirmAction","yesClicked","noClicked","Persistence","selected_agents","localStorage","setItem","JSON","stringify","parse","getItem","AuthHelperMethods","login","username","password","axios","then","res","setToken","data","token","catch","err","loggedIn","getToken","isTokenExpired","decode","exp","now","console","log","idToken","removeItem","getConfirm","answer","url","headers","Accept","Content-Type","method","baseURL","timeout","_checkStatus","response","status","error","Error","statusText","Axios","getLocations","getEmergencies","getDepartments","persistence","mapStyle","todays_date","toISOString","today","App","showConfirm","locations","emergencies","filtered_locations","filtered_emergencies","side_bar_open","agent_side_bar_open","location_side_bar_open","clicked_user","clicked_agent","center","lat","lng","zoom","show_red_circle","show_blue_circle","clicked_marker_id","play_sound","channels_list","laser_agents","route_responses_from_agents","tracked_user_id","action_message","tracked_area","pubnub","PubNubReact","publishKey","subscribeKey","init","closeSideBar","onAgentClicked","getAgentIcon","handleSongFinishedPlaying","getLocationsDate","getEmergenciesDate","getLatestEmergencies","getLatestLocations","resolveCall","resolveEmergency","hideConfirm","showConfirmResolveEmergency","showConfirmResolveLocation","year","split","setState","publish","pn_gcm","notification_body","channel","sendByPost","storeInHistory","agents","list","new_selected_agents","age","new_list","splice","indexOf","found_agent","find","new_found_agent","assign","unsubscribe","channels","saveSelectedAgents","_this3","array","_this4","latitude","longitude","push","subscribe","_this5","setHours","getHours","event","target","emer","includes","toLowerCase","_this6","loc","dist","onLocationClicked","title","position","icon","blue_circle","call_icon","_this7","onEmergencyClicked","red_circle","emergency_icon","_this8","i","bearing","police_car_left_enroute","police_car_left","police_car_right_enroute","police_car_right","fire_car_left_enroute","fire_car_left","fire_car_right_enroute","fire_car_right","ambulance_car_left_enroute","ambulance_car_left","ambulance_car_right_enroute","ambulance_car_right","selected_location","mapProps","_this9","persist","getSelectedAgents","addListener","st","userMetadata","found_agent_on_route_possibly","forEach","socket","socketIOClient","on","API","self","sortDates","_this10","_this11","sound","show_location_side_bar","show_side_bar","react_sound_lib_default","alert","playStatus","Sound","PLAYING","playFromPosition","onLoading","handleSongLoading","onPlaying","handleSongPlaying","onFinishedPlaying","Latest_Latest","TopPanel_TopPanel","google","onReady","fetchPlaces","initialCenter","getLocationsMarkers","getEmergenciesMarkers","getAgentMarkers","GoogleApiWrapper","apiKey","override","display","Loader","isLoading","BarLoader_default","css","sizeUnit","size","loading","Agents","password_again","submitClicked","onFieldChanged","showLoading","hideLoading","departments","type","checked","defineProperty","htmlFor","required","autoComplete","placeholder","dep","closeModal","agents_filter","selected_department","selected_agent","showAddAgent","showDeleteAgent","showEditAgent","confirmMessage","getAgents","getAgentsDepartment","deleteAgent","onDepartmentChanged","filter","deps","react_router_dom","to","AddAgent_Agents","Department","getDate","deleteClicked","editClicked","AddDepartment","saveDepartment","Departments","showAddDepartment","showDeleteDepartment","showEditDepartment","deleteDepartment","AddDepartment_AddDepartment","Auth","zero_margin","marginBottom","marginTop","Login","history","Laser","isLogin","react_router","path","exact","render","src_App_0","Agents_Agents","Departments_Departments","Login_Login","Boolean","window","hostname","match","ReactDOM","src_Laser","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29c1720c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/emergency_with_circle.0153b7ea.gif\";","module.exports = __webpack_public_path__ + \"static/media/call_with_circle.34c87478.gif\";","module.exports = __webpack_public_path__ + \"static/media/emergency.445ccffb.gif\";","module.exports = __webpack_public_path__ + \"static/media/call.37865c67.gif\";","module.exports = __webpack_public_path__ + \"static/media/police_car_right.ac863eef.png\";","module.exports = __webpack_public_path__ + \"static/media/fire_truck_right.6e37ce5f.png\";","module.exports = __webpack_public_path__ + \"static/media/ambulance_right.b91382e8.png\";","module.exports = __webpack_public_path__ + \"static/media/police_car_left.8d1f2526.png\";","module.exports = __webpack_public_path__ + \"static/media/fire_truck_left.9d5483a7.png\";","module.exports = __webpack_public_path__ + \"static/media/ambulance_left.87cffdc0.png\";","module.exports = __webpack_public_path__ + \"static/media/police_car_right_enroute.5563c3ab.png\";","module.exports = __webpack_public_path__ + \"static/media/fire_truck_right_enroute.7fd11c10.png\";","module.exports = __webpack_public_path__ + \"static/media/ambulance_right_enroute.03ea87aa.png\";","module.exports = __webpack_public_path__ + \"static/media/police_car_left_enroute.7a96989b.png\";","module.exports = __webpack_public_path__ + \"static/media/fire_truck_left_enroute.de7da3a0.png\";","module.exports = __webpack_public_path__ + \"static/media/ambulance_left_enroute.90098924.png\";","module.exports = __webpack_public_path__ + \"static/media/alert.77e4ae16.mp3\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/car_test.4b63a07a.png\";","import moment from 'moment';\r\n\r\nexport default class Util{\r\n    getDate(str){\r\n        var date = moment(str);\r\n        var dateComponent = date.utc().format('YYYY - MM - DD');\r\n\r\n        return dateComponent;\r\n    }\r\n\r\n    getTime(str){\r\n        var date = moment(str);\r\n        var timeComponent = date.utc().format('HH:mm:ss');\r\n\r\n        return timeComponent;\r\n    }\r\n\r\n    sortDates(arr){\r\n        arr.sort(function compare(a, b) {\r\n            var dateA = new Date(a.created);\r\n            var dateB = new Date(b.created);\r\n            return dateA - dateB;\r\n        });\r\n          \r\n        return arr;\r\n    }\r\n\r\n}","\r\nimport React from 'react';\r\n\r\nimport Utils from '../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nexport default function Sidebar(props){\r\n    return <div className=\"laser-side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeSidebar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-red-text\"><b>Emergency Location Details</b></h4>\r\n                <br/>\r\n                <button className=\"laser-red-bg laserbtn\" onClick={e => props.startMonitoring(e, props.emergency)}>Start Monitoring</button>\r\n                <br/>\r\n                <br/>                \r\n                <button className=\"laser-blue-bg laserbtn\" onClick={e => props.resolve(e)}>Resolve</button>\r\n                <br/>\r\n                <h5><b>Trackable</b> - {props.emergency.is_trackable ? \"Yes\" : \"No\" }</h5>\r\n                <br/>\r\n                <h5><b>Time</b> - {utils.getTime(props.emergency.created)}</h5>\r\n                <br/>\r\n                <h5><b>Persons Name</b> - {props.emergency.full_name}</h5>\r\n                <br/>\r\n                <h5><b>Person's Emergency Contacts</b> - {(props.emergency.emergency_numbers && props.emergency.emergency_numbers.length>0) ? ParseContacts(props.emergency.emergency_numbers) : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Email Address</b> - {props.emergency.email ? props.emergency.email : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.emergency.phone_number ? props.emergency.phone_number : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Device</b> - {props.emergency.device ? props.emergency.device : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Emergency Full Address</b> - {props.emergency.full_address ? props.emergency.full_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Emergency Admin Address</b> - {props.emergency.sub_admin_address ? props.emergency.sub_admin_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Reason For Emergency</b> - {props.emergency.reasons ? getReasons(props.emergency.reasons) : \"\"}</h5>\r\n           </div>\r\n}\r\n\r\nfunction ParseContacts(arr){\r\n    return arr.map((item,index) => {\r\n        return <p key={index}>{item}</p>\r\n    })\r\n}\r\n\r\nfunction getReasons(reasons){\r\n    switch(reasons.length){\r\n        case 0:\r\n          return \"\";\r\n        case 1:\r\n          return reasons[0]+\" emergency\";\r\n        case 2:\r\n          return reasons[0] +\" emergency, \" +reasons[1] +\" emergency\";\r\n        case 3:\r\n          return reasons[0] +\" emergency, \" +reasons[1] +\" emergency, \" +reasons[2] +\" emergency\";\r\n    }\r\n}","import React from 'react';\r\n\r\nconst style = {\r\n    width: \"100%\"\r\n}\r\n\r\nexport default function Text(props){\r\n    return  <div className=\"laser-action_div laser-shadow\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 style={style}><span onClick={e => props.closeAction(e)} className=\"action_close_btn\">&#10005;</span></h1>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <h5>{props.text}</h5>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n}","import React from \"react\"\r\n\r\nimport Text from \"./Text\";\r\n\r\nexport default function Action(props){\r\n\r\n    return <div>{getText(props.action, props.message, props.closeAction)}</div>\r\n\r\n}\r\n\r\nfunction getText(action, message, closeAction){\r\n    switch(action){\r\n        case \"loading\":\r\n        \r\n        return <Text text={\"Loading...\"} closeAction={closeAction}/>\r\n\r\n       \r\n        case \"close\":\r\n        \r\n        return \"\";\r\n\r\n        case \"err_calls_load\":\r\n        \r\n        return <Text text={\"An Error occurred loading latest calls\"} closeAction={closeAction}/>;\r\n\r\n        case \"err_emergency_load\":\r\n        \r\n        return <Text text={\"An Error occurred loading latest emergencies\"} closeAction={closeAction}/>;\r\n\r\n        case \"message\":\r\n\r\n        return <Text text={message} closeAction={closeAction}/> \r\n    }\r\n}","import React from \"react\"\r\n\r\nconst style = {\r\n    background: \"#2E86C1\",\r\n    border: \"0px solid #000000\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"8px\",\r\n    borderRadius: \"4px\"\r\n}\r\n\r\nconst style_remove_btn = {\r\n    background: \"#000000\",\r\n    border: \"0px solid #000000\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"8px\",\r\n    borderRadius: \"4px\"\r\n}\r\n\r\nexport default function AgentDetails(props){\r\n    \r\n    return <div className=\"laser-agent_side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeAgentSideBar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-black-text\"><b>Agents Details</b></h4>\r\n                <br/>\r\n                <h5><b>Agents Name</b> - {props.agent.agent.firstname} {props.agent.agent.lastname}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.agent.agent.phone_number}</h5>\r\n                <br/>\r\n                <h5><b>Agency</b> - {props.agent.agent.department}</h5>\r\n                <br/>\r\n                <h5><b>Current Location</b> - {props.agent.full_address}</h5>\r\n                <br/>\r\n                <h5><b>Availability</b> - {props.agent.is_on_route ? props.agent.agent.firstname+\" is currently on route to a person's locations\"   : props.agent.agent.firstname+\" is available\"}</h5>\r\n                <p>{props.agent.is_on_route ? <button style={style_remove_btn} onClick={e => props.removeAgentFromRoute(e, props.agent)} className=\"\">Remove agent from route</button> : \"\"}</p>\r\n                <br/>\r\n                {props.user.full_name ?  <button style={style} onClick={e => props.addAgentToMonitoring(e, props.agent)} className=\"\">Send Agent {props.agent.agent.firstname} {props.agent.agent.lastname} to {props.user.full_name}'s location </button> : \"\"}\r\n           </div>\r\n\r\n}","import React from 'react';\r\n\r\nimport Utils from '../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nexport default function LocationSidebar(props){\r\n    return <div className=\"laser-side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeSidebar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-blue-text\"><b>Call Location Details</b></h4> \r\n                <br/>\r\n                <h5><b>Time</b> - {utils.getTime(props.location.created)}</h5>\r\n                <br/>\r\n                <h5><b>Persons Name</b> - {props.location.full_name}</h5>\r\n                <br/>\r\n                <h5><b>Email Address</b> - {props.location.email ? props.location.email : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.location.phone_number ? props.location.phone_number : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Call Full Address</b> - {props.location.full_address ? props.location.full_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Call Admin Address</b> - {props.location.sub_admin_address ? props.location.sub_admin_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Reason For Call</b> - {props.location.reason ? props.location.reason : \"\"}</h5>\r\n           </div>\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport DatePicker from 'react-date-picker';\r\n\r\nconst dateStyle = {\r\n    color: \"#111111\",\r\n    border: \"1px solid #FFFFFF\",\r\n    zIndex: \"6000\",\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\",\r\n    padding: \"8px\"\r\n}\r\n\r\nconst controls_style = {\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class TopPanel extends Component{\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-top-panel\">\r\n                <h4 className=\"laser-header-text\">Laser Emergency Admin - Monitoring and Dispatch</h4>\r\n                <div className=\"laser-controls\">\r\n                    <button onClick={e => this.props.getAllAgentsLocation(e)} className=\"form-control laser-inline laser-150-width laser-red-bg laserbtn\">Locate All Agents</button>\r\n                    \r\n                    <div className=\"laser-inline\" style={dateStyle}>\r\n                        <DatePicker\r\n                            onCalendarOpen={this.props.onCalendarOpen}\r\n                            maxDate={new Date()}\r\n                            style={dateStyle}\r\n                            onChange={this.props.onDateChange}\r\n                            value={this.props.date}/>\r\n                    </div>  \r\n\r\n                    <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"calls\" name=\"calls\" value={this.props.selected_call} onChange={this.props.onCallsChanged}>\r\n                        <option>Calls (All)</option>\r\n                        <option>Emergency Management(LASEMA)</option>\r\n                        <option>Police</option>\r\n                        <option>Distress</option>\r\n                        <option>Environmental and Special Offences Task Force</option>\r\n                        <option>Fire / Safety Services</option>\r\n                        <option>Environmental / Noise Pollution</option>\r\n                        <option>Broken Pipe / Water Leakage</option>\r\n                        <option>Pothole / Collapsed Road</option>\r\n                        <option>None</option>\r\n                    </select>\r\n                    \r\n                    <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"emergencies\" name=\"emergencies\" value={this.props.selected_emergency} onChange={this.props.onEmergenciesChanged}>\r\n                        <option>Emergencies (All)</option>\r\n                        <option>Police Cases</option>\r\n                        <option>Hospital Cases</option>\r\n                        <option>Fire Cases</option>\r\n                        <option>None</option>\r\n                    </select>\r\n\r\n                    <button onClick={e => this.props.logout(e)} className=\"form-control laser-inline laser-100-width laser-grey-bg laserbtn\">logout</button>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} ","import React from 'react';\r\n\r\nimport Utils from '../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nconst style = {\r\n    background: \"rgba(0,0,0,0)\",\r\n    border: \"0px solid #000000\"\r\n}\r\n\r\nexport default function LatestItem(props){\r\n    return <button className=\"laserItem\" style={style} onClick={e => props.itemClicked(e, props.item)}>\r\n                <h5 style={getColor(props.item.laser_type)}>{props.item.full_name} - {utils.getTime(props.item.created)} - {props.item.sub_admin_address}</h5>\r\n           </button>\r\n}\r\n\r\nfunction getColor(laser_type){\r\n    switch(laser_type){\r\n        case \"emergency\":\r\n            return {\r\n                color: \"#E74C3C\",\r\n                textAlign: \"left\"\r\n            }\r\n        case \"call\":\r\n            return {\r\n                color: \"#3498DB\",\r\n                textAlign: \"left\"\r\n            }\r\n        default:\r\n            return {\r\n                color: \"#000000\",\r\n                textAlign: \"left\"\r\n            }\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport LatestItem from './LatestItem';\r\n\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\nconst styling = {\r\n    width: \"380px\",\r\n    height: \"400px\"\r\n}\r\n\r\nexport default class Latest extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state= {\r\n\r\n        }\r\n\r\n\r\n        this.itemClicked = this.itemClicked.bind(this);\r\n    }\r\n\r\n    itemClicked(e, item){\r\n        e.preventDefault();\r\n        this.props.latestClicked(item);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-latest-div laser-shadow\">\r\n                <h4 className=\"text-center laser-black-text\">Latest Reports</h4>    \r\n                <ScrollToBottom style={styling}>\r\n                    {\r\n                        this.props.latest.map(item => {\r\n                            return <LatestItem key={item._id} itemClicked={this.itemClicked} item={item}/>\r\n                        })\r\n                    }\r\n                </ScrollToBottom>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\"\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nconst box_style = {\r\n    margin: \"16px\"\r\n}\r\n\r\n\r\nconst style = {\r\n    background: \"#2E86C1\",\r\n    border: \"0px solid #000000\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"8px\",\r\n    borderRadius: \"4px\",\r\n    float: \"left\",\r\n    marginLeft: \"20px\"\r\n}\r\n\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nexport default function OrderStatus(props){\r\n    return <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"Modal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center\">Message From Agent</h4>\r\n                    <button className=\"grey-bg bt-btn pull-right\" style={box_style} onClick={props.closeRouteResponse}>close</button>\r\n                    <br/>\r\n                    <br/>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 col-sm-8\">\r\n                            <h5 className=\"black-text\">{props.route_response.agent.agent.firstname} {props.route_response.agent.agent.lastname} has completed the route to {props.route_response.user.full_name}'s location</h5>\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-4\">\r\n                            <h5><b>Phone Number</b></h5>\r\n                            <h5>{props.route_response.agent.agent.phone_number}</h5>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <h5><button className=\"green-bg bt-btn\" style={style} onClick={e => props.removeAgentFromRouteAndCloseRouteResponse(e, props.route_response.agent, props.route_response)}>Remove Agent From Route</button></h5>\r\n                    </div>\r\n\r\n                </ReactModal>\r\n           </div>\r\n}","import React from 'react';\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst btn_style_left = {\r\n    marginLeft: \"16px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nconst btn_style_right = {\r\n    marginLeft: \"8px\",\r\n    marginRight: \"16px\"\r\n}\r\n\r\nexport default function ConfirmAction(props){\r\n    return  <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"ConfirmModal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center blue-text\">Confirmation</h4>\r\n                    <br/>\r\n                    <h5 className=\"text-center\">{props.message}</h5>\r\n                    <br/>\r\n                    <button className=\"laser-inline laser-blue-bg laserbtn\" style={btn_style_left} onClick={props.yesClicked}>yes</button>\r\n                    <button className=\"laser-inline grey-bg laserbtn\" style={btn_style_right} onClick={props.noClicked}>no</button>\r\n                </ReactModal>\r\n            </div>\r\n}","\r\nexport default class Persistence{\r\n    saveSelectedAgents(selected_agents){\r\n        localStorage.setItem(\"selected_agents\", JSON.stringify(selected_agents));\r\n    }\r\n\r\n    getSelectedAgents(){\r\n        return JSON.parse(localStorage.getItem(\"selected_agents\"));\r\n    }\r\n}","import axios from 'axios';\r\n\r\nimport decode from 'jwt-decode'\r\n\r\nconst login_url = '/login'\r\n\r\nexport default class AuthHelperMethods{\r\n\r\n    login = (username, password) => {\r\n        return  this.axios(login_url, {username,password})\r\n                    .then(res => {\r\n                        this.setToken(res.data.token); \r\n                        return res;\r\n                    })\r\n                    .catch(err => {\r\n                        return \"error\";\r\n                    })\r\n    }\r\n\r\n    loggedIn = () => {\r\n        // Checks if there is a saved token and it's still valid\r\n        const token = this.getToken(); // Getting token from localstorage\r\n        return !!token && !this.isTokenExpired(token); // handwaiving here\r\n    };\r\n\r\n    isTokenExpired = token => {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.now() / 1000) {\r\n            // Checking if token is expired.\r\n            return true;\r\n            } else return false;\r\n        } catch (err) {\r\n            console.log(\"expired check failed! Line 42: AuthService.js\");\r\n            return false;\r\n        }\r\n    };\r\n\r\n    setToken = idToken => {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem(\"id_token\", idToken);\r\n    };\r\n\r\n    getToken = () => {\r\n        // Retrieves the user token from localStorage\r\n        return localStorage.getItem(\"id_token\");\r\n    };\r\n\r\n    logout = () => {\r\n        // Clear user token and profile data from localStorage\r\n        localStorage.removeItem(\"id_token\");\r\n    };\r\n\r\n    getConfirm = () => {\r\n        // Using jwt-decode npm package to decode the token\r\n        let answer = decode(this.getToken());\r\n        console.log(\"Recieved answer!\");\r\n        return answer;\r\n    };\r\n    \r\n    axios = (url, data) => {\r\n        // performs api calls sending the required authentication headers\r\n        const headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        };\r\n\r\n        // Setting Authorization header\r\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\r\n        if (this.loggedIn()) {\r\n            headers[\"Authorization\"] = \"Bearer:\" + this.getToken();\r\n        }\r\n\r\n        return axios({\r\n            url:url,\r\n            method: \"post\",\r\n            data: data, \r\n            baseURL: 'http://52.59.255.174/admin',\r\n            //baseURL: 'http://localhost:3077/admin',\r\n            timeout: 30000,\r\n            headers: headers\r\n        })\r\n        .then(this._checkStatus)\r\n        .then(response => response)\r\n        .catch(err => err)\r\n    };\r\n\r\n    _checkStatus = response => {\r\n        // raises an error in case response status is not a success\r\n        if (response.status >= 200 && response.status < 300) {\r\n            // Success status lies between 200 to 300\r\n            return response;\r\n        } else {\r\n            var error = new Error(response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    };\r\n\r\n}","\r\n//Our Auth Service\r\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nconst Axios = Auth.axios;\r\n\r\nconst locations_url = \"/getLocations\";\r\nconst emergencies_url = \"/getEmergencies\";\r\nconst resolve_emergenciy_url = \"/resolveEmergency\";\r\nconst resolve_location_url = \"/resolveCall\";\r\n\r\nconst createAgentUrl = \"/create_agent\";\r\nconst editAgentUrl = \"/edit_agent\";\r\nconst deleteAgentUrl = \"/delete_agent\";\r\nconst getAgentsUrl = \"/get_agents\";\r\nconst getAgentsDepartmentUrl = \"/get_agents_departments\";\r\n\r\nconst createDepartmentUrl = \"/create_department\";\r\nconst editDepartmentUrl = \"/edit_department\";\r\nconst deleteDepartmentUrl = \"/delete_department\";\r\nconst getDepartmentsUrl = \"/get_departments\";\r\n\r\n\r\nexport const getLocations = (data) => {\r\n    return  Axios(locations_url, data)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const getEmergencies = (data) => {\r\n    return  Axios(emergencies_url, data)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const resolveLocation = (data) => {\r\n    return  Axios(resolve_location_url, data)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const resolveEmergency = (data) => {\r\n    return  Axios(resolve_emergenciy_url, data)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const getAgents = () => {\r\n    return  Axios(getAgentsUrl)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const getAgentsDepartment = (department) => {\r\n    return  Axios(getAgentsDepartmentUrl, {department})\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const createAgent = (data) => {\r\n    return Axios(createAgentUrl, data)\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const editAgent = (data) => {\r\n    return Axios(editAgentUrl, data)\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const deleteAgent = (id) => {\r\n    return Axios(deleteAgentUrl, {id})\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const getDepartments = () => {\r\n    return  Axios(getDepartmentsUrl)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const createDepartment = (name) => {\r\n    return Axios(createDepartmentUrl, {name})\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const editDepartment = (data) => {\r\n    return Axios(editDepartmentUrl, data)\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const deleteDepartment = (id) => {\r\n    return Axios(deleteDepartmentUrl, {id})\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                return \"error\";\r\n            })\r\n}","import React, {Component} from 'react';\r\nimport logo from './logo.svg';\r\nimport red_circle from './icons/emergency_with_circle.gif';\r\nimport blue_circle from './icons/call_with_circle.gif';\r\nimport emergency_icon from './icons/emergency.gif';\r\nimport call_icon from './icons/call.gif';\r\nimport car_test from './icons/car_test.png';\r\n\r\nimport police_car_right from './icons/police_car_right.png'\r\nimport fire_car_right from './icons/fire_truck_right.png'\r\nimport ambulance_car_right from './icons/ambulance_right.png'\r\n\r\nimport police_car_left from './icons/police_car_left.png'\r\nimport fire_car_left from './icons/fire_truck_left.png'\r\nimport ambulance_car_left from './icons/ambulance_left.png'\r\n\r\nimport police_car_right_enroute from './icons/police_car_right_enroute.png'\r\nimport fire_car_right_enroute from './icons/fire_truck_right_enroute.png'\r\nimport ambulance_car_right_enroute from './icons/ambulance_right_enroute.png'\r\n\r\nimport police_car_left_enroute from './icons/police_car_left_enroute.png'\r\nimport fire_car_left_enroute from './icons/fire_truck_left_enroute.png'\r\nimport ambulance_car_left_enroute from './icons/ambulance_left_enroute.png'\r\n\r\nimport alert from \"./sounds/alert.mp3\";\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport Sidebar from './components/Sidebar';\r\nimport Action from './components/Action';\r\nimport AgentDetails from './components/AgentDetails';\r\nimport LocationSidebar from './components/LocationSideBar';\r\nimport TopPanel from './components/TopPanel';\r\nimport Latest from './components/Latest';\r\nimport RouteStatus from './components/RouteStatus';\r\nimport ConfirmAction from './components/ConfirmAction';\r\nimport Utils from './utils/Utils';\r\nimport Persistence from './utils/Persistence';\r\nimport Sound from 'react-sound';\r\nimport PubNubReact from 'pubnub-react';\r\n\r\nimport './App.css';\r\n\r\nimport * as API from './api/Api';\r\n\r\nconst utils = new Utils();\r\nconst persistence = new Persistence();\r\n\r\nconst mapStyle = {\r\n    height: '100vh', \r\n    width: '100%'\r\n}\r\n\r\nconst socket_io_url = 'http://52.59.255.174';\r\n//const socket_io_url = 'http://localhost:3077';\r\n\r\nlet todays_date = new Date().toISOString();\r\n\r\nlet today = null;\r\n\r\nclass App extends Component{\r\n  constructor(props){\r\n      super(props);\r\n\r\n      this.state = {\r\n          showConfirm: {\r\n              action: \"\",\r\n              status: false\r\n          },\r\n          latest: [],\r\n          locations: [], \r\n          emergencies: [], \r\n          filtered_locations: [],\r\n          filtered_emergencies: [],\r\n          side_bar_open: false, \r\n          agent_side_bar_open: false, \r\n          location_side_bar_open: false, \r\n          clicked_user: {}, \r\n          clicked_agent: {},\r\n          center: {lat: 6.5244,lng: 3.3792}, \r\n          selected_call:\"Calls (All)\", \r\n          selected_emergency:\"Emergencies (All)\",\r\n          zoom : 11,\r\n          show_red_circle: false,\r\n          show_blue_circle: false,\r\n          clicked_marker_id: \"\",\r\n          play_sound: false,\r\n          channels_list: [\"lllaser\"],\r\n          laser_agents:[], //all agents\r\n          selected_agents: [], //selected agents to resolve issues\r\n          route_responses_from_agents: [],\r\n          tracked_user_id: \"\",\r\n          action: \"loading\",\r\n          action_message: \"\",\r\n          tracked_area: \"lllaser\", //the user in which the admin is currently viewing whether the user wants to be tracked or not\r\n          date: new Date(),\r\n          message: \"\"\r\n      }\r\n      \r\n      this.pubnub = new PubNubReact({\r\n        publishKey: 'pub-c-100b3918-0e25-4fac-ade6-c58d013cd019',\r\n        subscribeKey: 'sub-c-21e1e450-9457-11e9-bf84-1623aee89087'\r\n      });\r\n      this.pubnub.init(this);\r\n\r\n      this.closeSideBar = this.closeSideBar.bind(this);\r\n      this.onCallsChanged = this.onCallsChanged.bind(this);\r\n      this.onEmergenciesChanged = this.onEmergenciesChanged.bind(this);\r\n      this.onAgentClicked = this.onAgentClicked.bind(this);\r\n      this.onDateChange = this.onDateChange.bind(this);\r\n      this.onCalendarOpen = this.onCalendarOpen.bind(this);\r\n      this.latestClicked = this.latestClicked.bind(this);\r\n      this.startMonitoring = this.startMonitoring.bind(this);\r\n      this.closeAction = this.closeAction.bind(this);\r\n      this.closeAgentSideBar = this.closeAgentSideBar.bind(this);\r\n      this.addAgentToMonitoring = this.addAgentToMonitoring.bind(this);\r\n      this.getAgentIcon = this.getAgentIcon.bind(this);\r\n      this.getAllAgentsLocation = this.getAllAgentsLocation.bind(this);\r\n      this.handleSongFinishedPlaying = this.handleSongFinishedPlaying.bind(this);\r\n      this.removeAgentFromRoute = this.removeAgentFromRoute.bind(this);\r\n      this.closeRouteResponse = this.closeRouteResponse.bind(this);\r\n      this.removeAgentFromRouteAndCloseRouteResponse = this.removeAgentFromRouteAndCloseRouteResponse.bind(this);\r\n\r\n      this.getEmergencies = this.getEmergencies.bind(this);\r\n      this.getLocations = this.getLocations.bind(this);\r\n      this.getLocationsDate = this.getLocationsDate.bind(this);\r\n      this.getEmergenciesDate = this.getEmergenciesDate.bind(this);\r\n      this.getLatestEmergencies = this.getLatestEmergencies.bind(this);\r\n      this.getLatestLocations = this.getLatestLocations.bind(this);\r\n\r\n      this.resolveCall = this.resolveCall.bind(this);\r\n      this.resolveEmergency = this.resolveEmergency.bind(this);\r\n      this.hideConfirm = this.hideConfirm.bind(this);\r\n      this.showConfirmResolveEmergency = this.showConfirmResolveEmergency.bind(this);\r\n      this.showConfirmResolveLocation = this.showConfirmResolveLocation.bind(this);\r\n\r\n      this.logout = this.logout.bind(this);\r\n    \r\n      var year = todays_date.split(/T(.+)/)[0];\r\n\r\n      year = year+\"T00:00:00.000Z\";\r\n\r\n      today = new Date(year);\r\n  }\r\n\r\n  logout(){\r\n      this.props.logout();\r\n  }\r\n\r\n  async resolveEmergency(){\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"\",\r\n            status: false\r\n          },\r\n          message: \"\",\r\n          action: \"loading\",\r\n          action_message: \"\"\r\n      })\r\n\r\n      const response = await API.resolveEmergency({id: this.state.clicked_user._id})\r\n\r\n      if(response==\"error\"){\r\n            this.setState({\r\n                action: \"message\",\r\n                action_message: \"Emergency could not be resolved. Try again later\"\r\n            })\r\n            return;\r\n      }\r\n      \r\n      if(response){\r\n          this.setState({\r\n            action: \"close\",\r\n            side_bar_open: false\r\n          })\r\n\r\n          this.getLocationsDate(this.state.date);\r\n          this.getEmergenciesDate(this.state.date);\r\n\r\n          this.setState({\r\n            latest: []\r\n          })\r\n\r\n          this.getLatestLocations();\r\n          this.getLatestEmergencies();\r\n      }\r\n  }\r\n\r\n  async resolveCall(){\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"\",\r\n            status: false\r\n          },\r\n          message: \"\",\r\n          action: \"loading\",\r\n          action_message: \"\"\r\n      })\r\n\r\n      const response = await API.resolveLocation({id: this.state.clicked_user._id})\r\n\r\n      if(response==\"error\"){\r\n        this.setState({\r\n            action: \"message\",\r\n            action_message: \"Call could not be resolved. Try again later\"\r\n        })\r\n      }\r\n        \r\n      if(response){\r\n          this.setState({\r\n            action: \"close\",\r\n            location_side_bar_open: false\r\n          })\r\n\r\n          this.getLocationsDate(this.state.date);\r\n          this.getEmergenciesDate(this.state.date);\r\n\r\n          this.setState({\r\n            latest: []\r\n          })\r\n\r\n          this.getLatestLocations();\r\n          this.getLatestEmergencies();\r\n      }\r\n  }\r\n\r\n  hideConfirm(){\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"\",\r\n            status: false\r\n          },\r\n          message: \"\"\r\n      })\r\n  }\r\n\r\n  showConfirmResolveEmergency(e){\r\n      e.preventDefault();\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"emergency\",\r\n            status: true\r\n          },\r\n          message: \"Are you sure you want to mark this emergency issue as resolved ?\"\r\n      })\r\n  }\r\n\r\n  showConfirmResolveLocation(){\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"location\",\r\n            status: true\r\n          },\r\n          message: \"Are you sure you want to mark this call as resolved ?\"\r\n      })\r\n  }\r\n\r\n  removeAgentFromRoute(e, agent){\r\n      e.preventDefault();\r\n\r\n      this.pubnub.publish(\r\n          {\r\n              message: {\r\n                pn_gcm: {\r\n                    data: {\r\n                        notification_body: \"You need to abandon route. Tap to open app\",\r\n                        data: {},\r\n                        action: \"leave_route\"\r\n                    }\r\n                }\r\n              },\r\n              channel: agent.agent._id,\r\n              sendByPost: false, // true to send via POST\r\n              storeInHistory: false //override default storage options\r\n          },\r\n          (status, response) => {\r\n              // handle status, response\r\n          }\r\n      );\r\n\r\n      this.setState(state => {\r\n          var agents = state.selected_agents;\r\n          var list = state.channels_list;\r\n          var laser_agents = state.laser_agents;\r\n          \r\n          var new_selected_agents = [];\r\n\r\n          if(new_selected_agents.length > 1){\r\n              new_selected_agents = agents.map(age => {\r\n                  if(age.agent._id!==agent.agent._id){\r\n                      return age;\r\n                  }\r\n              })\r\n          }\r\n\r\n          var new_list = list.splice(list.indexOf(agent.agent._id), 1);\r\n\r\n\r\n          var found_agent = laser_agents.find(age => age.agent._id === agent.agent._id);\r\n\r\n          var new_found_agent = Object.assign({}, found_agent);\r\n\r\n          new_found_agent.is_on_route = false;\r\n\r\n          var new_laser_agents = laser_agents.splice(laser_agents.indexOf(found_agent), 1, new_found_agent);\r\n\r\n          //subscribe to the agents id to receive a response to the route request\r\n          this.pubnub.unsubscribe({\r\n             channels: [agent.agent._id]\r\n          })\r\n          \r\n          persistence.saveSelectedAgents(new_selected_agents);\r\n\r\n          return {  \r\n              selected_agents: new_selected_agents,\r\n              laser_agents: laser_agents,\r\n              channels_list: new_list,\r\n              agent_side_bar_open: false,\r\n              clicked_agent: {}\r\n          }\r\n      })\r\n  }\r\n\r\n  removeAgentFromRouteAndCloseRouteResponse(e, agent, route_response){\r\n      e.preventDefault();\r\n\r\n      this.pubnub.publish(\r\n          {\r\n              message: {\r\n                pn_gcm: {\r\n                    data: {\r\n                        notification_body: \"You need to abandon route. Tap to open app\",\r\n                        data: {},\r\n                        action: \"leave_route\"\r\n                    }\r\n                }\r\n              },\r\n              channel: agent.agent._id,\r\n              sendByPost: false, // true to send via POST\r\n              storeInHistory: false //override default storage options\r\n          },\r\n          (status, response) => {\r\n              // handle status, response\r\n          }\r\n      );\r\n\r\n      this.setState(state => {\r\n          var agents = state.selected_agents;\r\n          var list = state.channels_list;\r\n          var array = state.route_responses_from_agents;\r\n\r\n          array.splice(array.indexOf(route_response),1);\r\n          \r\n          var new_selected_agents = [];\r\n\r\n          if(new_selected_agents.length > 1){\r\n              new_selected_agents = agents.map(age => {\r\n                  if(age.agent._id!==agent.agent._id){\r\n                      return age;\r\n                  }\r\n              })\r\n          }\r\n\r\n          var new_list = list.splice(list.indexOf(agent.agent._id), 1);\r\n\r\n          //subscribe to the agents id to receive a response to the route request\r\n          this.pubnub.unsubscribe({\r\n                channels: [agent.agent._id]\r\n          })\r\n\r\n          persistence.saveSelectedAgents(new_selected_agents);\r\n\r\n          return {  \r\n              selected_agents: new_selected_agents,\r\n              channels_list: new_list,\r\n              route_responses_from_agents: array,\r\n              agent_side_bar_open: false,\r\n              clicked_agent: {}\r\n          }\r\n      })\r\n  }\r\n\r\n  addAgentToMonitoring(e, agent){\r\n      e.preventDefault();\r\n      //send a request to the agent via pubnub\r\n      //wait for response\r\n      //if agent accepts set agent as on route\r\n      this.pubnub.publish(\r\n          {\r\n            message: {\r\n                pn_gcm: {\r\n                    data: {\r\n                        notification_body: \"You have a new route. Tap to open app.\",\r\n                        data: this.state.clicked_user.phone_number ? {full_name: this.state.clicked_user.full_name, _id: this.state.clicked_user.user, phone_number: this.state.clicked_user.phone_number, latitude: this.state.clicked_user.latitude, longitude: this.state.clicked_user.longitude} : {full_name: this.state.clicked_user.full_name, _id: this.state.clicked_user.user, latitude: this.state.clicked_user.latitude, longitude: this.state.clicked_user.longitude},\r\n                        action: \"route_request\"\r\n                    }\r\n                }\r\n            },\r\n            channel: agent.agent._id,\r\n            sendByPost: false, // true to send via POST\r\n            storeInHistory: false //override default storage options\r\n          },\r\n          (status, response) => {\r\n              // handle status, response\r\n          }\r\n      );\r\n\r\n      this.setState(state => {\r\n          var agents = state.selected_agents;\r\n          var list = state.channels_list;\r\n\r\n          var new_selected_agents = [];\r\n\r\n          if(agents.length > 0){\r\n              new_selected_agents = agents.map(a => {\r\n                \r\n                if(a.agent._id === agent.agent._id){\r\n                  return agent;\r\n                }\r\n                else{return a}\r\n              })\r\n\r\n              var found_agent = new_selected_agents.find(a => a.agent._id === agent.agent._id)\r\n\r\n              if(!found_agent){\r\n                new_selected_agents.push(agent)\r\n              }\r\n          }\r\n          else{\r\n              new_selected_agents.push(agent)\r\n          }\r\n          \r\n          if(list.indexOf(agent.agent._id)===-1){\r\n            list.push(agent.agent._id)\r\n          }\r\n\r\n          //subscribe to the agents id to receive a response to the route request\r\n          this.pubnub.subscribe({\r\n            channels: list\r\n          })\r\n\r\n          persistence.saveSelectedAgents(new_selected_agents);\r\n\r\n          return {  \r\n            selected_agents: new_selected_agents,\r\n            channels_list: list\r\n          }\r\n      })\r\n  }\r\n\r\n  //Subscribe to the users sub admin area to receive updates and send out a request to all agents on the channel to send their location \r\n  //just in case some of them are not moving at the momemnt and their location is not updating\r\n  startMonitoring(e, item){\r\n      e.preventDefault();\r\n     \r\n      this.pubnub.publish(\r\n          {\r\n              message: {\r\n                pn_gcm: {\r\n                    data: {\r\n                        notification_body: \"Tap to open the laser App\",\r\n                        data: {},\r\n                        action: \"send_location\"\r\n                    }\r\n                }\r\n              },\r\n              channel: this.state.tracked_area,\r\n              sendByPost: false, // true to send via POST\r\n              storeInHistory: false //override default storage options\r\n          },\r\n          (status, response) => {\r\n              // handle status, response\r\n          }\r\n      );\r\n\r\n      //Next we will subscribe to the area to get latest updates\r\n      this.setState(state => {\r\n          var list = state.channels_list;\r\n\r\n          if(list.indexOf(item.user)===-1){\r\n\r\n            //remove old user from list\r\n            //unsubscribe from old user\r\n  \r\n            list.push(item.user)\r\n          }\r\n\r\n          this.pubnub.subscribe({\r\n            channels: list\r\n          })\r\n\r\n          return {\r\n              action: \"message\",\r\n              action_message: \"You are now monitoring \"+item.full_name,\r\n              channels_list: list,\r\n              laser_agents: [],\r\n              tracked_user_id: item.user\r\n          }\r\n      })\r\n  }\r\n\r\n  latestClicked(item){\r\n      switch(item.laser_type){\r\n          case \"emergency\":\r\n              this.setState({\r\n                clicked_user: item,\r\n                side_bar_open: true,\r\n                location_side_bar_open: false,\r\n                agent_side_bar_open: false,\r\n                center: {\r\n                  lat: item.latitude,\r\n                  lng: item.longitude\r\n                },\r\n                zoom: 19,\r\n                show_red_circle: true,\r\n                show_blue_circle: false,\r\n                clicked_marker_id: item._id\r\n              })\r\n              break;\r\n          case \"call\":\r\n              this.setState({\r\n                clicked_user: item,\r\n                side_bar_open: false,\r\n                location_side_bar_open: true,\r\n                agent_side_bar_open: false,\r\n                center: {\r\n                  lat: item.latitude,\r\n                  lng: item.longitude\r\n                },\r\n                zoom: 19,\r\n                show_red_circle: false,\r\n                show_blue_circle: true,\r\n                clicked_marker_id: item._id\r\n              })\r\n              break;\r\n      }\r\n  }\r\n\r\n  onCalendarOpen(){\r\n      this.setState({\r\n        play_sound: false,\r\n        side_bar_open: false, \r\n        location_side_bar_open: false,\r\n        agent_side_bar_open: false\r\n      })\r\n  }\r\n\r\n  onDateChange(date){\r\n\r\n    //We add 1 hour to the date because the date axios is sending to the server is 1 hour behind what it should be\r\n    date = new Date(date);\r\n    date.setHours(date.getHours() + 1);\r\n\r\n     this.setState({\r\n        play_sound: false,\r\n        date: date,\r\n        show_red_circle: false,\r\n        show_blue_circle: false,\r\n        clicked_marker_id: \"\",\r\n        action: \"loading\",\r\n        action_message: \"\",\r\n        selected_call:\"Calls (All)\", \r\n        selected_emergency:\"Emergencies (All)\"\r\n     })\r\n\r\n     this.getLocationsDate(date);\r\n     this.getEmergenciesDate(date);\r\n  }\r\n\r\n  onCallsChanged(event){\r\n      const target = event.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n\r\n      let arr = [];\r\n\r\n      if(this.state.locations.length>0){\r\n          if(value===\"Calls (All)\"){\r\n            this.setState(state => ({\r\n              play_sound: false,\r\n              filtered_locations: state.locations,\r\n              side_bar_open: false, \r\n              selected_call: value,\r\n              agent_side_bar_open: false,\r\n              location_side_bar_open: false,\r\n              show_blue_circle: false\r\n            }))\r\n          }\r\n          else if(value===\"None\"){\r\n            this.setState({\r\n              play_sound: false,\r\n              filtered_locations: [],\r\n              side_bar_open: false, \r\n              selected_call: value,\r\n              agent_side_bar_open: false,\r\n              location_side_bar_open: false,\r\n              show_blue_circle: false\r\n            })\r\n          }\r\n          else{\r\n            this.state.locations.map(emer => {\r\n              if(emer.reason.includes(value.toLowerCase())){\r\n                arr.push(emer)\r\n              }\r\n            })\r\n            \r\n            if(arr.length>0){\r\n              this.setState({\r\n                play_sound: false,\r\n                filtered_locations: arr,\r\n                selected_call: value,\r\n                side_bar_open: false, \r\n                agent_side_bar_open: false,\r\n                location_side_bar_open: false,\r\n                show_blue_circle: false\r\n              })\r\n            }\r\n            else{\r\n              //show message that there are no locations found for that parameter\r\n      \r\n              this.setState({\r\n                  play_sound: false,\r\n                  filtered_locations:[],\r\n                  selected_call: value,\r\n                  side_bar_open: false, \r\n                  location_side_bar_open: false,\r\n                  show_blue_circle: false\r\n              })\r\n            }\r\n          }\r\n      }\r\n      else{\r\n          this.setState({\r\n              selected_call: value\r\n          })\r\n      }\r\n  }\r\n\r\n  onEmergenciesChanged(event){\r\n      const target = event.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n      \r\n      let arr = [];\r\n      if(this.state.emergencies.length>0){\r\n          if(value===\"Emergencies (All)\"){\r\n            this.setState(state => ({\r\n              play_sound: false,\r\n              filtered_emergencies: state.emergencies,\r\n              side_bar_open: false, \r\n              selected_emergency: value,\r\n              location_side_bar_open: false,\r\n              agent_side_bar_open: false,\r\n              show_red_circle: false\r\n            }))\r\n          }\r\n          else if(value===\"None\"){\r\n            this.setState({\r\n              play_sound: false,\r\n              filtered_emergencies:[],\r\n              selected_emergency: value,\r\n              side_bar_open: false, \r\n              agent_side_bar_open: false,\r\n              location_side_bar_open: false,\r\n              show_red_circle: false\r\n            })\r\n          }\r\n          else{\r\n            this.state.emergencies.map(emer => {\r\n              if(emer.reasons&&emer.reasons.length>0){\r\n                emer.reasons.map(reason => {\r\n                    if(value.toLowerCase().includes(reason)){\r\n                        arr.push(emer)\r\n                    }\r\n                })\r\n              }\r\n            })\r\n      \r\n            if(arr.length>0){\r\n              this.setState({\r\n                play_sound: false,\r\n                filtered_emergencies:arr,\r\n                selected_emergency: value,\r\n                side_bar_open: false, \r\n                agent_side_bar_open: false,\r\n                location_side_bar_open: false,\r\n                show_red_circle: false\r\n              })\r\n            }\r\n            else{\r\n              //show message that there are no emregencies found for that parameter\r\n      \r\n              this.setState({\r\n                  play_sound: false,\r\n                  filtered_emergencies: [],\r\n                  side_bar_open: false, \r\n                  selected_emergency: value,\r\n                  agent_side_bar_open: false,\r\n                  location_side_bar_open: false,\r\n                  show_red_circle: false\r\n              })\r\n            }\r\n          }\r\n      }    \r\n      else{\r\n          this.setState({\r\n             selected_emergency: value\r\n          })\r\n      }\r\n  }\r\n\r\n  onLocationClicked(location,e){\r\n      this.setState({\r\n          play_sound: false,\r\n          clicked_user: location,\r\n          side_bar_open: false,\r\n          agent_side_bar_open: false,\r\n          location_side_bar_open: true,\r\n          center: {\r\n            lat: location.latitude,\r\n            lng: location.longitude\r\n          },\r\n          zoom: 19,\r\n          show_red_circle: false,\r\n          show_blue_circle: true,\r\n          clicked_marker_id: location._id\r\n      })\r\n  }\r\n\r\n  onEmergencyClicked(emergency,e){\r\n      this.setState({\r\n          play_sound: false,\r\n          clicked_user: emergency,\r\n          clicked_agent: {},\r\n          side_bar_open: true,\r\n          agent_side_bar_open: false,\r\n          location_side_bar_open: false,\r\n          center: {\r\n              lat: emergency.latitude,\r\n              lng: emergency.longitude\r\n          },\r\n          zoom: 19,\r\n          show_red_circle: true,\r\n          show_blue_circle: false,\r\n          clicked_marker_id: emergency._id\r\n      })\r\n  }\r\n\r\n  onAgentClicked(agent,e){\r\n      this.setState({\r\n          play_sound: false,\r\n          clicked_agent: agent,\r\n          agent_side_bar_open: true\r\n    })\r\n  }\r\n\r\n  getLocationsMarkers(){\r\n      let locations_ui;\r\n\r\n      if(this.state.filtered_locations.length>0){\r\n        locations_ui = this.state.filtered_locations.map(loc => {\r\n          return  <Marker key={loc._id} onClick={e => this.onLocationClicked(loc,e)}\r\n                    name={loc.reason} \r\n                    title={loc.full_name}\r\n                    position={{lat: loc.latitude, lng: loc.longitude}}\r\n                    icon={{\r\n                      url: (this.state.clicked_marker_id===loc._id) ? blue_circle : call_icon\r\n                    }}/> \r\n        })\r\n      }\r\n      else{\r\n        locations_ui = \"\";\r\n      }\r\n      \r\n      return locations_ui;\r\n  }\r\n\r\n  getEmergenciesMarkers(){\r\n      let emergencies_ui;\r\n\r\n      if(this.state.filtered_emergencies.length>0){\r\n          emergencies_ui = this.state.filtered_emergencies.map(emer => {\r\n            return <Marker key={emer._id} onClick={e => this.onEmergencyClicked(emer,e)}\r\n                      name={emer.reasons[0]} \r\n                      title={emer.full_name}\r\n                      position={{lat: emer.latitude, lng: emer.longitude}}\r\n                      icon={{\r\n                        url: (this.state.clicked_marker_id===emer._id) ? red_circle : emergency_icon\r\n                      }}/>\r\n          })\r\n      }\r\n      else{\r\n          emergencies_ui = \"\";\r\n      }\r\n      \r\n      return emergencies_ui;\r\n  }\r\n\r\n  getAgentMarkers(){\r\n      let agents_ui;\r\n\r\n      if(this.state.laser_agents.length>0){\r\n        agents_ui = this.state.laser_agents.map((agent,i) => {\r\n          return <Marker key={i}  onClick={e => this.onAgentClicked(agent,e)}\r\n                    name={agent.full_address} \r\n                    title={agent.full_address}\r\n                    position={{lat: agent.latitude, lng: agent.longitude}}\r\n                    icon={{\r\n                      url: this.getAgentIcon(agent) \r\n                    }}/>\r\n        })\r\n      }\r\n      else{\r\n        agents_ui = \"\";\r\n      }\r\n\r\n      return agents_ui;\r\n  }\r\n\r\n  getAgentIcon(agent){\r\n      switch(agent.agent.department){\r\n          case \"police\":\r\n              if(agent.bearing>90||agent.bearing<=270){\r\n                  return (agent.is_on_route) ? police_car_left_enroute : police_car_left;\r\n              }\r\n              else{\r\n                  return (agent.is_on_route) ? police_car_right_enroute : police_car_right;\r\n              }\r\n          break;\r\n          case \"fire\":\r\n              if(agent.bearing>90||agent.bearing<=270){\r\n                  return (agent.is_on_route) ? fire_car_left_enroute : fire_car_left;\r\n              }\r\n              else{\r\n                  return (agent.is_on_route) ? fire_car_right_enroute : fire_car_right;\r\n              }\r\n          break;\r\n          case \"hospital\":\r\n              if(agent.bearing>90||agent.bearing<=270){\r\n                  return (agent.is_on_route) ? ambulance_car_left_enroute: ambulance_car_left;\r\n              }\r\n              else{\r\n                  return (agent.is_on_route) ? ambulance_car_right_enroute : ambulance_car_right;\r\n              }\r\n          break;\r\n      }\r\n  }\r\n\r\n  closeAction(e){\r\n      this.setState({\r\n          action: \"close\",\r\n          action_message: \"\"\r\n      })\r\n  }\r\n\r\n  closeSideBar(e){\r\n      this.setState({\r\n          play_sound: false,\r\n          side_bar_open: false,\r\n          location_side_bar_open: false,\r\n          agent_side_bar_open: false,\r\n          selected_location: {},\r\n          selected_emergency: {},\r\n          clicked_marker_id: \"\"\r\n      })\r\n  }\r\n\r\n  closeAgentSideBar(e){\r\n      this.setState({\r\n          clicked_agent: {},\r\n          agent_side_bar_open: false\r\n      })\r\n  }\r\n\r\n  closeRouteResponse(route_response){\r\n      this.setState(state => {\r\n          var array = state.route_responses_from_agents;\r\n\r\n          array.splice(array.indexOf(route_response),1);\r\n\r\n          return {\r\n              route_responses_from_agents: array\r\n          }\r\n      })\r\n  }\r\n\r\n  fetchPlaces(mapProps, map) {\r\n\r\n  }\r\n\r\n  getAllAgentsLocation(){\r\n      this.pubnub.subscribe({\r\n        channels: this.state.channels_list\r\n      })\r\n\r\n      this.setState({\r\n        laser_agents: []\r\n      })\r\n\r\n      this.pubnub.publish(\r\n        {\r\n            message: {\r\n                pn_gcm: {\r\n                    data: {\r\n                        notification_body: \"Tap to open the Laser App\",\r\n                        data: {},\r\n                        action: \"send_location\"\r\n                    }\r\n                }\r\n            },\r\n            channel: this.state.tracked_area,\r\n            sendByPost: false, // true to send via POST\r\n            storeInHistory: false //override default storage options\r\n        },\r\n        (status, response) => {\r\n            // handle status, response\r\n        }\r\n      );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      this.pubnub.unsubscribe({\r\n          channels: this.state.channels_list\r\n      });\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    //get selected agents from persistence(storage)\r\n    var persist = persistence.getSelectedAgents();\r\n    \r\n    if(persist!==null && persist.length > 0){\r\n        this.setState({\r\n            selected_agents: persist\r\n        })\r\n    }\r\n\r\n    //subscribe to the parent channel to receive location updates from agents\r\n    this.pubnub.subscribe({\r\n      channels: this.state.channels_list\r\n    })\r\n\r\n    this.getAllAgentsLocation();\r\n\r\n    this.pubnub.addListener({\r\n      status: (st) => {\r\n          \r\n      },\r\n      message: (message) => {\r\n\r\n          \r\n          if(message.channel === this.state.tracked_user_id){\r\n              //the message is from the user currently being monitored\r\n              if(message.userMetadata && message.userMetadata.action === \"user_location_update\"){\r\n                  var arr = this.state.emergencies.map(emergency => {\r\n                      if(emergency.user === this.state.tracked_user_id){\r\n                          emergency.latitude = message.message.latitude;\r\n                          emergency.longitude = message.message.longitude;\r\n                          return emergency;\r\n                      }\r\n                      else{\r\n                          return emergency;\r\n                      }\r\n                  })\r\n\r\n                  //var found_emergency = state.emergencies.find(emergency => emergency.user === state.tracked_user_id);\r\n\r\n                  this.setState(state => {\r\n                      return{\r\n                        emergencies: arr\r\n                      }\r\n                  })\r\n              }\r\n          }\r\n          \r\n          if(message.channel === this.state.tracked_area ){\r\n              if(message.userMetadata && message.userMetadata.action === \"agent_location_update\"){\r\n                  var agents = this.state.laser_agents;\r\n\r\n                  var found_agent = this.state.laser_agents.find(agent => agent.agent._id === message.message.agent._id);\r\n\r\n                  if(this.state.laser_agents.length<=0||!found_agent){\r\n                      agents.push(message.message);\r\n                  }\r\n                  else{\r\n                      agents = this.state.laser_agents.map(agent => {\r\n                          if(agent.agent._id === message.message.agent._id){\r\n\r\n                              var found_agent_on_route_possibly = this.state.selected_agents.find(age => age.agent._id === message.message.agent._id);\r\n\r\n                              if(found_agent_on_route_possibly){\r\n                                  message.message.is_on_route = found_agent_on_route_possibly.is_on_route;\r\n                              }\r\n                              else{\r\n                                message.message.is_on_route = false;\r\n                              }\r\n\r\n                              return message.message;\r\n                          }\r\n                          else{\r\n                              var found_agent_on_route_possibly = this.state.selected_agents.find(age => age.agent._id === agent.agent._id);\r\n                              \r\n                              if(found_agent_on_route_possibly){\r\n                                 agent.is_on_route = found_agent_on_route_possibly.is_on_route;\r\n                              }\r\n                              else{\r\n                                  agent.is_on_route = false;\r\n                              }\r\n\r\n                              return agent;\r\n                          }\r\n                      });\r\n                  }\r\n                  \r\n                  this.setState(state => {\r\n                      return{\r\n                        laser_agents: agents\r\n                      }\r\n                  })\r\n                  \r\n              }\r\n          }\r\n          \r\n          //Check if its an agent that is replying to a request, could also be used in future to check for other messages from the selected agents\r\n          if(this.state.selected_agents.length > 0){\r\n\r\n              this.state.selected_agents.forEach((agent,index) => {\r\n                  \r\n                  if(agent.agent._id === message.channel){\r\n                      \r\n                      if(message.userMetadata && message.userMetadata.action === \"route_request_response\"){\r\n                          if(message.message.response===true){\r\n\r\n                              this.setState(state => {\r\n                                  var agents = state.selected_agents;\r\n\r\n                                  agents[index].is_on_route = true;\r\n                                  \r\n                                  persistence.saveSelectedAgents(agents);\r\n\r\n                                  return {\r\n                                        selected_agents: agents,\r\n                                        action: \"message\",\r\n                                        action_message: \"Agent \" +agent.agent.firstname +\" \" +agent.agent.lastname +\" is now en route to \"+this.state.clicked_user.full_name+\"'s location\"\r\n                                  }\r\n                              })\r\n\r\n                          }\r\n                          else{\r\n                              this.setState(state => {\r\n                                var agents = state.selected_agents;\r\n\r\n                                agents[index].is_on_route = false;\r\n                                \r\n                                persistence.saveSelectedAgents(agents);\r\n\r\n                                return {\r\n                                    selected_agents: agents,\r\n                                    action: \"message\",\r\n                                    action_message: \"Agent \" +agent.agent.firstname +\" \" +agent.agent.lastname +\" declined the request to go to \"+this.state.clicked_user.full_name+\"'s location\"\r\n                                }\r\n                              })\r\n                          }\r\n                      }\r\n                      \r\n                      if(message.userMetadata && message.userMetadata.action === \"route_completed\"){\r\n                          //show message that agent has completed route\r\n                          if(message.message){\r\n                              this.setState(state => {\r\n                                  var array = state.route_responses_from_agents;\r\n\r\n                                  var user = message.message;\r\n\r\n                                  array.push({user:user, agent:agent})\r\n\r\n                                  return {\r\n                                      route_responses_from_agents : array\r\n                                  }\r\n                              })\r\n                          }\r\n                      }\r\n                  }\r\n              })\r\n          }\r\n\r\n      }\r\n    });\r\n\r\n    const socket = socketIOClient(socket_io_url);\r\n\r\n    socket.on(\"connect\", \r\n      () => console.log(\"connected to socket io\")\r\n    );\r\n\r\n    //Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\r\n    socket.on(\"emergency\", \r\n      data => {\r\n         if(data){\r\n             this.setState(state => {\r\n              let arr = state.emergencies;\r\n              let lat = state.latest;\r\n              \r\n              lat.push(data);\r\n              arr.push(data)\r\n\r\n              return {\r\n                  play_sound: true,\r\n                  latest: lat,\r\n                  clicked_marker_id: data._id,\r\n                  zoom: 18,\r\n                  emergencies: arr,\r\n                  center: {\r\n                    lat: data.latitude,\r\n                    lng: data.longitude\r\n                 }\r\n              }\r\n            })\r\n         }\r\n      }\r\n    );\r\n\r\n    socket.on(\"call\", \r\n      data => {\r\n        if(data){\r\n            this.setState(state => {\r\n              let arr = state.locations;\r\n              let lat = state.latest;\r\n              \r\n              lat.push(data);\r\n              arr.push(data)\r\n\r\n              return {\r\n                  play_sound: true,\r\n                  latest: lat,\r\n                  clicked_marker_id: data._id,\r\n                  zoom: 18,\r\n                  locations: arr,\r\n                  center: {\r\n                    lat: data.latitude,\r\n                    lng: data.longitude\r\n                 }\r\n              }\r\n          })\r\n        }\r\n      }\r\n    );\r\n\r\n    this.getLocations();\r\n    this.getEmergencies();\r\n  }\r\n\r\n  async getLocationsDate(date){\r\n        const response = await API.getLocations({date})\r\n        \r\n        if(response==\"error\"){\r\n            this.setState({\r\n                action: \"err_calls_load\",\r\n                locations: [],\r\n                filtered_locations: []\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.locations){\r\n            console.log({response})\r\n            if(this.state.action === \"loading\"){\r\n                this.setState({\r\n                    action: \"close\",\r\n                    locations: response.data.locations,\r\n                    filtered_locations: response.data.locations\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    locations: response.data.locations,\r\n                    filtered_locations: response.data.locations\r\n                })\r\n            }\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\",\r\n                locations: [],\r\n                filtered_locations: []\r\n            })\r\n        }\r\n  }\r\n\r\n  async getEmergenciesDate(date){\r\n        const response = await API.getEmergencies({date})\r\n        \r\n        if(response==\"error\"){\r\n            this.setState({\r\n                action: \"err_emergency_load\",\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.emergencies){\r\n            console.log({response})\r\n            if(this.state.action === \"loading\"){\r\n                this.setState({\r\n                    action: \"close\",\r\n                    emergencies: response.data.emergencies,\r\n                    filtered_emergencies: response.data.emergencies\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    emergencies: response.data.emergencies,\r\n                    filtered_emergencies: response.data.emergencies\r\n                })\r\n            }\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\",\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n            })\r\n        }\r\n  }\r\n\r\n  async getLatestLocations(){\r\n        var self = this;\r\n        const response = await API.getLocations({date: today})\r\n\r\n        if(response==\"error\"){\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.locations&&response.data.locations.length>0){\r\n            self.setState(state => {\r\n                var loc = state.latest;\r\n\r\n                for(var i = 0; i<response.data.locations.length; i++){\r\n                    loc.push(response.data.locations[i]);\r\n                }\r\n\r\n                loc = utils.sortDates(loc);\r\n\r\n                return {\r\n                    latest : loc\r\n                }\r\n                \r\n            })\r\n        }\r\n  }\r\n\r\n  async getLatestEmergencies(){\r\n        var self = this;\r\n        const response = await API.getEmergencies({date: today})\r\n\r\n        if(response==\"error\"){\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.emergencies&&response.data.emergencies.length>0){\r\n            self.setState(state => {\r\n                var loc = state.latest;\r\n\r\n                for(var i = 0; i<response.data.emergencies.length; i++){\r\n                    loc.push(response.data.emergencies[i]);\r\n                }\r\n\r\n                loc = utils.sortDates(loc);\r\n\r\n                return {\r\n                    latest : loc\r\n                }\r\n            })\r\n        }\r\n  }\r\n\r\n  async getEmergencies(){\r\n        const response = await API.getEmergencies({date: today})\r\n\r\n        if(response==\"error\"){\r\n            //show error message\r\n            this.setState({\r\n                action: \"err_emergency_load\",\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.emergencies&&response.data.emergencies.length>0){\r\n            this.setState(state => {\r\n            var loc = state.latest;\r\n\r\n            for(var i = 0; i<response.data.emergencies.length; i++){\r\n                loc.push(response.data.emergencies[i]);\r\n            }\r\n\r\n            loc = utils.sortDates(loc);\r\n\r\n            if(this.state.action === \"loading\"){\r\n                return {\r\n                    action: \"close\",\r\n                    latest : loc,\r\n                    emergencies: response.data.emergencies,\r\n                    filtered_emergencies: response.data.emergencies\r\n                }\r\n            }\r\n            else{\r\n                return {\r\n                    latest : loc,\r\n                    emergencies: response.data.emergencies,\r\n                    filtered_emergencies: response.data.emergencies\r\n                }\r\n            }\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\",\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n            })\r\n        }\r\n  }\r\n\r\n  async getLocations(){\r\n\r\n        const response = await API.getLocations({date: today})\r\n\r\n        if(response==\"error\"){\r\n            //show error message\r\n            this.setState({\r\n                action: \"err_calls_load\",\r\n                locations: [],\r\n                filtered_locations: []\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.locations&&response.data.locations.length>0){\r\n            this.setState(state => {\r\n                var loc = state.latest;\r\n\r\n                for(var i = 0; i<response.data.locations.length; i++){\r\n                    loc.push(response.data.locations[i]);\r\n                }\r\n\r\n                loc = utils.sortDates(loc);\r\n\r\n                if(this.state.action === \"loading\"){\r\n                    return {\r\n                        action: \"close\",\r\n                        latest : loc,\r\n                        locations: response.data.locations,\r\n                        filtered_locations: response.data.locations\r\n                    }\r\n                }\r\n                else{\r\n                    return {\r\n                        latest : loc,\r\n                        locations: response.data.locations,\r\n                        filtered_locations: response.data.locations\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\",\r\n                locations: [],\r\n                filtered_locations: []\r\n            })\r\n        }\r\n  }\r\n\r\n  handleSongFinishedPlaying(){\r\n      this.setState({\r\n          play_sound: false\r\n      })\r\n }\r\n\r\n\r\nrender(){\r\n    let sound;\r\n\r\n    if(this.state.play_sound){\r\n       sound = <Sound\r\n       url={alert}\r\n       playStatus={Sound.status.PLAYING}\r\n       playFromPosition={1 /* in milliseconds */}\r\n       onLoading={this.handleSongLoading}\r\n       onPlaying={this.handleSongPlaying}\r\n       onFinishedPlaying={this.handleSongFinishedPlaying}/>;\r\n    }\r\n    else{\r\n      sound = \"\";\r\n    }\r\n\r\n    let show_location_side_bar;\r\n    \r\n    if(this.state.location_side_bar_open){\r\n      show_location_side_bar = <LocationSidebar closeSidebar={this.closeSideBar} location={this.state.clicked_user} resolve={this.showConfirmResolveEmergency} />\r\n    }\r\n    else{\r\n      show_location_side_bar = \"\";\r\n    }\r\n\r\n    let show_side_bar;\r\n    \r\n    if(this.state.side_bar_open){\r\n      show_side_bar = <Sidebar closeSidebar={this.closeSideBar} emergency={this.state.clicked_user} startMonitoring={this.startMonitoring} resolve={this.showConfirmResolveEmergency} />\r\n    }\r\n    else{\r\n      show_side_bar = \"\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"laser-parent-div\" style={mapStyle}>\r\n            <Latest latest={this.state.latest} latestClicked={this.latestClicked}/>\r\n            {show_location_side_bar}\r\n            {show_side_bar}\r\n            {this.state.agent_side_bar_open ? <AgentDetails removeAgentFromRoute={this.removeAgentFromRoute} closeAgentSideBar={this.closeAgentSideBar} addAgentToMonitoring={this.addAgentToMonitoring} agent={this.state.clicked_agent} user={this.state.clicked_user}/> : \"\" }\r\n\r\n            <TopPanel logout={this.logout} onCalendarOpen={this.onCalendarOpen} onDateChange={this.onDateChange} date={this.state.date} selected_call={this.state.selected_call} \r\n            onCallsChanged={this.onCallsChanged} selected_emergency={this.state.selected_emergency} onEmergenciesChanged={this.onEmergenciesChanged} getAllAgentsLocation={this.getAllAgentsLocation}/>\r\n\r\n            {sound}\r\n            <Map google={this.props.google} \r\n                style={mapStyle}\r\n                onReady={this.fetchPlaces}\r\n                initialCenter={this.state.center}\r\n                center={this.state.center}\r\n                zoom={this.state.zoom}>\r\n        \r\n                {this.getLocationsMarkers()}\r\n                {this.getEmergenciesMarkers()}\r\n                {this.getAgentMarkers()}\r\n\r\n            </Map>\r\n\r\n            <Action action={this.state.action} closeAction={this.closeAction} message={this.state.action_message}/>\r\n\r\n            {\r\n                this.state.route_responses_from_agents.length > 0 ?  <RouteStatus route_response={this.state.route_responses_from_agents[this.state.route_responses_from_agents.length - 1]} removeAgentFromRouteAndCloseRouteResponse={this.removeAgentFromRouteAndCloseRouteResponse} closeRouteResponse={this.closeRouteResponse} /> : \"\"\r\n            }\r\n\r\n            {\r\n                this.state.showConfirm.status===true ? <ConfirmAction  yesClicked={this.state.showConfirm.action===\"emergency\" ? this.resolveEmergency : this.resolveCall} noClicked={this.hideConfirm} message={this.state.message} /> : \"\"\r\n            }\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: ('AIzaSyADNxHcgsHDyx_OSbqxBg5xB5lV2YJDcKI')\r\n})(App)\r\n","import React, {Component} from \"react\";\r\n\r\nimport Utils from '../../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nexport default function Agent(props){\r\n    return <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-7 col-sm-7\">\r\n                        <h4>{props.agent.firstname} {props.agent.lastname}</h4>\r\n                        <h5>{utils.getDate(props.agent.created)}</h5>\r\n                    </div>\r\n                    <div className=\"col-md-5 col-sm-5\">\r\n                        <h4>{props.agent.phone_number}</h4>\r\n                        <h4>{props.agent.department}</h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-offset-6 col-md-6 col-sm-offset-6 col-sm-6\">\r\n                        <button onClick={props.deleteClicked(props.agent)} className=\"laserbtn laset-red-bg laser-inline\">delete</button>\r\n                        <button onClick={props.editClicked(props.agent)} className=\"laserbtn laset-blue-bg laser-inline\">edit</button>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n} ","import React from 'react';\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nimport BarLoader from 'react-spinners/BarLoader';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst override = {\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    border: \"0px solid #000000\"\r\n}\r\n\r\nexport default function Loader(props){\r\n    return  <div>\r\n                <ReactModal \r\n                    isOpen={props.isLoading}\r\n                    className=\"LoadingModal\"\r\n                    overlayClassName=\"LoadingOverlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n\r\n                    <BarLoader\r\n                        css={override}\r\n                        sizeUnit={\"px\"}\r\n                        size={80}\r\n                        color={'#2E86C1'}\r\n                        loading={props.isLoading}\r\n                    />\r\n\r\n                </ReactModal>\r\n            </div>\r\n}","import React, {Component} from \"react\";\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nimport Loader from '../../components/Loader';\r\nimport Action from '../Action';\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst btn_style_left = {\r\n    marginRight: \"8px\"\r\n}\r\n\r\nconst btn_style_right = {\r\n    marginLeft: \"8px\",\r\n    marginRight: \"16px\"\r\n}\r\n\r\nconst controls_style = {\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class Agents extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            phone_number: \"\",\r\n            department: \"\",\r\n            password: \"\",\r\n            password_again: \"\",\r\n            error: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.submitClicked = this.submitClicked.bind(this);\r\n        this.onFieldChanged = this.onFieldChanged.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async submitClicked(e){\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            error: \"\"\r\n        })\r\n\r\n        if(this.state.firstname.length<=0 || this.state.lastname.length<=0){\r\n            this.setState({\r\n                error: \"Please enter a valid first and last name\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.phone_number.length < 11){\r\n            this.setState({\r\n                error: \"Please enter a valid phone number\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.department.length < 0){\r\n            this.setState({\r\n                error: \"Please enter a valid department\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.password.length < 8 || this.state.password_again.length < 8){\r\n            this.setState({\r\n                error: \"Please enter a valid password with 8 characters or more\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.password !== this.state.password_again){\r\n            this.setState({\r\n                error: \"Passwords dont match\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        console.log(this.state)\r\n\r\n        /*this.showLoading();\r\n\r\n        const response = await(API.createAgent());\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n\r\n            this.setState({\r\n                error: \"An error occurred login you in. Please try again later.\"\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if(response && response.data){\r\n            this.props.login();\r\n            this.props.history.push('/')\r\n        }*/\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.departments.length > 0){\r\n            this.setState(state => {\r\n                return { \r\n                    department: this.props.departments[0]\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onFieldChanged(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"Modal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center blue-text\">Add Agent</h4>\r\n                    <br/>\r\n                    <h5 className=\"laser-red-text\">{ this.state.error ? this.state.error : \"\" }</h5>\r\n                    <br/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"category\"><h5>First Name</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"firstname\" type=\"text\" name=\"firstname\" onChange={this.onFieldChanged} value={this.state.firstname} className=\"form-control bt-login-input\" placeholder=\"First Name\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"category\"><h5>Last Name</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"lastname\" type=\"text\" name=\"lastname\" onChange={this.onFieldChanged} value={this.state.lastname} className=\"form-control bt-login-input\" placeholder=\"Last Name\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Phone Number</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"phone_number\" type=\"phone\" name=\"phone_number\" onChange={this.onFieldChanged} value={this.state.phone_number} className=\"form-control bt-login-input\" placeholder=\"Phone Number\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Department</h5></label>\r\n                            <select style={controls_style} className=\"form-control\" id=\"department\" name=\"department\" value={this.state.department} onChange={this.onFieldChanged}>\r\n                                {\r\n                                    this.props.departments.map(dep => {\r\n                                        return <option>{dep}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Password</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"password\" type=\"password\" name=\"password\" onChange={this.onFieldChanged} value={this.state.password} className=\"form-control bt-login-input\" placeholder=\"Password\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Password Again</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"password_again\" type=\"password\" name=\"password_again\" onChange={this.onFieldChanged} value={this.state.password_again} className=\"form-control bt-login-input\" placeholder=\"Password Again\"/>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <button className=\"laser-inline laser-blue-bg laserbtn\" style={btn_style_left} onClick={e => this.submitClicked(e)}>create</button>\r\n                    <button className=\"laser-inline grey-bg laserbtn laser-black-text\" style={btn_style_right} onClick={this.props.closeModal}>cancel</button>\r\n\r\n                </ReactModal>\r\n\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\n\r\nimport Agent from \"./Agent\"\r\nimport { Link } from 'react-router-dom'\r\nimport AddAgent from \"./AddAgent\"\r\nimport EditAgent from \"./EditAgent\"\r\nimport ConfirmAction from '../ConfirmAction';\r\nimport Loader from '../../components/Loader';\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nconst controls_style = {\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class Agents extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            agents: [],\r\n            departments: [],\r\n            agents_filter: [],\r\n            selected_department: \"\",\r\n            selected_agent: {},\r\n            showConfirm: false,\r\n            showAddAgent: false,\r\n            showDeleteAgent: false,\r\n            showEditAgent: false,\r\n            confirmMessage: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.getAgents = this.getAgents.bind(this);\r\n        this.getAgentsDepartment = this.getAgentsDepartment.bind(this);\r\n        this.getDepartments = this.getDepartments.bind(this);\r\n        this.deleteAgent = this.deleteAgent.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.showDeleteAgent = this.showDeleteAgent.bind(this);\r\n        this.showAddAgent = this.showAddAgent.bind(this);\r\n        this.showEditAgent = this.showEditAgent.bind(this);\r\n        this.onDepartmentChanged = this.onDepartmentChanged.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async getAgents(){\r\n        this.showLoading();\r\n\r\n        const response = await(API.getAgents());\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState({\r\n                agents: response.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async getAgentsDepartment(filter){\r\n        this.showLoading();\r\n\r\n        const response = await(API.getAgentsDepartment(filter));\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState({\r\n                agents: response.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async getDepartments(){\r\n        this.showLoading();\r\n\r\n        const response = await(API.getDepartments());\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState(state => {\r\n                var deps = [\"All\"];\r\n\r\n                response.data.map(dep => {\r\n                    deps.push(dep.name);\r\n                })\r\n                \r\n                return {\r\n                    departments: deps\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    async deleteAgent(agent){\r\n        this.showLoading();\r\n\r\n        const response = await(API.deleteAgent(agent._id));\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState(state => {\r\n                var agents = this.state.agents;\r\n\r\n                agents.splice(this.agents.indexOf(agent),1);\r\n\r\n                return {\r\n                    agents: agents\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({\r\n            showConfirm: false,\r\n            showAddAgent: false,\r\n            showDeleteAgent: false,\r\n            showEditAgent: false\r\n        })\r\n    }\r\n\r\n    showDeleteAgent(agent){\r\n        this.setState({\r\n            selected_agent: agent,\r\n            showConfirm: true,\r\n            confirmMessage: \"Are you sure you want to delete agent \" +agent.firstname +\"'s profile? This cant be undone.\"\r\n        })\r\n    }\r\n\r\n    showAddAgent(){\r\n        this.setState({\r\n            showAddAgent:  true\r\n        })\r\n    }\r\n\r\n    showEditAgent(agent){\r\n        this.setState({\r\n            showEditAgent:  true,\r\n            selected_agent: agent\r\n        })\r\n    }\r\n\r\n    onDepartmentChanged(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n        this.setState({\r\n            selected_department: value\r\n        })\r\n\r\n        if(value===\"All\"){\r\n            this.getAgents();\r\n        }\r\n        else{\r\n            this.getAgentsDepartment(value);\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAgents();\r\n        this.getDepartments();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-parent-div\">\r\n                <div className=\"laser-top-panel\">\r\n                    <h4 className=\"laser-inline\">Laser Emergency Admin - Agents</h4>\r\n                    <div className=\"laser-controls\">\r\n                        <Link style={controls_style} to={'/'} className=\"nav-link white-text link laser-inline laser-150-width\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">View Map</button>\r\n                        </Link>\r\n\r\n                        <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"filter\" name=\"filter\" value={this.state.selected_department} onChange={this.onDepartmentChanged}>\r\n                            {\r\n                                this.state.departments.map(dep => {\r\n                                    return <option>{dep}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                        <button onClick={this.showAddAgent} style={controls_style} className=\"laser-inline laser-100-width laserbtn laser-white_border-blue-bg\">Add Agent</button>\r\n                        <Link style={controls_style} to={'/departments'} className=\"nav-link white-text link\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">Departments</button>\r\n                        </Link>\r\n                        <button onClick={e => this.props.logout(e)} className=\"form-control laser-inline laser-100-width laser-grey-bg laserbtn pull-right\">logout</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"container\">\r\n                        \r\n                    </div>\r\n                </div>\r\n                <Loader isLoading={this.state.isLoading}/>\r\n                \r\n                {\r\n                    this.state.showAddAgent ? <AddAgent closeModal={this.closeModal} departments={this.state.departments} /> : \"\"\r\n                }\r\n\r\n                {\r\n                    this.state.showDeleteAgent===true ? <ConfirmAction  yesClicked={this.deleteAgent} noClicked={this.closeModal} message={this.state.confirmMessage} /> : \"\"\r\n                }\r\n            </div>   \r\n        );\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\n\r\nimport Utils from '../../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nconst marginLeft = {\r\n    marginLeft: \"16px\"\r\n}\r\n\r\nexport default function Department(props){\r\n    return  <div className=\"col-md-4 col-sm-4\">\r\n                <div className=\"laser-item shadow\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-7 col-sm-7\">\r\n                            <h4 className=\"laser-black-text\">{props.department.name}</h4>\r\n                        </div>\r\n                        <div className=\"col-md-5 col-sm-5\">\r\n                            <h5>{utils.getDate(props.department.created)}</h5>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-offset-6 col-md-6 col-sm-offset-6 col-sm-6\">\r\n                            <button onClick={e => props.deleteClicked(e, props.department)} className=\"laserbtn laser-red-bg laser-inline\">delete</button>\r\n                            <button style={marginLeft} onClick={e => props.editClicked(e, props.department)} className=\"laserbtn laser-blue-bg laser-inline\">edit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n} ","import React, {Component} from \"react\";\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nimport Loader from '../../components/Loader';\r\nimport Action from '../Action';\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst btn_style_left = {\r\n    marginLeft: \"16px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nconst btn_style_right = {\r\n    marginLeft: \"8px\",\r\n    marginRight: \"16px\"\r\n}\r\n\r\nexport default class AddDepartment extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            action: \"loading\",\r\n            action_message: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n        this.onFieldChanged = this.onFieldChanged.bind(this);\r\n        this.saveDepartment = this.saveDepartment.bind(this)\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async saveDepartment(){\r\n        if(this.state.name.length > 0){\r\n            const response = await API.createDepartment(this.state.name)\r\n        \r\n            if(response==\"error\"){\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"An error occurred creating department, Please try again later\"\r\n                })\r\n\r\n                return;\r\n            }\r\n\r\n            if(response&&response.data){\r\n                this.props.closeModal();\r\n                this.props.getDepartments();\r\n            }\r\n            else{\r\n                this.setState({\r\n                    action: \"close\"\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onFieldChanged(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"ConfirmModal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center blue-text\">Add Department</h4>\r\n                    <label className=\"laser-white-text\" htmlFor=\"category\"><h5>Department Name</h5></label>\r\n                    <input required autoComplete=\"off\" id=\"name\" type=\"text\" name=\"name\" onChange={this.onFieldChanged} value={this.state.name} className=\"form-control bt-login-input\" placeholder=\"Department Name\"/>\r\n                    <br/>\r\n                    <button className=\"laser-inline laser-blue-bg laserbtn\" style={btn_style_left} onClick={this.saveDepartment}>save</button>\r\n                    <button className=\"laser-inline grey-bg laserbtn\" style={btn_style_right} onClick={this.props.closeModal}>cancel</button>\r\n                </ReactModal>\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../../components/Loader';\r\nimport Department from './Department'\r\nimport ConfirmAction from '../ConfirmAction';\r\nimport AddDepartment from './AddDepartment'\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nconst controls_style = {\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class Departments extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            departments: [],\r\n            selected_department: {},\r\n            showConfirm: false,\r\n            showAddDepartment: false,\r\n            showDeleteDepartment: false,\r\n            showEditDepartment: false,\r\n            confirmMessage: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.getDepartments = this.getDepartments.bind(this);\r\n        this.deleteDepartment = this.deleteDepartment.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.showDeleteDepartment = this.showDeleteDepartment.bind(this);\r\n        this.showAddDepartment = this.showAddDepartment.bind(this);\r\n        this.showEditDepartment = this.showEditDepartment.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async getDepartments(){\r\n        this.showLoading();\r\n\r\n        const response = await(API.getDepartments());\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState({\r\n                departments: response.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async deleteDepartment(){\r\n        this.showLoading();\r\n        \r\n        const response = await(API.deleteDepartment(this.state.selected_department._id));\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data){\r\n            this.closeModal();\r\n            this.setState(state => {\r\n                var departments = state.departments;\r\n\r\n                departments.splice(departments.indexOf(state.selected_department),1);\r\n\r\n                return {\r\n                    departments: departments,\r\n                    selected_department: {}\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    showDeleteDepartment(e, department){\r\n        this.setState({\r\n            selected_department: department,\r\n            showDeleteDepartment: true,\r\n            confirmMessage: \"Are you sure you want to delete the selected department?\"\r\n        })\r\n        e.preventDefault();\r\n    }\r\n\r\n    showAddDepartment(){\r\n        this.setState({\r\n            showAddDepartment:  true\r\n        })\r\n    }\r\n\r\n    showEditDepartment(e, department){\r\n        this.setState({\r\n            showEditDepartment:  true,\r\n            selected_department: department\r\n        })\r\n        e.preventDefault();\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({\r\n            showConfirm: false,\r\n            showAddDepartment: false,\r\n            showDeleteDepartment: false,\r\n            showEditDepartment: false\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getDepartments();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-parent-div\">\r\n                <div className=\"laser-top-panel\">\r\n                    <h4 className=\"laser-inline\">Laser Emergency Admin - Departments</h4>\r\n                    <div className=\"laser-controls\">\r\n                        <Link style={controls_style} to={'/'} className=\"nav-link white-text link laser-inline laser-150-width\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">View Map</button>\r\n                        </Link>\r\n\r\n                        <Link style={controls_style} to={'/agents'} className=\"nav-link white-text link\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">Agents</button>\r\n                        </Link>\r\n                        <Link style={controls_style} to={'/departments'} className=\"nav-link white-text link\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">Departments</button>\r\n                        </Link>\r\n                        <button style={controls_style} onClick={this.showAddDepartment} className=\"laser-inline laser-150-width laserbtn laser-white_border-blue-bg\">Add Department</button>\r\n                        <button onClick={e => this.props.logout(e)} className=\"form-control laser-inline laser-100-width laser-grey-bg laserbtn pull-right\">logout</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"container\">\r\n                        <br/>\r\n                        {\r\n                            this.state.departments.map(department => {\r\n                                return <Department key={department._id} department={department} deleteClicked={this.showDeleteDepartment} editClicked={this.showEditDepartment} />\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.showAddDepartment ? <AddDepartment getDepartments={this.getDepartments} closeModal={this.closeModal}/> : \"\"\r\n                }\r\n                {\r\n                    this.state.showDeleteDepartment===true ? <ConfirmAction  yesClicked={this.deleteDepartment} noClicked={this.closeModal} message={this.state.confirmMessage} /> : \"\"\r\n                }\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from 'react'\r\n\r\nimport Loader from '../components/Loader';\r\n\r\n//Our Auth Service\r\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nconst zero_margin = {\r\n    marginBottom: \"0px\",\r\n    marginTop: \"0px\"\r\n}\r\n\r\nexport default class Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state= {\r\n            username: \"\",\r\n            password: \"\",\r\n            error: \"\",\r\n            isLoading: false\r\n        }\r\n        \r\n        this.submitClicked = this.submitClicked.bind(this);\r\n        this.onFieldChanged = this.onFieldChanged.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n    \r\n    async submitClicked(e, item){\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            error: \"\"\r\n        })\r\n\r\n        if(this.state.username.length<=0 || this.state.password.length<=0){\r\n            this.setState({\r\n                error: \"Please make sure all fields are completed\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        this.showLoading();\r\n\r\n        const response = await(Auth.login(this.state.username, this.state.password));\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n\r\n            this.setState({\r\n                error: \"An error occurred login you in. Please try again later.\"\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if(response && response.data){\r\n            this.props.login();\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n    onFieldChanged(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-login-bg\">\r\n                <div className=\"laser-login-div laser-shadow\">\r\n                    <h2 className=\"bt-blue-text laser-white-text\" style={zero_margin}>Admin</h2>\r\n                    <h2 className=\"bt-blue-text laser-white-text\" style={zero_margin}>Login</h2>\r\n                    <br/>\r\n                    <br/>\r\n                    <h5 className=\"laser-red-text\">{ this.state.error ? this.state.error : \"\" }</h5>\r\n                    <br/>\r\n                    <label className=\"laser-white-text\" htmlFor=\"category\"><h5>User Name</h5></label>\r\n                    <input required autoComplete=\"off\" id=\"username\" type=\"text\" name=\"username\" onChange={this.onFieldChanged} value={this.state.username} className=\"form-control bt-login-input\" placeholder=\"User Name\"/>\r\n                    <br/>\r\n                    <label className=\"laser-white-text\" htmlFor=\"category\"><h5>Password</h5></label>\r\n                    <input required autoComplete=\"off\" id=\"password\" type=\"password\" name=\"password\" onChange={this.onFieldChanged} value={this.state.password} className=\"form-control bt-login-input\" placeholder=\"Password\"/>\r\n                    <br/>\r\n                    <br/>\r\n                    <button className=\"laser-blue-bg laserbtn\" onClick={this.submitClicked}>CONTINUE</button>    \r\n                </div>\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport Agents from \"./components/agents/Agents\";\r\nimport Departments from \"./components/agents/Departments\";\r\nimport Login from \"./components/Login\"\r\n\r\nimport AuthHelperMethods from './auth/AuthHelperMethods';\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nclass Laser extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            isLogin : false\r\n        }\r\n\r\n        this.logout = this.logout.bind(this);\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    logout = () => {\r\n        Auth.logout();\r\n\r\n        this.setState({\r\n            isLogin: true\r\n        })\r\n    }\r\n\r\n    login = () => {\r\n        this.setState({\r\n            isLogin: false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Route path=\"/\" exact render={(props) => (\r\n                        Auth.loggedIn() === true\r\n                            ? <App {...props} logout={this.logout}/>\r\n                            : <Redirect to='/login' login={this.login} />\r\n                        )} />\r\n\r\n                    <Route path=\"/agents\" exact render={(props) => (\r\n                        Auth.loggedIn() === true\r\n                            ? <Agents {...props} logout={this.logout}/>\r\n                            : <Redirect to='/login' login={this.login} />\r\n                        )}/>\r\n\r\n                    <Route path=\"/departments\" exact render={(props) => (\r\n                        Auth.loggedIn() === true\r\n                            ? <Departments {...props} logout={this.logout}/>\r\n                            : <Redirect to='/login' login={this.login} />\r\n                        )}/>\r\n\r\n                    <Route path=\"/login\" exact render={(props) => (\r\n                        Auth.loggedIn() === false\r\n                            ? <Login {...props} login={this.login} />\r\n                            : <Redirect to='/' {...props} logout={this.logout} />\r\n                        )} />\r\n                    {\r\n                        this.state.isLogin==true ? <Redirect to='/login' login={this.login} /> : \"\"\r\n                    }\r\n                </Router>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Laser;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Laser from './Laser';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Laser />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}