{"version":3,"sources":["components/Sidebar.js","components/LocationSideBar.js","App.js","Laser.js","serviceWorker.js","index.js","emergency_with_circle.png","call_with_circle.png","emergency.png","call.png","logo.svg"],"names":["Sidebar","props","react_default","a","createElement","className","onClick","e","closeSidebar","emergency","full_name","emergency_numbers","length","map","item","index","key","email","phone_number","device","full_address","sub_admin_address","reasons","getReasons","LocationSidebar","location","reason","mapStyle","height","width","dateStyle","color","border","zIndex","marginLeft","marginRight","padding","controls_style","today","Date","toISOString","instance","axios","create","baseURL","timeout","headers","Accept","App","_this$state","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","locations","emergencies","filtered_locations","filtered_emergencies","side_bar_open","location_side_bar_open","selected_emergency","center","lat","lng","selected_call","defineProperty","closeSideBar","bind","assertThisInitialized","onCallsChanged","onEmergenciesChanged","onDateChange","onCalendarOpen","year","split","setState","d","_this2","console","log","date","show_red_circle","show_blue_circle","post","then","response","data","catch","error","event","target","value","arr","name","emer","includes","toLowerCase","push","selected_location","latitude","longitude","clicked_marker_id","_id","_this3","loc","dist","onLocationClicked","title","position","icon","url","blue_circle","call_icon","_this4","onEmergencyClicked","red_circle","emergency_icon","mapProps","_this5","socket","socketIOClient","on","show_location_side_bar","show_side_bar","style","entry_default","maxDate","onChange","id","google","onReady","fetchPlaces","initialCenter","zoom","getLocationsMarkers","getEmergenciesMarkers","Component","GoogleApiWrapper","apiKey","Laser","react_router_dom","react_router","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","src_Laser","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0f4beaad.chunk.js","sourcesContent":["'use strict'\r\n\r\nimport React, { Component } from 'react';\r\n\r\nexport default function Sidebar(props){\r\n    return <div className=\"laser-side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeSidebar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-red-text\"><b>Emergency Location Details</b></h4> \r\n                <br/>\r\n                <h5><b>Persons Name</b> - {props.emergency.full_name}</h5>\r\n                <br/>\r\n                <h5><b>Person's Emergency Contacts</b> - {(props.emergency.emergency_numbers && props.emergency.emergency_numbers.length>0) ? ParseContacts(props.emergency.emergency_numbers) : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Email Address</b> - {props.emergency.email ? props.emergency.email : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.emergency.phone_number ? props.emergency.phone_number : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Device</b> - {props.emergency.device ? props.emergency.device : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Emergency Full Address</b> - {props.emergency.full_address ? props.emergency.full_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Emergency Admin Address</b> - {props.emergency.sub_admin_address ? props.emergency.sub_admin_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Reason For Emergency</b> - {props.emergency.reasons ? getReasons(props.emergency.reasons) : \"\"}</h5>\r\n           </div>\r\n}\r\n\r\nfunction ParseContacts(arr){\r\n    return arr.map((item,index) => {\r\n        return <p key={index}>{item}</p>\r\n    })\r\n}\r\n\r\nfunction getReasons(reasons){\r\n    switch(reasons.length){\r\n        case 0:\r\n          return \"\";\r\n        break;\r\n        case 1:\r\n          return reasons[0]+\" issue\";\r\n        break;\r\n        case 2:\r\n          return reasons[0] +\" issue, \" +reasons[1] +\" issue\";\r\n        break;\r\n        case 3:\r\n          return reasons[0] +\" issue, \" +reasons[1] +\" issue, \" +reasons[2] +\" issue\";\r\n        break;\r\n    }\r\n}","'use strict'\r\n\r\nimport React, { Component } from 'react';\r\n\r\nexport default function LocationSidebar(props){\r\n    return <div className=\"laser-side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeSidebar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-blue-text\"><b>Call Location Details</b></h4> \r\n                <br/>\r\n                <h5><b>Persons Name</b> - {props.location.full_name}</h5>\r\n                <br/>\r\n                <h5><b>Email Address</b> - {props.location.email ? props.location.email : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.location.phone_number ? props.location.phone_number : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Call Full Address</b> - {props.location.full_address ? props.location.full_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Call Admin Address</b> - {props.location.sub_admin_address ? props.location.sub_admin_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Reason For Call</b> - {props.location.reason ? props.location.reason : \"\"}</h5>\r\n           </div>\r\n}\r\n","import React, {Component} from 'react';\r\nimport logo from './logo.svg';\r\nimport red_circle from './emergency_with_circle.png'\r\nimport blue_circle from './call_with_circle.png'\r\nimport emergency_icon from './emergency.png'\r\nimport call_icon from './call.png'\r\nimport {Map, InfoWindow, Marker, GoogleApiWrapper, Circle} from 'google-maps-react';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport Sidebar from './components/Sidebar';\r\nimport LocationSidebar from './components/LocationSideBar';\r\n\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport './App.css';\r\n\r\nimport axios from 'axios';\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nconst mapStyle = {\r\n  height: '100vh', \r\n  width: '100%'\r\n}\r\n\r\nconst dateStyle = {\r\n   color: \"#111111\",\r\n   border: \"1px solid #FFFFFF\",\r\n   zIndex: \"6000\",\r\n   marginLeft:\"8px\",\r\n   marginRight: \"8px\",\r\n   padding: \"8px\"\r\n}\r\n\r\nconst controls_style = {\r\n  marginLeft:\"8px\",\r\n  marginRight: \"8px\"\r\n}\r\n\r\nconst socket_io_url = 'http://18.195.71.164';\r\n\r\nlet today = new Date().toISOString();\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'http://18.195.71.164',\r\n  timeout: 15000,\r\n  headers: {'Accept': 'application/json;q=0.9,*/*;q=0.8'}\r\n});\r\n\r\nconst locations_url = \"/api/getLocations\";\r\nconst emergencies_url = \"/api/getEmergencies\";\r\n\r\nclass App extends Component{\r\n\r\n  constructor(props){\r\n     super(props);\r\n\r\n     this.state = {\r\n      locations: [], \r\n      emergencies: [], \r\n      filtered_locations: [],\r\n      filtered_emergencies: [],\r\n      side_bar_open: false, \r\n      location_side_bar_open: false, \r\n      selected_emergency: {}, \r\n      center: {lat: 6.5244,lng: 3.3792}, \r\n      selected_call:\"Calls (All)\", \r\n      selected_emergency:\"Emergencies (All)\",\r\n\r\n      show_red_circle: false,\r\n      show_blue_circle: false,\r\n      clicked_marker_id: \"\",\r\n\r\n      date: new Date()\r\n     }\r\n     \r\n     this.closeSideBar = this.closeSideBar.bind(this);\r\n     this.onCallsChanged = this.onCallsChanged.bind(this);\r\n     this.onEmergenciesChanged = this.onEmergenciesChanged.bind(this);\r\n     this.onDateChange = this.onDateChange.bind(this);\r\n     this.onCalendarOpen = this.onCalendarOpen.bind(this);\r\n\r\n     var year = today.split(/T(.+)/)[0];\r\n\r\n     year = year+\"T00:00:00.000Z\";\r\n\r\n     today = new Date(year);\r\n  }\r\n\r\n  onCalendarOpen(){\r\n      this.setState({\r\n        side_bar_open: false, \r\n        location_side_bar_open: false\r\n      })\r\n  }\r\n\r\n  onDateChange(d){\r\n     console.log({d});\r\n     this.setState({\r\n        date: d,\r\n        show_red_circle: false,\r\n        show_blue_circle: false,\r\n     })\r\n\r\n     instance.post(locations_url,{date:d})\r\n        .then(response => {\r\n          console.log(response);\r\n            if(response&&response.data&&response.data.locations){\r\n              this.setState({\r\n                locations: response.data.locations,\r\n                filtered_locations: response.data.locations\r\n              })\r\n            }\r\n            else{\r\n              this.setState({\r\n                locations: [],\r\n                filtered_locations: []\r\n              })\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log({error})\r\n        })\r\n\r\n    instance.post(emergencies_url,{date:d})\r\n        .then(response => {\r\n          console.log(response);\r\n            if(response&&response.data&&response.data.emergencies){\r\n               this.setState({\r\n                  emergencies: response.data.emergencies,\r\n                  filtered_emergencies: response.data.emergencies\r\n               })\r\n            }\r\n            else{\r\n              this.setState({\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n             })\r\n            }\r\n        })\r\n        .catch(error => {\r\n          console.log({error})\r\n        })\r\n\r\n  }\r\n\r\n  onCallsChanged(event){\r\n      const target = event.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n\r\n      let arr = [];\r\n      if(this.state.locations.length>0){\r\n          if(value===\"Calls (All)\"){\r\n            this.setState(state => ({\r\n              filtered_locations: state.locations,\r\n              side_bar_open: false, \r\n              location_side_bar_open: false,\r\n              show_blue_circle: false\r\n            }))\r\n          }\r\n          else if(value===\"None\"){\r\n            this.setState({\r\n              filtered_locations: [],\r\n              side_bar_open: false, \r\n              location_side_bar_open: false,\r\n              show_blue_circle: false\r\n            })\r\n          }\r\n          else{\r\n            this.state.locations.map(emer => {\r\n              if(emer.reason.includes(value.toLowerCase())){\r\n                arr.push(emer)\r\n              }\r\n            })\r\n            \r\n            if(arr.length>0){\r\n              this.setState({\r\n                filtered_locations: arr,\r\n                side_bar_open: false, \r\n                location_side_bar_open: false,\r\n                show_blue_circle: false\r\n              })\r\n            }\r\n            else{\r\n              //show message that there are no locations found for that parameter\r\n      \r\n              this.setState({\r\n                  filtered_locations:[],\r\n                  selected_call:\"Calls (All)\",\r\n                  side_bar_open: false, \r\n                  location_side_bar_open: false,\r\n                  show_blue_circle: false\r\n              })\r\n            }\r\n          }\r\n      }\r\n  }\r\n\r\n  onEmergenciesChanged(event){\r\n      const target = event.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n\r\n      let arr = [];\r\n      if(this.state.emergencies.length>0){\r\n          if(value===\"Emergencies (All)\"){\r\n            this.setState(state => ({\r\n              filtered_emergencies: state.emergencies,\r\n              side_bar_open: false, \r\n              location_side_bar_open: false,\r\n              show_red_circle: false\r\n            }))\r\n          }\r\n          else if(value===\"None\"){\r\n            this.setState({\r\n              filtered_emergencies:[],\r\n              side_bar_open: false, \r\n              location_side_bar_open: false,\r\n              show_red_circle: false\r\n            })\r\n          }\r\n          else{\r\n            this.state.emergencies.map(emer => {\r\n              if(emer.reasons&&emer.reasons.length>0){\r\n                emer.reasons.map(reason => {\r\n                    if(value.toLowerCase().includes(reason)){\r\n                        arr.push(emer)\r\n                    }\r\n                })\r\n              }\r\n            })\r\n      \r\n            if(arr.length>0){\r\n              this.setState({\r\n                filtered_emergencies:arr,\r\n                side_bar_open: false, \r\n                location_side_bar_open: false,\r\n                show_red_circle: false\r\n              })\r\n            }\r\n            else{\r\n              //show message that there are no emregencies found for that parameter\r\n      \r\n              this.setState({\r\n                  filtered_emergencies: [],\r\n                  selected_emergency:\"Emergencies (All)\",\r\n                  side_bar_open: false, \r\n                  location_side_bar_open: false,\r\n                  show_red_circle: false\r\n              })\r\n            }\r\n          }\r\n      }    \r\n  }\r\n\r\n  onLocationClicked(location,e){\r\n    this.setState({\r\n      selected_location: location,\r\n      side_bar_open: false,\r\n      location_side_bar_open: true,\r\n      center: {\r\n         lat: location.latitude,\r\n         lng: location.longitude\r\n      },\r\n      show_red_circle: false,\r\n      show_blue_circle: true,\r\n      clicked_marker_id: location._id\r\n   })\r\n  }\r\n\r\n  onEmergencyClicked(emergency,e){\r\n    this.setState({\r\n       selected_emergency: emergency,\r\n       side_bar_open: true,\r\n       location_side_bar_open: false,\r\n       center: {\r\n          lat: emergency.latitude,\r\n          lng: emergency.longitude\r\n       },\r\n       show_red_circle: true,\r\n       show_blue_circle: false,\r\n       clicked_marker_id: emergency._id\r\n    })\r\n }\r\n\r\n  getLocationsMarkers(){\r\n    let locations_ui;\r\n\r\n    if(this.state.filtered_locations.length>0){\r\n      locations_ui = this.state.filtered_locations.map(loc => {\r\n        return  <Marker key={loc._id} onClick={e => this.onLocationClicked(loc,e)}\r\n                  name={loc.reason} \r\n                  title={loc.full_name}\r\n                  position={{lat: loc.latitude, lng: loc.longitude}}\r\n                  icon={{\r\n                    url: (this.state.clicked_marker_id==loc._id) ? blue_circle : call_icon\r\n                  }}/> \r\n      })\r\n    }\r\n    else{\r\n      locations_ui = \"\";\r\n    }\r\n     \r\n    return locations_ui;\r\n  }\r\n\r\n  getEmergenciesMarkers(){\r\n    let emergencies_ui;\r\n\r\n    if(this.state.filtered_emergencies.length>0){\r\n        emergencies_ui = this.state.filtered_emergencies.map(emer => {\r\n          return <Marker key={emer._id} onClick={e => this.onEmergencyClicked(emer,e)}\r\n                    name={emer.reasons[0]} \r\n                    title={emer.full_name}\r\n                    position={{lat: emer.latitude, lng: emer.longitude}}\r\n                    icon={{\r\n                      url: (this.state.clicked_marker_id==emer._id) ? red_circle : emergency_icon\r\n                    }}/>\r\n        })\r\n    }\r\n    else{\r\n        emergencies_ui = \"\";\r\n    }\r\n     \r\n    return emergencies_ui;\r\n\r\n  }\r\n\r\n  closeSideBar(e){\r\n    this.setState({\r\n       side_bar_open: false,\r\n       location_side_bar_open: false,\r\n       selected_location: {},\r\n       selected_emergency: {}\r\n    })\r\n  }\r\n\r\n  fetchPlaces(mapProps, map) {\r\n    \r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    const socket = socketIOClient(socket_io_url);\r\n\r\n    socket.on(\"connect\", \r\n      () => console.log(\"connected to socket io\")\r\n    );\r\n    //Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\r\n    socket.on(\"emergency\", \r\n      data => {\r\n         if(data){\r\n             this.setState(state => {\r\n              let arr = state.emergencies;\r\n\r\n              arr.push(data)\r\n\r\n              return {\r\n                  emergencies: arr\r\n              }\r\n            })\r\n         }\r\n      }\r\n    );\r\n\r\n    socket.on(\"call\", \r\n      data => {\r\n        if(data){\r\n            this.setState(state => {\r\n              let arr = state.locations;\r\n\r\n              arr.push(data)\r\n\r\n              return {\r\n                  locations: arr\r\n              }\r\n          })\r\n        }\r\n      }\r\n    );\r\n\r\n    instance.post(locations_url,{date: today})\r\n        .then(response => {\r\n            if(response&&response.data&&response.data.locations){\r\n              this.setState({\r\n                locations: response.data.locations,\r\n                filtered_locations: response.data.locations\r\n              })\r\n            }\r\n            else{\r\n              this.setState({\r\n                locations: [],\r\n                filtered_locations: []\r\n              })\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log({error})\r\n        })\r\n\r\n    instance.post(emergencies_url,{date: today})\r\n        .then(response => {\r\n            if(response&&response.data&&response.data.emergencies){\r\n               this.setState({\r\n                  emergencies: response.data.emergencies,\r\n                  filtered_emergencies: response.data.emergencies\r\n               })\r\n            }\r\n            else{\r\n              this.setState({\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n             })\r\n            }\r\n        })\r\n        .catch(error => {\r\n          console.log({error})\r\n        })\r\n  }\r\n\r\n  render(){\r\n\r\n    let show_location_side_bar;\r\n    \r\n    if(this.state.location_side_bar_open){\r\n      show_location_side_bar = <LocationSidebar closeSidebar={this.closeSideBar} location={this.state.selected_location}/>\r\n    }\r\n    else{\r\n      show_location_side_bar = \"\";\r\n    }\r\n\r\n    let show_side_bar;\r\n    \r\n    if(this.state.side_bar_open){\r\n      show_side_bar = <Sidebar closeSidebar={this.closeSideBar} emergency={this.state.selected_emergency}/>\r\n    }\r\n    else{\r\n      show_side_bar = \"\";\r\n    }\r\n\r\n    return (\r\n      <div style={mapStyle}>\r\n          {show_location_side_bar}\r\n          {show_side_bar}\r\n          <div className=\"laser-top-panel\">\r\n             <h4 className=\"laser-inline\">Laser Emergency Admin Platform</h4>\r\n             <div className=\"laser-controls laser-inline\">\r\n                \r\n                <div className=\"laser-inline\" style={dateStyle}>\r\n                  <DatePicker\r\n                    onCalendarOpen={this.onCalendarOpen}\r\n                    maxDate={new Date()}\r\n                    style={dateStyle}\r\n                    onChange={this.onDateChange}\r\n                    value={this.state.date}/>\r\n                </div>  \r\n\r\n                <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"calls\" name=\"calls\" value={this.selected_call} onChange={this.onCallsChanged}>\r\n                    <option>Calls (All)</option>\r\n                    <option>Emergency Management(LASEMA)</option>\r\n                    <option>Police</option>\r\n                    <option>Distress</option>\r\n                    <option>Environmental and Special Offences Task Force</option>\r\n                    <option>Fire / Safety Services</option>\r\n                    <option>Environmental / Noise Pollution</option>\r\n                    <option>Broken Pipe / Water Leakage</option>\r\n                    <option>Pothole / Collapsed Road</option>\r\n                    <option>None</option>\r\n                </select>\r\n                \r\n                <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"emergencies\" name=\"emergencies\" value={this.selected_call} onChange={this.onEmergenciesChanged}>\r\n                    <option>Emergencies (All)</option>\r\n                    <option>Police Cases</option>\r\n                    <option>Hospital Cases</option>\r\n                    <option>Fire Cases</option>\r\n                    <option>None</option>\r\n                </select>\r\n                \r\n             </div>\r\n          </div>\r\n          <Map google={this.props.google} \r\n              style={mapStyle}\r\n              onReady={this.fetchPlaces}\r\n              initialCenter={this.state.center}\r\n              center={this.state.center}\r\n              zoom={11}>\r\n    \r\n            {this.getLocationsMarkers()}\r\n            {this.getEmergenciesMarkers()}\r\n\r\n          </Map>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: ('AIzaSyADNxHcgsHDyx_OSbqxBg5xB5lV2YJDcKI')\r\n})(App)\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nfunction Laser(){\r\n    return (\r\n        <Router>\r\n            <Route path=\"/\" exact component={App} />\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Laser;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Laser from './Laser';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Laser />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/emergency_with_circle.d3c347cf.png\";","module.exports = __webpack_public_path__ + \"static/media/call_with_circle.be8584e2.png\";","module.exports = __webpack_public_path__ + \"static/media/emergency.5372e70f.png\";","module.exports = __webpack_public_path__ + \"static/media/call.8f7505e8.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}