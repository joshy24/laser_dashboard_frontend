{"version":3,"sources":["icons/emergency_with_circle.gif","icons/call_with_circle.gif","icons/emergency.gif","icons/call.gif","sounds/alert.mp3","icons/phone_white.png","logo.svg","icons/car_test.png","icons/burger_menu.png","utils/Utils.js","auth/AuthHelperMethods.js","components/Sidebar.js","components/Text.js","components/Action.js","components/AgentDetails.js","components/LocationSideBar.js","components/AddCallManually.js","components/ConfirmAddressNotFound.js","components/TopPanel.js","components/LatestItem.js","components/Latest.js","components/RouteStatus.js","components/ConfirmAction.js","utils/Persistence.js","api/Api.js","App.js","components/agents/Agent.js","components/Loader.js","components/agents/AddAgent.js","components/agents/Agents.js","components/agents/Admin.js","components/agents/AddAdmin.js","components/agents/EditAdmin.js","components/agents/Admins.js","components/agents/Department.js","components/agents/AddDepartment.js","components/agents/Departments.js","components/Login.js","Laser.js","serviceWorker.js","index.js","icons/police_car.png","icons/police_car_yellow.png","icons/fire_truck.png","icons/fire_truck_yellow.png","icons/ambulance.png","icons/ambulance_yellow.png"],"names":["module","exports","__webpack_require__","p","Util","str","moment","utc","format","arr","sort","a","b","Date","created","AuthHelperMethods","login","username","password","_this","axios","then","res","setToken","data","token","setPriviledge","priviledge","catch","err","loggedIn","getToken","isTokenExpired","decode","exp","now","console","log","idToken","localStorage","setItem","getItem","logout","removeItem","getConfirm","answer","getPriviledge","url","headers","Accept","Content-Type","method","baseURL","timeout","_checkStatus","response","status","error","Error","statusText","utils","Utils","Auth","Sidebar","props","react_default","createElement","className","onClick","e","closeSidebar","startMonitoring","emergency","resolve","is_trackable","getTime","full_name","emergency_numbers","length","map","item","index","key","email","phone_number","device","full_address","sub_admin_address","reasons","getReasons","style","width","Text","closeAction","text","Action","action","message","getText","background","border","color","padding","borderRadius","style_remove_btn","AgentDetails","closeAgentSideBar","agent","firstname","lastname","department","is_on_route","removeAgentFromRoute","user","addAgentToMonitoring","LocationSidebar","location","reason","controls_style","marginLeft","marginRight","AddCallManually","htmlFor","required","autoComplete","id","type","name","onChange","onFieldChanged","value","manual_name","placeholder","manual_phone","manual_address","selected_manual_call","onManualCallChanged","selected_manual_gender","onManualGenderChanged","onSubmitManualCallDetails","ReactModal","setAppElement","btn_style_left","btn_style_right","ConfirmAddressNotFound","react_modal_lib_default","isOpen","overlayClassName","contentLabel","continueConfirmAddressNotFoundClicked","tryAgainClicked","closeConfirmAddressNotFoundClicked","dateStyle","zIndex","TopPanel","this","openManualLocation","src","phone_white","height","getAllAgentsLocation","entry_default","onCalendarOpen","maxDate","onDateChange","date","selected_call","onCallsChanged","selected_emergency","onEmergenciesChanged","Component","LatestItem","itemClicked","getColor","laser_type","textAlign","styling","Latest","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","preventDefault","latestClicked","_this2","react_scroll_to_bottom_lib_default","latest","_id","box_style","margin","float","OrderStatus","closeRouteResponse","route_response","removeAgentFromRouteAndCloseRouteResponse","ConfirmAction","yesClicked","noClicked","Persistence","selected_agents","JSON","stringify","parse","tracked_users","Axios","getLocations","getEmergencies","createAgent","getDepartments","createAdmin","persistence","mapStyle","todays_date","toISOString","today","App","showConfirm","locations","emergencies","filtered_locations","filtered_emergencies","side_bar_open","agent_side_bar_open","location_side_bar_open","manual_location_side_bar","clicked_user","clicked_agent","center","lat","lng","zoom","show_red_circle","show_blue_circle","clicked_marker_id","play_sound","channels_list","laser_agents","route_responses_from_agents","action_message","tracked_area","showConfirmManualLocation","pubnub","PubNubReact","publishKey","subscribeKey","init","closeSideBar","onAgentClicked","getAgentIcon","subscribeAndGetAllAgentsLocation","handleSongFinishedPlaying","getLocationsDate","getEmergenciesDate","getLatestEmergencies","getLatestLocations","getSelectedAgentsIds","setSelectedAgentsFromIds","resolveCall","resolveEmergency","hideConfirm","showConfirmResolveEmergency","showConfirmResolveLocation","hideConfirmManualLocation","saveManualLocation","year","split","Geocode","setApiKey","setLanguage","setRegion","enableDebug","setState","publish","channel","sendByPost","storeInHistory","splice","indexOf","saveTrackedUsers","_this3","pn_gcm","notification_body","agents","list","new_selected_agents","age","new_list","found_agent","find","new_found_agent","assign","unsubscribe","channels","saveSelectedAgents","_this4","array","_this5","latitude","longitude","bool","push","subscribe","_this6","setHours","getHours","event","target","emer","includes","toLowerCase","_this7","loc","dist","onLocationClicked","title","position","icon","blue_circle","call_icon","_this8","onEmergencyClicked","red_circle","emergency_icon","_this9","i","anchor","google","maps","Point","scaledSize","Size","bearing","police_car_enroute","police_car","fire_car_enroute","fire_car","ambulance_enroute","ambulance","selected_location","mapProps","ids","found_agent_id","sel","_this10","persisted_agents","getSelectedAgents","persisted_tracked_users","getTrackedUsers","addListener","st","category","tracked_user_id","user_id","la","agen","users","userMetadata","forEach","found_agent_on_route_possibly","socket","socketIOClient","on","attempt","API","self","sortDates","_this11","_this12","checked","defineProperty","_this13","lenght","fromAddress","_response$results$0$g","results","geometry","_this14","_response$results$0$g2","sound","show_location_side_bar","show_side_bar","react_sound_lib_default","alert","playStatus","Sound","PLAYING","playFromPosition","onLoading","handleSongLoading","onPlaying","handleSongPlaying","onFinishedPlaying","Latest_Latest","TopPanel_TopPanel","onReady","fetchPlaces","initialCenter","getLocationsMarkers","getEmergenciesMarkers","getAgentMarkers","GoogleApiWrapper","apiKey","space","Agent","getDate","deleteClicked","editClicked","override","display","Loader","isLoading","BarLoader_default","css","sizeUnit","size","loading","Agents","password_again","submitClicked","showLoading","hideLoading","closeModalGetAgents","departments","dep","closeModal","agents_filter","selected_department","selected_agent","showAddAgent","showDeleteAgent","showEditAgent","confirmMessage","getAgents","getAgentsDepartment","deleteAgent","onDepartmentChanged","filter","deps","react_router_dom","to","class","AddAgent_Agents","Admin","admin","Admins","admins","selected_admin","showAddAdmin","showDeleteAdmin","showEditAdmin","getAdmins","deleteAdmin","closeModalGetAdmins","count","AddAdmin_Agents","Department","AddDepartment","saveDepartment","Departments","showAddDepartment","showDeleteDepartment","showEditDepartment","deleteDepartment","AddDepartment_AddDepartment","zero_margin","marginBottom","marginTop","Login","history","Laser","isLogin","react_router","path","exact","render","src_App_0","Agents_Agents","Admins_Admins","Departments_Departments","Login_Login","Boolean","window","hostname","match","ReactDOM","src_Laser","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01ecf625.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/emergency_with_circle.0153b7ea.gif\";","module.exports = __webpack_public_path__ + \"static/media/call_with_circle.34c87478.gif\";","module.exports = __webpack_public_path__ + \"static/media/emergency.445ccffb.gif\";","module.exports = __webpack_public_path__ + \"static/media/call.37865c67.gif\";","module.exports = __webpack_public_path__ + \"static/media/alert.77e4ae16.mp3\";","module.exports = __webpack_public_path__ + \"static/media/phone_white.23d1feaf.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/car_test.4b63a07a.png\";","module.exports = __webpack_public_path__ + \"static/media/burger_menu.f128647b.png\";","import moment from 'moment';\r\n\r\nexport default class Util{\r\n    getDate(str){\r\n        var date = moment(str);\r\n        var dateComponent = date.utc().format('YYYY - MM - DD');\r\n\r\n        return dateComponent;\r\n    }\r\n\r\n    getTime(str){\r\n        var date = moment(str);\r\n        var timeComponent = date.utc().format('HH:mm:ss');\r\n\r\n        return timeComponent;\r\n    }\r\n\r\n    sortDates(arr){\r\n        arr.sort(function compare(a, b) {\r\n            var dateA = new Date(a.created);\r\n            var dateB = new Date(b.created);\r\n            return dateA - dateB;\r\n        });\r\n          \r\n        return arr;\r\n    }\r\n\r\n}","import axios from 'axios';\r\n\r\nimport decode from 'jwt-decode'\r\n\r\nconst login_url = '/login'\r\n\r\nexport default class AuthHelperMethods{\r\n\r\n    login = (username, password) => {\r\n        return  this.axios(login_url, {username, password})\r\n                    .then(res => {\r\n                        this.setToken(res.data.token);\r\n                        this.setPriviledge(res.data.priviledge);\r\n                        return res;\r\n                    })\r\n                    .catch(err => {\r\n                        return \"error\";\r\n                    })\r\n    }\r\n\r\n    loggedIn = () => {\r\n        // Checks if there is a saved token and it's still valid\r\n        const token = this.getToken(); // Getting token from localstorage\r\n        return !!token && !this.isTokenExpired(token); // handwaiving here\r\n    };\r\n\r\n    isTokenExpired = token => {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.now() / 1000) {\r\n            // Checking if token is expired.\r\n            return true;\r\n            } else return false;\r\n        } catch (err) {\r\n            console.log(\"expired check failed! Line 42: AuthService.js\");\r\n            return false;\r\n        }\r\n    };\r\n\r\n    setToken = idToken => {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem(\"id_token\", idToken);\r\n    };\r\n\r\n    getToken = () => {\r\n        // Retrieves the user token from localStorage\r\n        return localStorage.getItem(\"id_token\");\r\n    };\r\n\r\n    logout = () => {\r\n        // Clear user token and profile data from localStorage\r\n        localStorage.removeItem(\"id_token\");\r\n    };\r\n\r\n    getConfirm = () => {\r\n        // Using jwt-decode npm package to decode the token\r\n        let answer = decode(this.getToken());\r\n        console.log(\"Recieved answer!\");\r\n        return answer;\r\n    };\r\n\r\n    setPriviledge = priviledge => {\r\n        localStorage.setItem(\"priviledge\", priviledge);\r\n    }\r\n\r\n    getPriviledge = () => {\r\n        return localStorage.getItem(\"priviledge\");\r\n    }\r\n    \r\n    axios = (url, data) => {\r\n        // performs api calls sending the required authentication headers\r\n        const headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        };\r\n\r\n        // Setting Authorization header\r\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\r\n        if (this.loggedIn()) {\r\n            headers[\"Authorization\"] = \"Bearer:\" + this.getToken();\r\n        }\r\n\r\n        return axios({\r\n            url:url,\r\n            method: \"post\",\r\n            data: data, \r\n            baseURL: 'http://52.59.255.174/admin',\r\n            //baseURL: 'http://localhost:3077/admin',\r\n            timeout: 30000,\r\n            headers: headers\r\n        })\r\n        .then(this._checkStatus)\r\n        .then(response => response)\r\n        .catch(err => err)\r\n    };\r\n\r\n    _checkStatus = response => {\r\n        // raises an error in case response status is not a success\r\n        if (response.status >= 200 && response.status < 300) {\r\n            // Success status lies between 200 to 300\r\n            return response;\r\n        } else {\r\n            var error = new Error(response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    };\r\n\r\n}","\r\nimport React from 'react';\r\n\r\nimport Utils from '../utils/Utils';\r\n\r\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\r\n\r\nconst utils = new Utils();\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nexport default function Sidebar(props){\r\n    return <div className=\"laser-side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeSidebar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-red-text\"><b>Emergency Location Details</b></h4>\r\n                <br/>\r\n                {\r\n                    (Auth.getPriviledge() === \"full_control\") ? \r\n                    <div>\r\n                        <button className=\"laser-red-bg laserbtn\" onClick={e => props.startMonitoring(e, props.emergency)}>Start Monitoring</button>\r\n                        <br/>\r\n                        <br/>                \r\n                        <button className=\"laser-blue-bg laserbtn\" onClick={e => props.resolve(e)}>Resolve</button>\r\n                    </div> : \"\"\r\n                }\r\n                <br/>\r\n                <h5><b>Trackable</b> - {props.emergency.is_trackable ? \"Yes\" : \"No\" }</h5>\r\n                <br/>\r\n                <h5><b>Time</b> - {utils.getTime(props.emergency.created)}</h5>\r\n                <br/>\r\n                <h5><b>Persons Name</b> - {props.emergency.full_name}</h5>\r\n                <br/>\r\n                <h5><b>Person's Emergency Contacts</b> - {(props.emergency.emergency_numbers && props.emergency.emergency_numbers.length>0) ? ParseContacts(props.emergency.emergency_numbers) : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Email Address</b> - {props.emergency.email ? props.emergency.email : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.emergency.phone_number ? props.emergency.phone_number : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Device</b> - {props.emergency.device ? props.emergency.device : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Emergency Full Address</b> - {props.emergency.full_address ? props.emergency.full_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Emergency Admin Address</b> - {props.emergency.sub_admin_address ? props.emergency.sub_admin_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Reason For Emergency</b> - {props.emergency.reasons ? getReasons(props.emergency.reasons) : \"\"}</h5>\r\n           </div>\r\n}\r\n\r\nfunction ParseContacts(arr){\r\n    return arr.map((item,index) => {\r\n        return <p key={index}>{item}</p>\r\n    })\r\n}\r\n\r\nfunction getReasons(reasons){\r\n    switch(reasons.length){\r\n        case 0:\r\n          return \"\";\r\n        case 1:\r\n          return reasons[0]+\" emergency\";\r\n        case 2:\r\n          return reasons[0] +\" emergency, \" +reasons[1] +\" emergency\";\r\n        case 3:\r\n          return reasons[0] +\" emergency, \" +reasons[1] +\" emergency, \" +reasons[2] +\" emergency\";\r\n    }\r\n}","import React from 'react';\r\n\r\nconst style = {\r\n    width: \"100%\"\r\n}\r\n\r\nexport default function Text(props){\r\n    return  <div className=\"laser-action_div laser-shadow\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 style={style}><span onClick={e => props.closeAction(e)} className=\"action_close_btn\">&#10005;</span></h1>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <h5>{props.text}</h5>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n}","import React from \"react\"\r\n\r\nimport Text from \"./Text\";\r\n\r\nexport default function Action(props){\r\n\r\n    return <div>{getText(props.action, props.message, props.closeAction)}</div>\r\n\r\n}\r\n\r\nfunction getText(action, message, closeAction){\r\n    switch(action){\r\n        case \"loading\":\r\n        \r\n        return <Text text={\"Loading...\"} closeAction={closeAction}/>\r\n\r\n       \r\n        case \"close\":\r\n        \r\n        return \"\";\r\n\r\n        case \"err_calls_load\":\r\n        \r\n        return <Text text={\"An Error occurred loading latest calls\"} closeAction={closeAction}/>;\r\n\r\n        case \"err_emergency_load\":\r\n        \r\n        return <Text text={\"An Error occurred loading latest emergencies\"} closeAction={closeAction}/>;\r\n\r\n        case \"message\":\r\n\r\n        return <Text text={message} closeAction={closeAction}/> \r\n    }\r\n}","import React from \"react\"\r\n\r\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nconst style = {\r\n    background: \"#2E86C1\",\r\n    border: \"0px solid #000000\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"8px\",\r\n    borderRadius: \"4px\"\r\n}\r\n\r\nconst style_remove_btn = {\r\n    background: \"#000000\",\r\n    border: \"0px solid #000000\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"8px\",\r\n    borderRadius: \"4px\"\r\n}\r\n\r\nexport default function AgentDetails(props){\r\n    \r\n    return <div className=\"laser-agent_side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeAgentSideBar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-black-text\"><b>Agents Details</b></h4>\r\n                <br/>\r\n                <h5><b>Agents Name</b> - {props.agent.agent.firstname} {props.agent.agent.lastname}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.agent.agent.phone_number}</h5>\r\n                <br/>\r\n                <h5><b>Agency</b> - {props.agent.agent.department}</h5>\r\n                <br/>\r\n                <h5><b>Current Location</b> - {props.agent.full_address}</h5>\r\n                <br/>\r\n                {\r\n                    (Auth.getPriviledge() === \"full_control\") ? <div>\r\n                                                                    <h5><b>Availability</b> - {props.agent.is_on_route ? props.agent.agent.firstname+\" is currently on route to a person's locations\"   : props.agent.agent.firstname+\" is available\"}</h5>\r\n                                                                    <p>{props.agent.is_on_route ? <button style={style_remove_btn} onClick={e => props.removeAgentFromRoute(e, props.agent)} className=\"\">Remove agent from route</button> : \"\"}</p>\r\n                                                                    <br/>\r\n                                                                    {props.user.full_name ?  <button style={style} onClick={e => props.addAgentToMonitoring(e, props.agent)} className=\"\">Send Agent {props.agent.agent.firstname} {props.agent.agent.lastname} to {props.user.full_name}'s location </button> : \"\"}\r\n                                                                </div> : \"\"\r\n                }\r\n           </div>\r\n\r\n}","import React from 'react';\r\n\r\nimport Utils from '../utils/Utils';\r\n\r\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\r\n\r\nconst utils = new Utils();\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nexport default function LocationSidebar(props){\r\n    return <div className=\"laser-side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeSidebar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-blue-text\"><b>Call Location Details</b></h4> \r\n                <br/>\r\n                <br/>                \r\n                {\r\n                    (Auth.getPriviledge() === \"full_control\") ? \r\n                    <div>\r\n                        <button className=\"laser-blue-bg laserbtn\" onClick={e => props.resolve(e)}>Resolve</button>\r\n                        <br/>\r\n                    </div> : \"\"\r\n                }\r\n                <h5><b>Time</b> - {utils.getTime(props.location.created)}</h5>\r\n                <br/>\r\n                <h5><b>Persons Name</b> - {props.location.full_name}</h5>\r\n                <br/>\r\n                <h5><b>Email Address</b> - {props.location.email ? props.location.email : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Phone Number</b> - {props.location.phone_number ? props.location.phone_number : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Call Full Address</b> - {props.location.full_address ? props.location.full_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Call Admin Address</b> - {props.location.sub_admin_address ? props.location.sub_admin_address : \"\"}</h5>\r\n                <br/>\r\n                <h5><b>Reason For Call</b> - {props.location.reason ? props.location.reason : \"\"}</h5>\r\n           </div>\r\n}\r\n","import React from 'react';\r\n\r\nimport Utils from '../utils/Utils';\r\n\r\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\r\n\r\nconst utils = new Utils();\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nconst controls_style = {\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default function AddCallManually(props){\r\n    return <div className=\"laser-side-bar\">\r\n                <h1 className=\"close_btn\" onClick={e => props.closeSidebar(e)}>&#10005;</h1>\r\n                <br/>\r\n                <h4 className=\"text-center laser-blue-text\"><b>Add Call Manually</b></h4> \r\n                <br/>\r\n                <br/>\r\n                <label className=\"laser-black-text\" htmlFor=\"category\"><h5>Full Name</h5></label>\r\n                <input required autoComplete=\"off\" id=\"manual_name\" type=\"text\" name=\"manual_name\" onChange={props.onFieldChanged} value={props.manual_name} className=\"form-control bt-login-input\" placeholder=\"Full Name\"/>\r\n                <label className=\"laser-black-text\" htmlFor=\"category\"><h5>Phone Number</h5></label>\r\n                <input required autoComplete=\"off\" id=\"manual_phone\" type=\"text\" name=\"manual_phone\" onChange={props.onFieldChanged} value={props.manual_phone} className=\"form-control bt-login-input\" placeholder=\"Phone Number\"/>\r\n                <label className=\"laser-black-text\" htmlFor=\"category\"><h5>Address</h5></label>\r\n                <input required autoComplete=\"off\" id=\"manual_address\" type=\"text\" name=\"manual_address\" onChange={props.onFieldChanged} value={props.manual_address} className=\"form-control bt-login-input\" placeholder=\"Address\"/>\r\n                <br/>\r\n                <label className=\"laser-black-text\" htmlFor=\"category\"><h5>Reason For Call</h5></label>\r\n                <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"selected_manual_call\" name=\"selected_manual_call\" value={props.selected_manual_call} onChange={props.onManualCallChanged}>\r\n                    <option>Emergency Management(LASEMA)</option>\r\n                    <option>Police</option>\r\n                    <option>Distress</option>\r\n                    <option>Environmental and Special Offences Task Force</option>\r\n                    <option>Fire / Safety Services</option>\r\n                    <option>Environmental / Noise Pollution</option>\r\n                    <option>Broken Pipe / Water Leakage</option>\r\n                    <option>Pothole / Collapsed Road</option>\r\n                    <option>Domestic / Sexual Violence</option>\r\n                    <option>None</option>\r\n                </select>\r\n                <br/>\r\n                <br/>\r\n                <label className=\"laser-black-text\" htmlFor=\"category\"><h5>Caller Gender</h5></label>\r\n                <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"selected_manual_gender\" name=\"selected_manual_gender\" value={props.selected_manual_gender} onChange={props.onManualGenderChanged}>\r\n                    <option>Male</option>\r\n                    <option>Female</option>\r\n                </select>        \r\n                <br/>\r\n                <br/>\r\n                <button className=\"laser-blue-bg laserbtn\" onClick={e => props.onSubmitManualCallDetails(e)}>Submit</button>\r\n           </div>\r\n}","import React from 'react';\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst btn_style_left = {\r\n    marginLeft: \"16px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nconst btn_style_right = {\r\n    marginLeft: \"8px\",\r\n    marginRight: \"16px\"\r\n}\r\n\r\nexport default function ConfirmAddressNotFound(props){\r\n    return  <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"ConfirmModal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center blue-text\">Address Not Found</h4>\r\n                    <br/>\r\n                    <h5 className=\"text-center\">An Error occurred while attempting to locate that address. It could be that the address is wrong.</h5>\r\n                    <br/>\r\n                    <button className=\"laser-inline laser-blue-bg laserbtn\" style={btn_style_left} onClick={props.continueConfirmAddressNotFoundClicked}>continue</button>\r\n                    <button className=\"laser-inline laser-red-bg laserbtn\" style={btn_style_right} onClick={props.tryAgainClicked}>retry</button>\r\n                    <button className=\"laser-inline laser-grey-bg laserbtn\" style={btn_style_left} onClick={props.closeConfirmAddressNotFoundClicked}>cancel</button>\r\n                </ReactModal>\r\n            </div>\r\n}","import React, {Component} from 'react';\r\n\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport burger_menu from \"../icons/burger_menu.png\";\r\nimport phone_white from '../icons/phone_white.png';\r\n\r\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nconst dateStyle = {\r\n    color: \"#111111\",\r\n    border: \"1px solid #FFFFFF\",\r\n    zIndex: \"6000\",\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\",\r\n    padding: \"8px\"\r\n}\r\n\r\nconst controls_style = {\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class TopPanel extends Component{\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-top-panel\">\r\n                <div className=\"top-panel-left-div laser-inline\">\r\n                    <button onClick={e => this.props.openManualLocation(e)} className=\"laser-inline laserbtn\"><img src={phone_white} width=\"20\" height=\"20\"/></button><h4 className=\"laser-inline laser-header-text\"> Laser Emergency Admin - Monitoring and Dispatch</h4>\r\n                </div>\r\n                <div className=\"laser-controls\">\r\n                    {\r\n                        (Auth.getPriviledge() === \"full_control\") ? <button onClick={e => this.props.getAllAgentsLocation(e)} className=\"form-control laser-inline laser-150-width laser-red-bg laserbtn\">Locate All Agents</button> : \"\"\r\n                    }\r\n                    \r\n                    <div className=\"laser-inline\" style={dateStyle}>\r\n                        <DatePicker\r\n                            onCalendarOpen={this.props.onCalendarOpen}\r\n                            maxDate={new Date()}\r\n                            style={dateStyle}\r\n                            onChange={this.props.onDateChange}\r\n                            value={this.props.date}/>\r\n                    </div>  \r\n\r\n                    <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"calls\" name=\"calls\" value={this.props.selected_call} onChange={this.props.onCallsChanged}>\r\n                        <option>Calls (All)</option>\r\n                        <option>Emergency Management(LASEMA)</option>\r\n                        <option>Police</option>\r\n                        <option>Distress</option>\r\n                        <option>Environmental and Special Offences Task Force</option>\r\n                        <option>Fire / Safety Services</option>\r\n                        <option>Environmental / Noise Pollution</option>\r\n                        <option>Broken Pipe / Water Leakage</option>\r\n                        <option>Pothole / Collapsed Road</option>\r\n                        <option>Domestic / Sexual Violence</option>\r\n                        <option>None</option>\r\n                    </select>\r\n                    \r\n                    <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"emergencies\" name=\"emergencies\" value={this.props.selected_emergency} onChange={this.props.onEmergenciesChanged}>\r\n                        <option>Emergencies (All)</option>\r\n                        <option>Police Cases</option>\r\n                        <option>Hospital Cases</option>\r\n                        <option>Fire Cases</option>\r\n                        <option>None</option>\r\n                    </select>\r\n\r\n                    <button onClick={e => this.props.logout(e)} className=\"form-control laser-inline laser-100-width laser-grey-bg laserbtn\">logout</button>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} ","import React from 'react';\r\n\r\nimport Utils from '../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nconst style = {\r\n    background: \"rgba(0,0,0,0)\",\r\n    border: \"0px solid #000000\"\r\n}\r\n\r\nexport default function LatestItem(props){\r\n    return <button className=\"laserItem\" style={style} onClick={e => props.itemClicked(e, props.item)}>\r\n                <h5 style={getColor(props.item.laser_type)}>{props.item.full_name} - {utils.getTime(props.item.created)} - {props.item.sub_admin_address}</h5>\r\n           </button>\r\n}\r\n\r\nfunction getColor(laser_type){\r\n    switch(laser_type){\r\n        case \"emergency\":\r\n            return {\r\n                color: \"#E74C3C\",\r\n                textAlign: \"left\"\r\n            }\r\n        case \"call\":\r\n            return {\r\n                color: \"#3498DB\",\r\n                textAlign: \"left\"\r\n            }\r\n        default:\r\n            return {\r\n                color: \"#000000\",\r\n                textAlign: \"left\"\r\n            }\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport LatestItem from './LatestItem';\r\n\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\nconst styling = {\r\n    width: \"380px\",\r\n    height: \"400px\"\r\n}\r\n\r\nexport default class Latest extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state= {\r\n\r\n        }\r\n\r\n\r\n        this.itemClicked = this.itemClicked.bind(this);\r\n    }\r\n\r\n    itemClicked(e, item){\r\n        e.preventDefault();\r\n        this.props.latestClicked(item);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-latest-div laser-shadow\">\r\n                <h4 className=\"text-center laser-black-text\">Latest Reports</h4>    \r\n                <ScrollToBottom style={styling}>\r\n                    {\r\n                        this.props.latest.map(item => {\r\n                            return <LatestItem key={item._id} itemClicked={this.itemClicked} item={item}/>\r\n                        })\r\n                    }\r\n                </ScrollToBottom>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\"\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nconst box_style = {\r\n    margin: \"16px\"\r\n}\r\n\r\n\r\nconst style = {\r\n    background: \"#2E86C1\",\r\n    border: \"0px solid #000000\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"8px\",\r\n    borderRadius: \"4px\",\r\n    float: \"left\",\r\n    marginLeft: \"20px\"\r\n}\r\n\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nexport default function OrderStatus(props){\r\n    return <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"Modal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center\">Message From Agent</h4>\r\n                    <button className=\"grey-bg bt-btn pull-right\" style={box_style} onClick={props.closeRouteResponse}>close</button>\r\n                    <br/>\r\n                    <br/>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 col-sm-8\">\r\n                            <h5 className=\"black-text\">{props.route_response.agent.agent.firstname} {props.route_response.agent.agent.lastname} has completed the route to {props.route_response.user.full_name}'s location</h5>\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-4\">\r\n                            <h5><b>Phone Number</b></h5>\r\n                            <h5>{props.route_response.agent.agent.phone_number}</h5>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <h5><button className=\"green-bg bt-btn\" style={style} onClick={e => props.removeAgentFromRouteAndCloseRouteResponse(e, props.route_response.agent, props.route_response)}>Remove Agent From Route</button></h5>\r\n                    </div>\r\n\r\n                </ReactModal>\r\n           </div>\r\n}","import React from 'react';\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst btn_style_left = {\r\n    marginLeft: \"16px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nconst btn_style_right = {\r\n    marginLeft: \"8px\",\r\n    marginRight: \"16px\"\r\n}\r\n\r\nexport default function ConfirmAction(props){\r\n    return  <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"ConfirmModal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center blue-text\">Confirmation</h4>\r\n                    <br/>\r\n                    <h5 className=\"text-center\">{props.message}</h5>\r\n                    <br/>\r\n                    <button className=\"laser-inline laser-blue-bg laserbtn\" style={btn_style_left} onClick={props.yesClicked}>yes</button>\r\n                    <button className=\"laser-inline grey-bg laserbtn\" style={btn_style_right} onClick={props.noClicked}>no</button>\r\n                </ReactModal>\r\n            </div>\r\n}","\r\nexport default class Persistence{\r\n    saveSelectedAgents(selected_agents){\r\n        localStorage.setItem(\"selected_agents\", JSON.stringify(selected_agents));\r\n    }\r\n\r\n    getSelectedAgents(){\r\n        return JSON.parse(localStorage.getItem(\"selected_agents\"));\r\n    }\r\n\r\n    saveTrackedUsers(tracked_users){\r\n        localStorage.setItem(\"tracked_users\", JSON.stringify(tracked_users));\r\n    }\r\n\r\n    getTrackedUsers(){\r\n        return JSON.parse(localStorage.getItem(\"tracked_users\"));\r\n    }\r\n}","\r\n//Our Auth Service\r\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nconst Axios = Auth.axios;\r\n\r\nconst locations_url = \"/getLocations\";\r\nconst emergencies_url = \"/getEmergencies\";\r\nconst resolve_emergenciy_url = \"/resolveEmergency\";\r\nconst resolve_location_url = \"/resolveCall\";\r\n\r\nconst createAgentUrl = \"/create_agent\";\r\nconst editAgentUrl = \"/edit_agent\";\r\nconst deleteAgentUrl = \"/delete_agent\";\r\nconst getAgentsUrl = \"/get_agents\";\r\nconst getAgentsDepartmentUrl = \"/get_agents_departments\";\r\n\r\nconst createDepartmentUrl = \"/create_department\";\r\nconst editDepartmentUrl = \"/edit_department\";\r\nconst deleteDepartmentUrl = \"/delete_department\";\r\nconst getDepartmentsUrl = \"/get_departments\";\r\n\r\nconst createAdminUrl = \"/create_admin\";\r\nconst editAdminUrl = \"/edit_admin\";\r\nconst deleteAdminUrl = \"/delete_admin\";\r\nconst getAdminsUrl = \"/get_admins\";\r\n\r\nconst createManualLocationUrl = \"/create_manual_location\";\r\n\r\nexport const createManualLocation = (data) => {\r\n    return  Axios(createManualLocationUrl, data)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const getLocations = (data) => {\r\n    return  Axios(locations_url, data)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const getEmergencies = (data) => {\r\n    return  Axios(emergencies_url, data)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const resolveLocation = (id) => {\r\n    return  Axios(resolve_location_url, id)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const resolveEmergency = (data) => {\r\n    return  Axios(resolve_emergenciy_url, data)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const getAgents = () => {\r\n    return  Axios(getAgentsUrl)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const getAgentsDepartment = (department) => {\r\n    return  Axios(getAgentsDepartmentUrl, {department})\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    console.log({err});\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const createAgent = (data) => {\r\n    return Axios(createAgentUrl, data)\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const editAgent = (data) => {\r\n    return Axios(editAgentUrl, data)\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const deleteAgent = (id) => {\r\n    return Axios(deleteAgentUrl, {id})\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const getDepartments = () => {\r\n    return  Axios(getDepartmentsUrl)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const createDepartment = (name) => {\r\n    return Axios(createDepartmentUrl, {name})\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const editDepartment = (data) => {\r\n    return Axios(editDepartmentUrl, data)\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const deleteDepartment = (id) => {\r\n    return Axios(deleteDepartmentUrl, {id})\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                return \"error\";\r\n            })\r\n}\r\n\r\n\r\n\r\n//admin routes\r\nexport const getAdmins = (count) => {\r\n    return  Axios(getAdminsUrl, {count})\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    return \"error\";\r\n                })\r\n}\r\n\r\nexport const createAdmin = (name) => {\r\n    return Axios(createAdminUrl, {name})\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const editAdmin = (data) => {\r\n    return Axios(editAdminUrl, data)\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                return \"error\";\r\n            })\r\n}\r\n\r\nexport const deleteAdmin = (id) => {\r\n    return Axios(deleteAdminUrl, {id})\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                return \"error\";\r\n            })\r\n}","import React, {Component} from 'react';\r\nimport logo from './logo.svg';\r\nimport red_circle from './icons/emergency_with_circle.gif';\r\nimport blue_circle from './icons/call_with_circle.gif';\r\nimport emergency_icon from './icons/emergency.gif';\r\nimport call_icon from './icons/call.gif';\r\nimport car_test from './icons/car_test.png';\r\n\r\n//import police_car from './icons/vector/police_car.svg'\r\n//import police_car_enroute from './icons/vector/police_car_yellow.svg'\r\n\r\nimport police_car from './icons/police_car.png'\r\nimport police_car_enroute from './icons/police_car_yellow.png'\r\n\r\nimport fire_car from './icons/fire_truck.png'\r\nimport fire_car_enroute from './icons/fire_truck_yellow.png'\r\n\r\nimport ambulance from './icons/ambulance.png'\r\nimport ambulance_enroute from './icons/ambulance_yellow.png'\r\n\r\n/*import police_car_right from './icons/police_car_right.png'\r\nimport fire_car_right from './icons/fire_truck_right.png'\r\nimport ambulance_car_right from './icons/ambulance_right.png'\r\n\r\nimport police_car_left from './icons/police_car_left.png'\r\nimport fire_car_left from './icons/fire_truck_left.png'\r\nimport ambulance_car_left from './icons/ambulance_left.png'\r\n\r\nimport police_car_right_enroute from './icons/police_car_right_enroute.png'\r\nimport fire_car_right_enroute from './icons/fire_truck_right_enroute.png'\r\nimport ambulance_car_right_enroute from './icons/ambulance_right_enroute.png'\r\n\r\nimport police_car_left_enroute from './icons/police_car_left_enroute.png'\r\nimport fire_car_left_enroute from './icons/fire_truck_left_enroute.png'\r\nimport ambulance_car_left_enroute from './icons/ambulance_left_enroute.png'*/\r\n\r\nimport alert from \"./sounds/alert.mp3\";\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport Sidebar from './components/Sidebar';\r\nimport Action from './components/Action';\r\nimport AgentDetails from './components/AgentDetails';\r\nimport LocationSidebar from './components/LocationSideBar';\r\nimport AddCallManually from './components/AddCallManually';\r\nimport ConfirmAddressNotFound from './components/ConfirmAddressNotFound';\r\nimport TopPanel from './components/TopPanel';\r\nimport Latest from './components/Latest';\r\nimport RouteStatus from './components/RouteStatus';\r\nimport ConfirmAction from './components/ConfirmAction';\r\nimport Utils from './utils/Utils';\r\nimport Persistence from './utils/Persistence';\r\nimport Sound from 'react-sound';\r\nimport PubNubReact from 'pubnub-react';\r\nimport Geocode from \"react-geocode\";\r\n\r\nimport './App.css';\r\n\r\nimport * as API from './api/Api';\r\n\r\nimport AuthHelperMethods from './auth/AuthHelperMethods';\r\n\r\nconst utils = new Utils();\r\nconst persistence = new Persistence();\r\n\r\nconst mapStyle = {\r\n    height: '100vh', \r\n    width: '100%'\r\n}\r\n\r\nconst socket_io_url = 'http://52.59.255.174';\r\n//const socket_io_url = 'http://localhost:3077';\r\n\r\nlet todays_date = new Date().toISOString();\r\n\r\nlet today = null;\r\n\r\nclass App extends Component{\r\n  constructor(props){\r\n      super(props);\r\n\r\n      this.state = {\r\n          showConfirm: {\r\n              action: \"\",\r\n              status: false\r\n          },\r\n          latest: [],\r\n          locations: [], \r\n          emergencies: [], \r\n          filtered_locations: [],\r\n          filtered_emergencies: [],\r\n          side_bar_open: false, \r\n          agent_side_bar_open: false, \r\n          location_side_bar_open: false, \r\n          manual_location_side_bar: false,\r\n          clicked_user: {}, \r\n          clicked_agent: {},\r\n          center: {lat: 6.5244,lng: 3.3792}, \r\n          selected_call:\"Calls (All)\", \r\n          selected_emergency:\"Emergencies (All)\",\r\n          zoom : 11,\r\n          show_red_circle: false,\r\n          show_blue_circle: false,\r\n          clicked_marker_id: \"\",\r\n          play_sound: false,\r\n          channels_list: [\"lllaser\", \"agent_tracked\", \"agent_untracked\", \"users_monitored\", \"issue_resolved\", \"request_tracked\", \"response_tracked\"],\r\n          laser_agents:[], //all agents\r\n          selected_agents: [], //selected agents to resolve issues\r\n          route_responses_from_agents: [],\r\n          tracked_users: [],\r\n          action: \"loading\",\r\n          action_message: \"\",\r\n          tracked_area: \"lllaser\", //the user in which the admin is currently viewing whether the user wants to be tracked or not\r\n          date: new Date(),\r\n          message: \"\",\r\n\r\n          selected_manual_call:\"Emergency Management(LASEMA)\",\r\n          selected_manual_gender:\"Male\",\r\n          manual_name: \"\",\r\n          manual_phone: \"\",\r\n          manual_address: \"\",\r\n          showConfirmManualLocation: false\r\n      }\r\n      \r\n      this.pubnub = new PubNubReact({\r\n        publishKey: 'pub-c-100b3918-0e25-4fac-ade6-c58d013cd019',\r\n        subscribeKey: 'sub-c-21e1e450-9457-11e9-bf84-1623aee89087'\r\n      });\r\n      this.pubnub.init(this);\r\n\r\n      this.closeSideBar = this.closeSideBar.bind(this);\r\n      this.onCallsChanged = this.onCallsChanged.bind(this);\r\n      this.onEmergenciesChanged = this.onEmergenciesChanged.bind(this);\r\n      this.onAgentClicked = this.onAgentClicked.bind(this);\r\n      this.onDateChange = this.onDateChange.bind(this);\r\n      this.onCalendarOpen = this.onCalendarOpen.bind(this);\r\n      this.latestClicked = this.latestClicked.bind(this);\r\n      this.startMonitoring = this.startMonitoring.bind(this);\r\n      this.closeAction = this.closeAction.bind(this);\r\n      this.closeAgentSideBar = this.closeAgentSideBar.bind(this);\r\n      this.addAgentToMonitoring = this.addAgentToMonitoring.bind(this);\r\n      this.getAgentIcon = this.getAgentIcon.bind(this);\r\n      this.subscribeAndGetAllAgentsLocation = this.subscribeAndGetAllAgentsLocation.bind(this);\r\n      this.handleSongFinishedPlaying = this.handleSongFinishedPlaying.bind(this);\r\n      this.removeAgentFromRoute = this.removeAgentFromRoute.bind(this);\r\n      this.closeRouteResponse = this.closeRouteResponse.bind(this);\r\n      this.removeAgentFromRouteAndCloseRouteResponse = this.removeAgentFromRouteAndCloseRouteResponse.bind(this);\r\n\r\n      this.getEmergencies = this.getEmergencies.bind(this);\r\n      this.getLocations = this.getLocations.bind(this);\r\n      this.getLocationsDate = this.getLocationsDate.bind(this);\r\n      this.getEmergenciesDate = this.getEmergenciesDate.bind(this);\r\n      this.getLatestEmergencies = this.getLatestEmergencies.bind(this);\r\n      this.getLatestLocations = this.getLatestLocations.bind(this);\r\n\r\n      this.getSelectedAgentsIds = this.getSelectedAgentsIds.bind(this);\r\n      this.setSelectedAgentsFromIds = this.setSelectedAgentsFromIds.bind(this);\r\n\r\n      this.resolveCall = this.resolveCall.bind(this);\r\n      this.resolveEmergency = this.resolveEmergency.bind(this);\r\n      this.hideConfirm = this.hideConfirm.bind(this);\r\n      this.showConfirmResolveEmergency = this.showConfirmResolveEmergency.bind(this);\r\n      this.showConfirmResolveLocation = this.showConfirmResolveLocation.bind(this);\r\n\r\n      this.onManualCallChanged = this.onManualCallChanged.bind(this);\r\n      this.onManualGenderChanged = this.onManualGenderChanged.bind(this);\r\n      this.onSubmitManualCallDetails = this.onSubmitManualCallDetails.bind(this);\r\n      this.openManualLocation = this.openManualLocation.bind(this);\r\n      this.onFieldChanged = this.onFieldChanged.bind(this);\r\n\r\n      this.showConfirmManualLocation = this.showConfirmManualLocation.bind(this);\r\n      this.hideConfirmManualLocation = this.hideConfirmManualLocation.bind(this);\r\n\r\n      this.tryAgainClicked = this.tryAgainClicked.bind(this);\r\n      this.continueConfirmAddressNotFoundClicked = this.continueConfirmAddressNotFoundClicked.bind(this);\r\n      this.closeConfirmAddressNotFoundClicked = this.closeConfirmAddressNotFoundClicked.bind(this);\r\n      this.saveManualLocation = this.saveManualLocation.bind(this);\r\n\r\n      this.logout = this.logout.bind(this);\r\n    \r\n      var year = todays_date.split(/T(.+)/)[0];\r\n\r\n      year = year+\"T00:00:00.000Z\";\r\n\r\n      today = new Date(year);\r\n\r\n\r\n      Geocode.setApiKey(\"AIzaSyADNxHcgsHDyx_OSbqxBg5xB5lV2YJDcKI\");\r\n \r\n      // set response language. Defaults to english.\r\n      Geocode.setLanguage(\"en\");\r\n        \r\n      // set response region. Its optional.\r\n      // A Geocoding request with region=es (Spain) will return the Spanish city.\r\n      Geocode.setRegion(\"ngr\");\r\n        \r\n      // Enable or disable logs. Its optional.\r\n      Geocode.enableDebug();\r\n  }\r\n\r\n  logout(){\r\n      this.props.logout();\r\n  }\r\n\r\n  async resolveEmergency(){\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"\",\r\n            status: false\r\n          },\r\n          message: \"\",\r\n          action: \"loading\",\r\n          action_message: \"\"\r\n      })\r\n\r\n      const response = await API.resolveEmergency({id: this.state.clicked_user._id})\r\n\r\n      if(response==\"error\"){\r\n            this.setState({\r\n                action: \"message\",\r\n                action_message: \"Emergency could not be resolved. Try again later\"\r\n            })\r\n            return;\r\n      }\r\n      \r\n      if(response){\r\n          this.pubnub.publish(\r\n                {\r\n                    message: {\r\n                        \r\n                    },\r\n                    channel: \"issue_resolved\",\r\n                    sendByPost: false, // true to send via POST\r\n                    storeInHistory: false //override default storage options\r\n                },\r\n                (status, response) => {\r\n                    // handle status, response\r\n                }\r\n          );\r\n\r\n          this.setState(state => {\r\n                var tracked_users = state.tracked_users;\r\n                \r\n                tracked_users.splice(tracked_users.indexOf(this.state.clicked_user._id), 1);\r\n\r\n                persistence.saveTrackedUsers(tracked_users);\r\n\r\n                return {\r\n                    action: \"close\",\r\n                    side_bar_open: false,\r\n                    tracked_users: tracked_users\r\n                }\r\n          })\r\n\r\n          this.getLocationsDate(this.state.date);\r\n          this.getEmergenciesDate(this.state.date);\r\n\r\n          this.setState({\r\n              latest: []\r\n          })\r\n\r\n          this.getLatestLocations();\r\n          this.getLatestEmergencies();\r\n      }\r\n  }\r\n\r\n  async resolveCall(){\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"\",\r\n            status: false\r\n          },\r\n          message: \"\",\r\n          action: \"loading\",\r\n          action_message: \"\"\r\n      })\r\n\r\n      const response = await API.resolveLocation({id: this.state.clicked_user._id})\r\n\r\n      if(response==\"error\"){\r\n        this.setState({\r\n            action: \"message\",\r\n            action_message: \"Call could not be resolved. Try again later\"\r\n        })\r\n      }\r\n        \r\n      if(response){\r\n          this.pubnub.publish(\r\n                {\r\n                    message: {\r\n\r\n                    },\r\n                    channel: \"issue_resolved\",\r\n                    sendByPost: false, // true to send via POST\r\n                    storeInHistory: false //override default storage options\r\n                },\r\n                (status, response) => {\r\n                    // handle status, response\r\n                }\r\n          );\r\n\r\n          this.setState(state =>{\r\n              var locations = state.locations;\r\n\r\n              locations.splice(locations.indexOf(state.clicked_user))\r\n\r\n              return {\r\n                locations: locations,\r\n                action: \"close\",\r\n                location_side_bar_open: false\r\n              }\r\n          })\r\n\r\n          this.getLocationsDate(this.state.date);\r\n          this.getEmergenciesDate(this.state.date);\r\n\r\n          this.setState({\r\n                latest: []\r\n          })\r\n\r\n          this.getLatestLocations();\r\n          this.getLatestEmergencies();\r\n      }\r\n  }\r\n\r\n  hideConfirm(){\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"\",\r\n            status: false\r\n          },\r\n          message: \"\"\r\n      })\r\n  }\r\n\r\n  showConfirmResolveEmergency(e){\r\n      e.preventDefault();\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"emergency\",\r\n            status: true\r\n          },\r\n          message: \"Are you sure you want to mark this emergency issue as resolved ?\"\r\n      })\r\n  }\r\n\r\n  showConfirmResolveLocation(){\r\n      this.setState({\r\n          showConfirm: {\r\n            action: \"location\",\r\n            status: true\r\n          },\r\n          message: \"Are you sure you want to mark this call as resolved ?\"\r\n      })\r\n  }\r\n\r\n  removeAgentFromRoute(e, agent){\r\n      e.preventDefault();\r\n\r\n      this.pubnub.publish(\r\n          {\r\n              message: {\r\n                pn_gcm: {\r\n                    data: {\r\n                        notification_body: \"You need to abandon route. Tap to open app\",\r\n                        data: {},\r\n                        action: \"leave_route\"\r\n                    }\r\n                }\r\n              },\r\n              channel: agent.agent._id,\r\n              sendByPost: false, // true to send via POST\r\n              storeInHistory: false //override default storage options\r\n          },\r\n          (status, response) => {\r\n              // handle status, response\r\n          }\r\n      );\r\n\r\n      //tell other browsers about the agent being montiored\r\n      this.pubnub.publish(\r\n        {\r\n            message: {\r\n                agent\r\n            },\r\n            channel: \"agent_untracked\",\r\n            sendByPost: false, // true to send via POST\r\n            storeInHistory: false //override default storage options\r\n        },\r\n        (status, response) => {\r\n            // handle status, response\r\n        }\r\n      );\r\n\r\n      this.setState(state => {\r\n          var agents = state.selected_agents;\r\n          var list = state.channels_list;\r\n          var laser_agents = state.laser_agents;\r\n          \r\n          var new_selected_agents = [];\r\n\r\n          if(agents.length > 1){\r\n              new_selected_agents = agents.map(age => {\r\n                  if(age && (age.agent._id !== agent.agent._id)){\r\n                      return age;\r\n                  }\r\n              })\r\n          }\r\n\r\n          var new_list = list.splice(list.indexOf(agent.agent._id), 1);\r\n\r\n          var found_agent = laser_agents.find(age => age.agent._id === agent.agent._id);\r\n\r\n          var new_found_agent = Object.assign({}, found_agent);\r\n\r\n          new_found_agent.is_on_route = false;\r\n\r\n          var new_laser_agents = laser_agents.splice(laser_agents.indexOf(found_agent), 1, new_found_agent);\r\n\r\n          //unsubscribe to the agents id to receive a response to the route request\r\n          this.pubnub.unsubscribe({\r\n             channels: [agent.agent._id]\r\n          })\r\n          \r\n          persistence.saveSelectedAgents(new_selected_agents);\r\n\r\n          return {  \r\n              selected_agents: new_selected_agents,\r\n              laser_agents: laser_agents,\r\n              channels_list: new_list,\r\n              agent_side_bar_open: false,\r\n              clicked_agent: {}\r\n          }\r\n      })\r\n  }\r\n\r\n  removeAgentFromRouteAndCloseRouteResponse(e, agent, route_response){\r\n      e.preventDefault();\r\n\r\n      this.pubnub.publish(\r\n          {\r\n              message: {\r\n                pn_gcm: {\r\n                    data: {\r\n                        notification_body: \"You need to abandon route. Tap to open app\",\r\n                        data: {},\r\n                        action: \"leave_route\"\r\n                    }\r\n                }\r\n              },\r\n              channel: agent.agent._id,\r\n              sendByPost: false, // true to send via POST\r\n              storeInHistory: false //override default storage options\r\n          },\r\n          (status, response) => {\r\n              // handle status, response\r\n          }\r\n      );\r\n\r\n      //tell other browsers about the agent being montiored\r\n      this.pubnub.publish(\r\n                {\r\n                    message: {\r\n                        agent\r\n                    },\r\n                    channel: \"agent_untracked\",\r\n                    sendByPost: false, // true to send via POST\r\n                    storeInHistory: false //override default storage options\r\n                },\r\n                (status, response) => {\r\n                    // handle status, response\r\n                }\r\n      );\r\n\r\n      this.setState(state => {\r\n          var agents = state.selected_agents;\r\n          var list = state.channels_list;\r\n          var array = state.route_responses_from_agents;\r\n\r\n          array.splice(array.indexOf(route_response),1);\r\n          \r\n          var new_selected_agents = [];\r\n          \r\n          if(agents.length > 1){\r\n              new_selected_agents = agents.map(age => {\r\n                  \r\n                  if(age.agent._id!==agent.agent._id){\r\n                      return age;\r\n                  }\r\n              })\r\n          }\r\n\r\n          var new_list = list.splice(list.indexOf(agent.agent._id), 1);\r\n\r\n          //subscribe to the agents id to receive a response to the route request\r\n          this.pubnub.unsubscribe({\r\n                channels: [agent.agent._id]\r\n          })\r\n\r\n          persistence.saveSelectedAgents(new_selected_agents);\r\n\r\n          return {  \r\n              selected_agents: new_selected_agents,\r\n              channels_list: new_list,\r\n              route_responses_from_agents: array,\r\n              agent_side_bar_open: false,\r\n              clicked_agent: {}\r\n          }\r\n      })\r\n  }\r\n  \r\n  addAgentToMonitoring(e, agent){\r\n      e.preventDefault();\r\n      //send a request to the agent via pubnub\r\n      //wait for response\r\n      //if agent accepts set agent as on route\r\n      this.pubnub.publish(\r\n          {\r\n            message: {\r\n                pn_gcm: {\r\n                    data: {\r\n                        notification_body: \"You have a new route. Tap to open app.\",\r\n                        data: this.state.clicked_user.phone_number ? {full_name: this.state.clicked_user.full_name, _id: this.state.clicked_user.user, phone_number: this.state.clicked_user.phone_number, latitude: this.state.clicked_user.latitude, longitude: this.state.clicked_user.longitude} : {full_name: this.state.clicked_user.full_name, _id: this.state.clicked_user.user, latitude: this.state.clicked_user.latitude, longitude: this.state.clicked_user.longitude},\r\n                        action: \"route_request\"\r\n                    }\r\n                }\r\n            },\r\n            channel: agent.agent._id,\r\n            sendByPost: false, // true to send via POST\r\n            storeInHistory: false //override default storage options\r\n          },\r\n          (status, response) => {\r\n              // handle status, response\r\n          }\r\n      );\r\n\r\n      //tell other browsers about the agent being montiored\r\n      this.pubnub.publish(\r\n            {\r\n                message: {\r\n                    agent\r\n                },\r\n                channel: \"agent_tracked\",\r\n                sendByPost: false, // true to send via POST\r\n                storeInHistory: false //override default storage options\r\n            },\r\n            (status, response) => {\r\n                // handle status, response\r\n                console.log({status})\r\n                console.log({response})\r\n            }\r\n      );\r\n\r\n      this.setState(state => {\r\n          var agents = state.selected_agents;\r\n          var list = state.channels_list;\r\n\r\n          var new_selected_agents = [];\r\n\r\n          if(agents.length > 0){\r\n              var bool = false;\r\n\r\n              new_selected_agents = agents.map(a => {\r\n                    if(a.agent._id === agent.agent._id){\r\n                        bool = true;\r\n                        return agent;\r\n                    }\r\n                    else{\r\n                        if(a){\r\n                            return a;\r\n                        }\r\n                    }\r\n              })\r\n\r\n              if(!bool){\r\n                  new_selected_agents.push(agent)\r\n              }\r\n          }\r\n          else{\r\n              new_selected_agents.push(agent)\r\n          }\r\n          \r\n          if(list.indexOf(agent.agent._id)===-1){\r\n             list.push(agent.agent._id)\r\n          }\r\n\r\n          //subscribe to the agents id to receive a response to the route request\r\n          this.pubnub.subscribe({\r\n            channels: list\r\n          })\r\n\r\n          persistence.saveSelectedAgents(new_selected_agents);\r\n\r\n          return {  \r\n            selected_agents: new_selected_agents,\r\n            channels_list: list\r\n          }\r\n      })\r\n  }\r\n\r\n  //Subscribe to the users sub admin area to receive updates and send out a request to all agents on the channel to send their location \r\n  //just in case some of them are not moving at the momemnt and their location is not updating\r\n  startMonitoring(e, item){\r\n      e.preventDefault();\r\n     \r\n      this.pubnub.publish(\r\n          {\r\n              message: {\r\n                    pn_gcm: {\r\n                        data: {\r\n                            notification_body: \"Tap to open the laser App\",\r\n                            data: {},\r\n                            action: \"send_location\"\r\n                        }\r\n                    }\r\n              },\r\n              channel: this.state.tracked_area,\r\n              sendByPost: false, // true to send via POST\r\n              storeInHistory: false //override default storage options\r\n          },\r\n          (status, response) => {\r\n              // handle status, response\r\n          }\r\n      );\r\n      \r\n      this.setState(state => {\r\n            var list = state.channels_list;\r\n            var tracked_users = state.tracked_users;\r\n\r\n            if(list.indexOf(item.user)===-1){\r\n                    //remove old user from list\r\n                    //unsubscribe from old user\r\n        \r\n                    list.push(item.user)\r\n            }\r\n\r\n            var found_user = tracked_users.find(id => id === item.user);\r\n            \r\n            if(!found_user){\r\n                tracked_users.push(item.user);\r\n            }\r\n\r\n            persistence.saveTrackedUsers(tracked_users);\r\n\r\n            this.pubnub.subscribe({\r\n                channels: list\r\n            })\r\n\r\n            return {\r\n                action: \"message\",\r\n                action_message: \"You are now monitoring \"+item.full_name,\r\n                channels_list: list,\r\n                laser_agents: [],\r\n                tracked_users: tracked_users\r\n            }\r\n      })\r\n  }\r\n\r\n  latestClicked(item){\r\n      switch(item.laser_type){\r\n          case \"emergency\":\r\n              this.setState({\r\n                clicked_user: item,\r\n                side_bar_open: true,\r\n                location_side_bar_open: false,\r\n                agent_side_bar_open: false,\r\n                center: {\r\n                  lat: item.latitude,\r\n                  lng: item.longitude\r\n                },\r\n                zoom: 19,\r\n                show_red_circle: true,\r\n                show_blue_circle: false,\r\n                clicked_marker_id: item._id\r\n              })\r\n              break;\r\n          case \"call\":\r\n              this.setState({\r\n                clicked_user: item,\r\n                side_bar_open: false,\r\n                location_side_bar_open: true,\r\n                agent_side_bar_open: false,\r\n                center: {\r\n                  lat: item.latitude,\r\n                  lng: item.longitude\r\n                },\r\n                zoom: 19,\r\n                show_red_circle: false,\r\n                show_blue_circle: true,\r\n                clicked_marker_id: item._id\r\n              })\r\n              break;\r\n      }\r\n  }\r\n\r\n  openManualLocation(){\r\n      this.setState({\r\n            manual_location_side_bar: true,\r\n            side_bar_open: false,\r\n            location_side_bar_open: false,\r\n            agent_side_bar_open: false\r\n      })\r\n  }\r\n  \r\n  onCalendarOpen(){\r\n      this.setState({\r\n        play_sound: false,\r\n        side_bar_open: false, \r\n        location_side_bar_open: false,\r\n        agent_side_bar_open: false\r\n      })\r\n  }\r\n\r\n  onDateChange(date){\r\n\r\n    //We add 1 hour to the date because the date axios is sending to the server is 1 hour behind what it should be\r\n    date = new Date(date);\r\n    date.setHours(date.getHours() + 1);\r\n\r\n     this.setState({\r\n        play_sound: false,\r\n        date: date,\r\n        show_red_circle: false,\r\n        show_blue_circle: false,\r\n        clicked_marker_id: \"\",\r\n        action: \"loading\",\r\n        action_message: \"\",\r\n        selected_call:\"Calls (All)\", \r\n        selected_emergency:\"Emergencies (All)\"\r\n     })\r\n\r\n     this.getLocationsDate(date);\r\n     this.getEmergenciesDate(date);\r\n  }\r\n\r\n  onCallsChanged(event){\r\n      const target = event.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n\r\n      let arr = [];\r\n\r\n      if(this.state.locations.length>0){\r\n          if(value===\"Calls (All)\"){\r\n            this.setState(state => ({\r\n              play_sound: false,\r\n              filtered_locations: state.locations,\r\n              side_bar_open: false, \r\n              selected_call: value,\r\n              agent_side_bar_open: false,\r\n              location_side_bar_open: false,\r\n              show_blue_circle: false\r\n            }))\r\n          }\r\n          else if(value===\"None\"){\r\n            this.setState({\r\n              play_sound: false,\r\n              filtered_locations: [],\r\n              side_bar_open: false, \r\n              selected_call: value,\r\n              agent_side_bar_open: false,\r\n              location_side_bar_open: false,\r\n              show_blue_circle: false\r\n            })\r\n          }\r\n          else{\r\n            this.state.locations.map(emer => {\r\n              if(emer.reason.includes(value.toLowerCase())){\r\n                arr.push(emer)\r\n              }\r\n            })\r\n            \r\n            if(arr.length>0){\r\n              this.setState({\r\n                play_sound: false,\r\n                filtered_locations: arr,\r\n                selected_call: value,\r\n                side_bar_open: false, \r\n                agent_side_bar_open: false,\r\n                location_side_bar_open: false,\r\n                show_blue_circle: false\r\n              })\r\n            }\r\n            else{\r\n              //show message that there are no locations found for that parameter\r\n      \r\n              this.setState({\r\n                  play_sound: false,\r\n                  filtered_locations:[],\r\n                  selected_call: value,\r\n                  side_bar_open: false, \r\n                  location_side_bar_open: false,\r\n                  show_blue_circle: false\r\n              })\r\n            }\r\n          }\r\n      }\r\n      else{\r\n          this.setState({\r\n              selected_call: value\r\n          })\r\n      }\r\n  }\r\n\r\n  onEmergenciesChanged(event){\r\n      const target = event.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n      \r\n      let arr = [];\r\n      if(this.state.emergencies.length>0){\r\n          if(value===\"Emergencies (All)\"){\r\n            this.setState(state => ({\r\n              play_sound: false,\r\n              filtered_emergencies: state.emergencies,\r\n              side_bar_open: false, \r\n              selected_emergency: value,\r\n              location_side_bar_open: false,\r\n              agent_side_bar_open: false,\r\n              show_red_circle: false\r\n            }))\r\n          }\r\n          else if(value===\"None\"){\r\n            this.setState({\r\n              play_sound: false,\r\n              filtered_emergencies:[],\r\n              selected_emergency: value,\r\n              side_bar_open: false, \r\n              agent_side_bar_open: false,\r\n              location_side_bar_open: false,\r\n              show_red_circle: false\r\n            })\r\n          }\r\n          else{\r\n            this.state.emergencies.map(emer => {\r\n              if(emer.reasons&&emer.reasons.length>0){\r\n                emer.reasons.map(reason => {\r\n                    if(value.toLowerCase().includes(reason)){\r\n                        arr.push(emer)\r\n                    }\r\n                })\r\n              }\r\n            })\r\n      \r\n            if(arr.length>0){\r\n              this.setState({\r\n                play_sound: false,\r\n                filtered_emergencies:arr,\r\n                selected_emergency: value,\r\n                side_bar_open: false, \r\n                agent_side_bar_open: false,\r\n                location_side_bar_open: false,\r\n                show_red_circle: false\r\n              })\r\n            }\r\n            else{\r\n              //show message that there are no emregencies found for that parameter\r\n      \r\n              this.setState({\r\n                  play_sound: false,\r\n                  filtered_emergencies: [],\r\n                  side_bar_open: false, \r\n                  selected_emergency: value,\r\n                  agent_side_bar_open: false,\r\n                  location_side_bar_open: false,\r\n                  show_red_circle: false\r\n              })\r\n            }\r\n          }\r\n      }    \r\n      else{\r\n          this.setState({\r\n             selected_emergency: value\r\n          })\r\n      }\r\n  }\r\n\r\n  onLocationClicked(location,e){\r\n      this.setState({\r\n          play_sound: false,\r\n          clicked_user: location,\r\n          side_bar_open: false,\r\n          agent_side_bar_open: false,\r\n          manual_location_side_bar: false,\r\n          location_side_bar_open: true,\r\n          center: {\r\n            lat: location.latitude,\r\n            lng: location.longitude\r\n          },\r\n          zoom: 19,\r\n          show_red_circle: false,\r\n          show_blue_circle: true,\r\n          clicked_marker_id: location._id\r\n      })\r\n  }\r\n\r\n  onEmergencyClicked(emergency,e){\r\n      this.setState({\r\n          play_sound: false,\r\n          clicked_user: emergency,\r\n          clicked_agent: {},\r\n          side_bar_open: true,\r\n          manual_location_side_bar: false,\r\n          agent_side_bar_open: false,\r\n          location_side_bar_open: false,\r\n          center: {\r\n              lat: emergency.latitude,\r\n              lng: emergency.longitude\r\n          },\r\n          zoom: 19,\r\n          show_red_circle: true,\r\n          show_blue_circle: false,\r\n          clicked_marker_id: emergency._id\r\n      })\r\n  }\r\n\r\n  onAgentClicked(agent,e){\r\n      this.setState({\r\n          play_sound: false,\r\n          clicked_agent: agent,\r\n          manual_location_side_bar: false,\r\n          agent_side_bar_open: true\r\n    })\r\n  }\r\n\r\n  getLocationsMarkers(){\r\n        let locations_ui;\r\n\r\n        if(this.state.filtered_locations.length>0){\r\n            locations_ui = this.state.filtered_locations.map(loc => {\r\n                return  <Marker key={loc._id} onClick={e => this.onLocationClicked(loc,e)}\r\n                            name={loc.reason} \r\n                            title={loc.full_name}\r\n                            position={{lat: loc.latitude, lng: loc.longitude}}\r\n                            icon={{\r\n                                url: (this.state.clicked_marker_id===loc._id) ? blue_circle : call_icon\r\n                            }}/> \r\n            })\r\n        }\r\n        else{\r\n            locations_ui = \"\";\r\n        }\r\n        \r\n        return locations_ui;\r\n  }\r\n\r\n  getEmergenciesMarkers(){\r\n      let emergencies_ui;\r\n\r\n      if(this.state.filtered_emergencies.length>0){\r\n          emergencies_ui = this.state.filtered_emergencies.map(emer => {\r\n            return <Marker key={emer._id} onClick={e => this.onEmergencyClicked(emer,e)}\r\n                      name={emer.reasons[0]} \r\n                      title={emer.full_name}\r\n                      position={{lat: emer.latitude, lng: emer.longitude}}\r\n                      icon={{\r\n                        url: (this.state.clicked_marker_id===emer._id) ? red_circle : emergency_icon\r\n                      }}/>\r\n          })\r\n      }\r\n      else{\r\n          emergencies_ui = \"\";\r\n      }\r\n      \r\n      return emergencies_ui;\r\n  }\r\n\r\n  getAgentMarkers(){\r\n      let agents_ui;\r\n\r\n      if(this.state.laser_agents.length>0){\r\n            agents_ui = this.state.laser_agents.map((agent,i) => {\r\n                return <Marker key={i}  onClick={e => this.onAgentClicked(agent,e)}\r\n                            name={agent.full_address} \r\n                            title={agent.full_address}\r\n                            position={{lat: agent.latitude, lng: agent.longitude}}\r\n                            //\r\n                            icon={{\r\n                                url: this.getAgentIcon(agent),\r\n                                anchor: new this.props.google.maps.Point(40,40),\r\n                                scaledSize: new this.props.google.maps.Size(40,40)\r\n                            }}/>\r\n            })\r\n      }\r\n      else{\r\n            agents_ui = \"\";\r\n      }\r\n\r\n      return agents_ui;\r\n  }\r\n\r\n  getAgentIcon(agent){\r\n      if(agent){\r\n            if(this.state.selected_agents.length > 0){\r\n                this.state.selected_agents.map(age => {\r\n                    if(age){\r\n                        if(agent.agent._id === age._id){\r\n                            agent.is_on_route = true;\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n    \r\n            switch(agent.agent.department){\r\n                case \"police\":\r\n                    if(agent.bearing>90||agent.bearing<=270){\r\n                        return (agent.is_on_route) ? police_car_enroute : police_car;\r\n                    }\r\n                    else{\r\n                        return (agent.is_on_route) ? police_car_enroute : police_car;\r\n                    }\r\n                break;\r\n                case \"fire\":\r\n                    if(agent.bearing>90||agent.bearing<=270){\r\n                        return (agent.is_on_route) ? fire_car_enroute : fire_car;\r\n                    }\r\n                    else{\r\n                        return (agent.is_on_route) ? fire_car_enroute : fire_car;\r\n                    }\r\n                break;\r\n                case \"hospital\":\r\n                    if(agent.bearing>90||agent.bearing<=270){\r\n                        return (agent.is_on_route) ? ambulance_enroute: ambulance;\r\n                    }\r\n                    else{\r\n                        return (agent.is_on_route) ? ambulance_enroute : ambulance;\r\n                    }\r\n                break;\r\n            }\r\n      }\r\n  }\r\n\r\n  closeAction(e){\r\n      this.setState({\r\n          action: \"close\",\r\n          action_message: \"\"\r\n      })\r\n  }\r\n\r\n  closeSideBar(e){\r\n      this.setState({\r\n          play_sound: false,\r\n          side_bar_open: false,\r\n          location_side_bar_open: false,\r\n          manual_location_side_bar: false,\r\n          agent_side_bar_open: false,\r\n          selected_location: {},\r\n          selected_emergency: {},\r\n          clicked_marker_id: \"\"\r\n      })\r\n  }\r\n\r\n  closeAgentSideBar(e){\r\n      this.setState({\r\n          clicked_agent: {},\r\n          agent_side_bar_open: false\r\n      })\r\n  }\r\n\r\n  closeRouteResponse(route_response){\r\n      this.setState(state => {\r\n          var array = state.route_responses_from_agents;\r\n\r\n          array.splice(array.indexOf(route_response),1);\r\n\r\n          return {\r\n              route_responses_from_agents: array\r\n          }\r\n      })\r\n  }\r\n\r\n  fetchPlaces(mapProps, map) {\r\n\r\n  }\r\n\r\n  subscribeAndGetAllAgentsLocation(){\r\n      this.pubnub.subscribe({\r\n        channels: this.state.channels_list\r\n      })\r\n\r\n      this.setState({\r\n        laser_agents: []\r\n      })\r\n\r\n      this.pubnub.publish(\r\n        {\r\n            message: {\r\n                pn_gcm: {\r\n                    data: {\r\n                        notification_body: \"Tap to open the Laser App\",\r\n                        data: {},\r\n                        action: \"send_location\"\r\n                    }\r\n                }\r\n            },\r\n            channel: this.state.tracked_area,\r\n            sendByPost: false, // true to send via POST\r\n            storeInHistory: false //override default storage options\r\n        },\r\n        (status, response) => {\r\n            // handle status, response\r\n        }\r\n      );\r\n  }\r\n\r\n  getSelectedAgentsIds(){\r\n      \r\n      if(this.state.selected_agents.length>0){\r\n            var ids = [];\r\n\r\n            this.state.selected_agents.map(agent => {\r\n                if(agent!==null){\r\n                    ids.push(agent.agent._id);\r\n                }\r\n            });\r\n\r\n            return ids;\r\n      }\r\n      else{\r\n          return [];\r\n      }\r\n  }\r\n\r\n  setSelectedAgentsFromIds(ids){\r\n      this.setState(state => {\r\n          var laser_agents = state.laser_agents;\r\n\r\n          var selected_agents = state.selected_agents;\r\n\r\n          laser_agents.map(agent => {\r\n              var found_agent_id = ids.find(id =>  id === agent.agent._id);\r\n\r\n              if(found_agent_id){\r\n                  var found = selected_agents.find(sel => sel.agent._id === found_agent_id)\r\n\r\n                  if(!found){\r\n                      selected_agents.push(agent);\r\n                  }\r\n              }\r\n          });\r\n\r\n          persistence.saveSelectedAgents(selected_agents);\r\n\r\n          return {\r\n              selected_agents: selected_agents\r\n          }\r\n\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      this.pubnub.unsubscribe({\r\n          channels: this.state.channels_list\r\n      });\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    //get selected agents from persistence(storage)\r\n    var persisted_agents = persistence.getSelectedAgents();\r\n    \r\n    if(persisted_agents!==null && persisted_agents.length > 0){\r\n        this.setState({\r\n            selected_agents: persisted_agents\r\n        })\r\n    }\r\n\r\n    var persisted_tracked_users = persistence.getTrackedUsers();\r\n    \r\n    if(persisted_tracked_users!==null && persisted_tracked_users.length > 0){\r\n        this.setState({\r\n            tracked_users: persisted_tracked_users\r\n        })\r\n    }\r\n\r\n    //subscribe to the parent channel to receive location updates from agents\r\n    this.pubnub.subscribe({\r\n        channels: this.state.channels_list\r\n    })\r\n\r\n    this.subscribeAndGetAllAgentsLocation();\r\n\r\n    this.pubnub.addListener({\r\n      status: (st) => {\r\n            if(st.category === \"PNNetworkUpCategory\"){\r\n                this.pubnub.publish(\r\n                    {\r\n                        message: {\r\n                            \r\n                        },\r\n                        channel: \"request_tracked\",\r\n                        sendByPost: false, // true to send via POST\r\n                        storeInHistory: false //override default storage options\r\n                    },\r\n                    (status, response) => {\r\n                        // handle status, response\r\n                    }\r\n                );\r\n\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"You are online.\"\r\n                })\r\n            }\r\n\r\n            if(st.category === \"PNConnectedCategory\"){\r\n                this.pubnub.publish(\r\n                    {\r\n                        message: {\r\n                            \r\n                        },\r\n                        channel: \"request_tracked\",\r\n                        sendByPost: false, // true to send via POST\r\n                        storeInHistory: false //override default storage options\r\n                    },\r\n                    (status, response) => {\r\n                        // handle status, response\r\n                    }\r\n                );\r\n\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"You are online.\"\r\n                })\r\n            }\r\n\r\n            if (st.category === \"PNReconnectedCategory\") {\r\n                this.pubnub.publish(\r\n                    {\r\n                        message: {\r\n                            \r\n                        },\r\n                        channel: \"request_tracked\",\r\n                        sendByPost: false, // true to send via POST\r\n                        storeInHistory: false //override default storage options\r\n                    },\r\n                    (status, response) => {\r\n                        // handle status, response\r\n                    }\r\n                );\r\n\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"You are back online.\"\r\n                })\r\n            }\r\n\r\n            if (st.category === \"PNNetworkIssuesCategory\") {\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"It appears there is a network issue.\"\r\n                })\r\n            }\r\n\r\n            if (st.category === \"PNNetworkDownCategory\") {\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"It appears the network is down.\"\r\n                })\r\n            }\r\n\r\n            if (st.category === \"PNTimeoutCategory\") {\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"Could not connect to the internet.\"\r\n                })\r\n            }\r\n      },\r\n      message: (message) => {\r\n          \r\n          if(message.channel === \"users_monitored\"){\r\n                var tracked_user_id = this.state.tracked_users.find(id => id === message.message.user_id);\r\n\r\n                if(!tracked_user_id){\r\n                    this.setState(state => {\r\n                        var tracked_users = state.tracked_users;\r\n\r\n                        tracked_users.push(message.message.user_id);\r\n\r\n                        persistence.saveTrackedUsers(tracked_users);\r\n\r\n                        return {\r\n                            tracked_users: tracked_users\r\n                        }\r\n                    })\r\n                }\r\n          }\r\n         \r\n          if(message.channel === \"agent_tracked\"){\r\n                \r\n                this.setState(state => {\r\n\r\n                    var laser_agents = state.laser_agents;\r\n                    var la = [];\r\n                    \r\n                    if(laser_agents.length > 0){\r\n                        la = laser_agents.map(agen => {\r\n                            if(agen.agent._id === message.message.agent._id){\r\n                                agen.is_on_route = true;\r\n                                return agen;\r\n                            }\r\n                            else{\r\n                                return agen;\r\n                            }\r\n                        });\r\n                        \r\n                    }\r\n                    else{\r\n                        //do nothing\r\n                    }\r\n                    \r\n                    return {\r\n                        laser_agents: la\r\n                    }\r\n                })\r\n\r\n                \r\n                    \r\n                    /*var agents = state.selected_agents;\r\n                    var laser_agents = state.laser_agents;\r\n\r\n                    if(agents.length > 1){\r\n                        this.state.selected_agents.map(age => \r\n                            {\r\n                                var laser_agent = laser_agents.find(age => age.agent._id === message.channel);\r\n                            \r\n                                laser_agents.map(agen => {\r\n                                    if(agen.agent._id === message.channel){\r\n                                        var laser_agent = agen;\r\n\r\n                                        if(laser_agent){\r\n                                            message.message.agent.is_on_route = true;\r\n        \r\n                                            laser_agents.splice(agents.indexOf(laser_agent), 1, message.message.agent);\r\n                                        }\r\n                                    }\r\n                                })\r\n\r\n                                if(age!=null && (age.agent._id === message.message.agent._id)){\r\n                                    agents.push(message.message.agent);\r\n\r\n                                    persistence.saveSelectedAgents(agents);\r\n                                }\r\n                            }\r\n                        );\r\n                    }\r\n                    else{\r\n                        agents.push(message.message.agent);\r\n\r\n                        laser_agents.map(age => {\r\n                            if(age.agent._id === message.channel){\r\n                                var laser_agent = age;\r\n\r\n                                message.message.agent.is_on_route = true;\r\n\r\n                                laser_agents.splice(agents.indexOf(laser_agent), 1, message.message.agent);\r\n\r\n                                persistence.saveSelectedAgents(agents);\r\n                            }\r\n                        });\r\n                    }\r\n                    \r\n                    return {  \r\n                        selected_agents: agents,\r\n                        laser_agents: laser_agents\r\n                    }*/\r\n          }\r\n          \r\n          if(message.channel === \"agent_untracked\"){\r\n                this.setState(state => {\r\n                    \r\n                    var laser_agents = state.laser_agents;\r\n                    var la = [];\r\n                    \r\n                    if(laser_agents.length > 0){\r\n                        la = laser_agents.map(agen => {\r\n                            if(agen.agent._id === message.message.agent._id){\r\n                                agen.is_on_route = false;\r\n                                return agen;\r\n                            }\r\n                            else{\r\n                                return agen;\r\n                            }\r\n                        });\r\n                    }\r\n                    else{\r\n                        //do nothing\r\n                    }\r\n\r\n                    return {\r\n                        laser_agents: la\r\n                    }\r\n                    \r\n                    /*var laser_agents = state.laser_agents;\r\n                    \r\n                    if(agents.length > 1){\r\n                        this.state.selected_agents.map(age => \r\n                            {\r\n                                if(age!=null && (age.agent._id === message.channel)){\r\n                                    agents.splice(agents.indexOf(message.message.agent),1);\r\n\r\n                                    persistence.saveSelectedAgents(agents);\r\n                                }\r\n                            }\r\n                        );\r\n                    }\r\n        \r\n                    return {  \r\n                        selected_agents: agents\r\n                    }*/\r\n                })\r\n          }\r\n\r\n          if(message.channel === \"issue_resolved\"){\r\n                /*this.getLocationsDate(this.state.date);\r\n                this.getEmergenciesDate(this.state.date);\r\n    \r\n                this.setState({\r\n                    latest: []\r\n                })\r\n    \r\n                this.getLatestLocations();\r\n                this.getLatestEmergencies();*/\r\n          }\r\n\r\n          //We need a way to send the agents and users tracked to the other browsers\r\n          if(message.channel === \"request_tracked\"){\r\n\r\n                //splitting the publish into two so that the message wont be too heavy\r\n\r\n                this.pubnub.publish(\r\n                    {\r\n                        message: {\r\n                            agents: this.getSelectedAgentsIds()\r\n                        },\r\n                        channel: \"response_tracked\",\r\n                        sendByPost: false, // true to send via POST\r\n                        storeInHistory: false //override default storage options\r\n                    },\r\n                    (status, response) => {\r\n                        // handle status, response\r\n                    }\r\n                );\r\n\r\n                this.pubnub.publish(\r\n                    {\r\n                        message: {\r\n                            users: this.state.tracked_users\r\n                        },\r\n                        channel: \"response_tracked\",\r\n                        sendByPost: false, // true to send via POST\r\n                        storeInHistory: false //override default storage options\r\n                    },\r\n                    (status, response) => {\r\n                        // handle status, response\r\n                    }\r\n                );\r\n          }\r\n\r\n          if(message.channel === \"response_tracked\"){\r\n              if(message.message.agents){\r\n                  if(message.message.agents.length > 0){\r\n                    this.setSelectedAgentsFromIds(message.message.agents);\r\n                  }\r\n              }\r\n\r\n              if(message.message.users){\r\n                  if(message.message.users.length > 0){\r\n                        this.setState(state => {\r\n                            var tracked_users = state.tracked_users;\r\n    \r\n                            message.message.users.map(user_id => {\r\n                                var found = tracked_users.find(id => id === user_id)\r\n\r\n                                if(!found){\r\n                                    tracked_users.push(user_id)\r\n                                }\r\n                            })\r\n\r\n                            persistence.saveTrackedUsers(tracked_users);\r\n    \r\n                            return{\r\n                                tracked_users: tracked_users\r\n                            }\r\n                        })\r\n                  }\r\n              }\r\n          }\r\n          \r\n          var tracked_user_id = this.state.tracked_users.find(id => id === message.channel);\r\n\r\n          if(tracked_user_id){\r\n                //the message is from a user currently being monitored\r\n                if(message.userMetadata && message.userMetadata.action === \"user_location_update\"){\r\n                    var arr = this.state.emergencies.map(emergency => {\r\n                        if(emergency.user === tracked_user_id){\r\n                            emergency.latitude = message.message.latitude;\r\n                            emergency.longitude = message.message.longitude;\r\n                            return emergency;\r\n                        }\r\n                        else{\r\n                            return emergency;\r\n                        }\r\n                    })\r\n\r\n                    //var found_emergency = state.emergencies.find(emergency => emergency.user === state.tracked_user_id);\r\n\r\n                    this.setState(state => {\r\n                        return{\r\n                            emergencies: arr\r\n                        }\r\n                    })\r\n                }\r\n          }\r\n          \r\n          if(message.channel === this.state.tracked_area ){\r\n              if(message.userMetadata && message.userMetadata.action === \"agent_location_update\"){\r\n                  var agents = this.state.laser_agents;\r\n                \r\n                  var found_agent;\r\n\r\n                  this.state.laser_agents.map(agent => {    \r\n                      if(agent.agent._id === message.message.agent._id){\r\n                          found_agent = agent;\r\n                      }\r\n                  })\r\n\r\n                  if(found_agent){\r\n                        this.state.laser_agents.map(agent => {\r\n                            if(agent.agent._id === message.message.agent._id){\r\n                                    found_agent = agent;\r\n\r\n                                    if(this.state.laser_agents.length<=0||!found_agent){\r\n                                        agents.push(message.message);\r\n                                    }\r\n                                    else{\r\n                                        agents = this.state.laser_agents.map(agent => {\r\n                                            \r\n                                            if(agent.agent._id === message.message.agent._id){\r\n                                                \r\n                                                if(this.state.selected_agents.length>0){\r\n                                                    var found_agent_on_route_possibly;\r\n\r\n                                                    this.state.selected_agents.forEach((age,index) => {\r\n                                                        if(age){\r\n                                                            if(age.agent._id === message.message.agent._id){\r\n                                                                found_agent_on_route_possibly = age;\r\n                                                            }\r\n                                                        }\r\n                                                    });\r\n                                                \r\n                                                    if(found_agent_on_route_possibly){\r\n                                                        message.message.is_on_route = found_agent_on_route_possibly.is_on_route;\r\n                                                    }\r\n                                                    else{\r\n                                                        message.message.is_on_route = false;\r\n                                                    }\r\n                                                }\r\n                                                else{\r\n                                                    message.message.is_on_route = false;\r\n                                                }\r\n\r\n                                                return message.message;\r\n                                            }\r\n                                            else{\r\n                                                if(this.state.selected_agents.length>0){\r\n                                                    var found_agent_on_route_possibly;\r\n\r\n                                                    this.state.selected_agents.forEach((age,index) => {\r\n                                                        if(age){\r\n                                                            if(age.agent._id === message.message.agent._id){\r\n                                                                found_agent_on_route_possibly = age;\r\n                                                            }\r\n                                                        }\r\n                                                    });\r\n                                                \r\n                                                    if(found_agent_on_route_possibly){\r\n                                                        agent.is_on_route = found_agent_on_route_possibly.is_on_route;\r\n                                                    }\r\n                                                    else{\r\n                                                        agent.is_on_route = false;\r\n                                                    }\r\n                                                }\r\n                                                else{\r\n                                                    agent.is_on_route = false;\r\n                                                }\r\n\r\n                                                return agent;\r\n                                            }\r\n                                        });\r\n                                    }\r\n                            }\r\n                        })\r\n                  }\r\n                  else{\r\n                      agents.push(message.message);\r\n                  }\r\n                  \r\n                  this.setState(state => {\r\n                      return {\r\n                            laser_agents: agents\r\n                      }\r\n                  })\r\n                  \r\n              }\r\n          }\r\n          \r\n          //Check if its an agent that is replying to a request, could also be used in future to check for other messages from the selected agents\r\n          if(this.state.selected_agents.length > 0){\r\n              \r\n              this.state.selected_agents.forEach((agent,index) => {\r\n                  \r\n                  if(agent!==null && (agent.agent._id === message.channel)){\r\n                      \r\n                      if(message.userMetadata && message.userMetadata.action === \"route_request_response\"){\r\n                          if(message.message.response===true){\r\n\r\n                              this.setState(state => {\r\n                                  var agents = state.selected_agents;\r\n\r\n                                  agents[index].is_on_route = true;\r\n\r\n                                  persistence.saveSelectedAgents(agents);\r\n\r\n                                  return {\r\n                                        selected_agents: agents,\r\n                                        action: \"message\",\r\n                                        action_message: \"Agent \" +agent.agent.firstname +\" \" +agent.agent.lastname +\" is now en route to \"+this.state.clicked_user.full_name+\"'s location\"\r\n                                  }\r\n                              })\r\n\r\n                          }\r\n                          else{\r\n                              this.setState(state => {\r\n                                var agents = state.selected_agents;\r\n\r\n                                agents[index].is_on_route = false;\r\n                                \r\n                                persistence.saveSelectedAgents(agents);\r\n\r\n                                return {\r\n                                    selected_agents: agents,\r\n                                    action: \"message\",\r\n                                    action_message: \"Agent \" +agent.agent.firstname +\" \" +agent.agent.lastname +\" declined the request to go to \"+this.state.clicked_user.full_name+\"'s location\"\r\n                                }\r\n                              })\r\n                          }\r\n                      }\r\n                      \r\n                      if(message.userMetadata && message.userMetadata.action === \"route_completed\"){\r\n                          //show message that agent has completed route\r\n                          if(message.message){\r\n                              this.setState(state => {\r\n                                  var array = state.route_responses_from_agents;\r\n\r\n                                  var user = message.message;\r\n\r\n                                  array.push({user:user, agent:agent})\r\n\r\n                                  return {\r\n                                      route_responses_from_agents : array\r\n                                  }\r\n                              })\r\n                          }\r\n                      }\r\n                  }\r\n              })\r\n          }\r\n\r\n      }\r\n    });\r\n\r\n    const socket = socketIOClient(socket_io_url);\r\n\r\n    socket.on(\"connect\", \r\n      () => console.log(\"connected to socket io\")\r\n    );\r\n\r\n    socket.on(\"reconnect\", attempt => {\r\n        console.log(\"Socket IO Reconnected\")\r\n        //successfully reconnected\r\n        //get the lastest data\r\n    })\r\n\r\n    //Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\r\n    socket.on(\"emergency\", \r\n      data => {\r\n         if(data){\r\n             this.setState(state => {\r\n              let arr = state.emergencies;\r\n              let lat = state.latest;\r\n              \r\n              lat.push(data);\r\n              arr.push(data)\r\n\r\n              return {\r\n                  play_sound: true,\r\n                  latest: lat,\r\n                  clicked_marker_id: data._id,\r\n                  zoom: 18,\r\n                  emergencies: arr,\r\n                  center: {\r\n                    lat: data.latitude,\r\n                    lng: data.longitude\r\n                 }\r\n              }\r\n            })\r\n         }\r\n      }\r\n    );\r\n\r\n    socket.on(\"call\", \r\n      data => {\r\n        if(data){\r\n            this.setState(state => {\r\n              let arr = state.locations;\r\n              let lat = state.latest;\r\n              \r\n              lat.push(data);\r\n              arr.push(data)\r\n\r\n              return {\r\n                  play_sound: true,\r\n                  latest: lat,\r\n                  clicked_marker_id: data._id,\r\n                  zoom: 18,\r\n                  locations: arr,\r\n                  center: {\r\n                    lat: data.latitude,\r\n                    lng: data.longitude\r\n                 }\r\n              }\r\n          })\r\n        }\r\n      }\r\n    );\r\n\r\n    this.getLocations();\r\n    this.getEmergencies();\r\n  }\r\n\r\n  async getLocationsDate(date){\r\n        const response = await API.getLocations({date})\r\n        \r\n        if(response==\"error\"){\r\n            this.setState({\r\n                action: \"err_calls_load\",\r\n                locations: [],\r\n                filtered_locations: []\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.locations){\r\n            console.log({response})\r\n            if(this.state.action === \"loading\"){\r\n                this.setState({\r\n                    action: \"close\",\r\n                    locations: response.data.locations,\r\n                    filtered_locations: response.data.locations\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    locations: response.data.locations,\r\n                    filtered_locations: response.data.locations\r\n                })\r\n            }\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\",\r\n                locations: [],\r\n                filtered_locations: []\r\n            })\r\n        }\r\n  }\r\n\r\n  async getEmergenciesDate(date){\r\n        const response = await API.getEmergencies({date})\r\n        \r\n        if(response==\"error\"){\r\n            this.setState({\r\n                action: \"err_emergency_load\",\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.emergencies){\r\n            console.log({response})\r\n            if(this.state.action === \"loading\"){\r\n                this.setState({\r\n                    action: \"close\",\r\n                    emergencies: response.data.emergencies,\r\n                    filtered_emergencies: response.data.emergencies\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    emergencies: response.data.emergencies,\r\n                    filtered_emergencies: response.data.emergencies\r\n                })\r\n            }\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\",\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n            })\r\n        }\r\n  }\r\n\r\n  async getLatestLocations(){\r\n        var self = this;\r\n        const response = await API.getLocations({date: today})\r\n\r\n        if(response==\"error\"){\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.locations&&response.data.locations.length>0){\r\n            self.setState(state => {\r\n                var loc = state.latest;\r\n\r\n                for(var i = 0; i<response.data.locations.length; i++){\r\n                    loc.push(response.data.locations[i]);\r\n                }\r\n\r\n                loc = utils.sortDates(loc);\r\n\r\n                return {\r\n                    latest : loc\r\n                }\r\n                \r\n            })\r\n        }\r\n  }\r\n\r\n  async getLatestEmergencies(){\r\n        var self = this;\r\n        const response = await API.getEmergencies({date: today})\r\n\r\n        if(response==\"error\"){\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.emergencies&&response.data.emergencies.length>0){\r\n            self.setState(state => {\r\n                var loc = state.latest;\r\n\r\n                for(var i = 0; i<response.data.emergencies.length; i++){\r\n                    loc.push(response.data.emergencies[i]);\r\n                }\r\n\r\n                loc = utils.sortDates(loc);\r\n\r\n                return {\r\n                    latest : loc\r\n                }\r\n            })\r\n        }\r\n  }\r\n\r\n  async getEmergencies(){\r\n        const response = await API.getEmergencies({date: today})\r\n\r\n        if(response==\"error\"){\r\n            //show error message\r\n            this.setState({\r\n                action: \"err_emergency_load\",\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.emergencies&&response.data.emergencies.length>0){\r\n            this.setState(state => {\r\n            var loc = state.latest;\r\n\r\n            for(var i = 0; i<response.data.emergencies.length; i++){\r\n                loc.push(response.data.emergencies[i]);\r\n            }\r\n\r\n            loc = utils.sortDates(loc);\r\n\r\n            if(this.state.action === \"loading\"){\r\n                return {\r\n                    action: \"close\",\r\n                    latest : loc,\r\n                    emergencies: response.data.emergencies,\r\n                    filtered_emergencies: response.data.emergencies\r\n                }\r\n            }\r\n            else{\r\n                return {\r\n                    latest : loc,\r\n                    emergencies: response.data.emergencies,\r\n                    filtered_emergencies: response.data.emergencies\r\n                }\r\n            }\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\",\r\n                emergencies: [],\r\n                filtered_emergencies: []\r\n            })\r\n        }\r\n  }\r\n\r\n  async getLocations(){\r\n\r\n        const response = await API.getLocations({date: today})\r\n\r\n        if(response==\"error\"){\r\n            //show error message\r\n            this.setState({\r\n                action: \"err_calls_load\",\r\n                locations: [],\r\n                filtered_locations: []\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data&&response.data.locations&&response.data.locations.length>0){\r\n            this.setState(state => {\r\n                var loc = state.latest;\r\n\r\n                for(var i = 0; i<response.data.locations.length; i++){\r\n                    loc.push(response.data.locations[i]);\r\n                }\r\n\r\n                loc = utils.sortDates(loc);\r\n\r\n                if(this.state.action === \"loading\"){\r\n                    return {\r\n                        action: \"close\",\r\n                        latest : loc,\r\n                        locations: response.data.locations,\r\n                        filtered_locations: response.data.locations\r\n                    }\r\n                }\r\n                else{\r\n                    return {\r\n                        latest : loc,\r\n                        locations: response.data.locations,\r\n                        filtered_locations: response.data.locations\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\",\r\n                locations: [],\r\n                filtered_locations: []\r\n            })\r\n        }\r\n  }\r\n\r\n  handleSongFinishedPlaying(){\r\n      this.setState({\r\n          play_sound: false\r\n      })\r\n  }\r\n\r\n  onFieldChanged(event){\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n        [name]: value\r\n    });\r\n  }\r\n\r\n  onManualCallChanged(event){\r\n    const target = event.target;\r\n    const value = target.value;\r\n\r\n    this.setState({\r\n        selected_manual_call: value\r\n    })\r\n  }\r\n\r\n  onManualGenderChanged(event){\r\n    const target = event.target;\r\n    const value = target.value;\r\n\r\n    this.setState({\r\n        selected_manual_gender: value\r\n    })\r\n  }\r\n\r\n  onSubmitManualCallDetails(e){\r\n      e.preventDefault();\r\n\r\n      if(this.state.selected_manual_call.length <= 0){\r\n          this.setState({\r\n              action: \"message\",\r\n              action_message: \"Please enter a valid reason for call from the drop down\"\r\n          });\r\n          return;\r\n      }\r\n\r\n      if(this.state.manual_phone.lenght <= 0){\r\n          this.setState({\r\n               action: \"message\",\r\n               action_message: \"Please enter a valid phone number\"\r\n          });\r\n          return;\r\n      }\r\n\r\n      if(this.state.selected_manual_gender.length <= 0){\r\n          this.setState({\r\n              action: \"message\",\r\n              action_message: \"Please enter a valid gender\"\r\n          });\r\n          return;\r\n      }\r\n\r\n      if(this.state.manual_name.length <= 0){\r\n          this.setState({\r\n              action: \"message\",\r\n              action_message: \"Please enter a valid name\"\r\n          });\r\n          return;\r\n      }\r\n\r\n      if(this.state.manual_address.length <= 0){\r\n          this.setState({\r\n              action: \"message\",\r\n              action_message: \"Please enter an address\"\r\n          });\r\n          return;\r\n      }\r\n\r\n      //show loading\r\n      //translate address to longitude and latitude\r\n      this.setState({\r\n            action: \"loading\",\r\n            action_message: \"\"\r\n      });\r\n\r\n      Geocode.fromAddress(this.state.manual_address).then(\r\n        response => {\r\n          const { lat, lng } = response.results[0].geometry.location;\r\n\r\n          var location = {\r\n              action: this.state.selected_manual_call,\r\n              longitude: lng,\r\n              latitude: lat,\r\n              full_address: this.state.manual_address,\r\n              full_name: this.state.manual_name,\r\n              phone_number: this.state.manual_phone\r\n          }\r\n\r\n          this.saveManualLocation(location);\r\n\r\n        },\r\n        error => {\r\n          console.error(error);\r\n\r\n          this.setState({\r\n            action: \"message\",\r\n            action_message: \"We could not find that address\",\r\n            showConfirmManualLocation: true\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  showConfirmManualLocation(){\r\n      this.setState({\r\n          showConfirmManualLocation: true\r\n      })\r\n  }\r\n\r\n  hideConfirmManualLocation(){\r\n    this.setState({\r\n        showConfirmManualLocation: false\r\n    })\r\n  }\r\n\r\n  tryAgainClicked(){\r\n      this.hideConfirmManualLocation();\r\n\r\n      Geocode.fromAddress(this.state.manual_address).then(\r\n        response => {\r\n          const { lat, lng } = response.results[0].geometry.location;\r\n\r\n          var location = {\r\n                action: this.state.selected_manual_call,\r\n                longitude: lng,\r\n                latitude: lat,\r\n                full_address: this.state.manual_address,\r\n                full_name: this.state.manual_name,\r\n                phone_number: this.state.manual_phone\r\n          }\r\n\r\n          this.saveManualLocation(location);\r\n        },\r\n        error => {\r\n          console.error(error);\r\n\r\n          this.setState({\r\n            action: \"message\",\r\n            action_message: \"We could not find that address\"\r\n          });\r\n        }\r\n      );\r\n  }\r\n  \r\n  continueConfirmAddressNotFoundClicked(){\r\n        /*this.hideConfirmManualLocation();\r\n\r\n        this.setState({\r\n            action: \"loading\",\r\n            action_message: \"\"\r\n        });\r\n\r\n        var location = {\r\n            action: this.state.selected_manual_call,\r\n            longitude: lng,\r\n            latitude: lat,\r\n            full_address: this.state.manual_address,\r\n            full_name: this.state.manual_name,\r\n            phone_number: this.state.manual_phone\r\n        }\r\n\r\n        this.saveManualLocation(location);*/\r\n  }\r\n\r\n  closeConfirmAddressNotFoundClicked(){\r\n    this.hideConfirmManualLocation();\r\n  }\r\n\r\n  async saveManualLocation(location){\r\n        const response = await API.createManualLocation(location)\r\n        console.log({response});\r\n        if(response==\"error\"){\r\n            //show error message\r\n            this.setState({\r\n                action: \"message\",\r\n                action_message: \"An error occurred saving the location. Please try again\"\r\n            })\r\n\r\n            return;\r\n        }\r\n        \r\n        if(response&&response.data){\r\n            if(response.data.response===\"out_of_lagos\"){\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"That location is outside Lagos State\"\r\n                })\r\n                return;\r\n            }\r\n\r\n            this.setState(state => {\r\n                let arr = state.locations;\r\n                let lat = state.latest;\r\n                \r\n                lat.push(response.data.response);\r\n                arr.push(response.data.response)\r\n\r\n                return {\r\n                    play_sound: true,\r\n                    latest: lat,\r\n                    clicked_marker_id: response.data.response._id,\r\n                    zoom: 18,\r\n                    locations: arr,\r\n                    center: {\r\n                        lat: response.data.response.latitude,\r\n                        lng: response.data.response.longitude\r\n                    }\r\n                }\r\n            })\r\n        }\r\n  }\r\n\r\n  render(){\r\n    let sound;\r\n\r\n    if(this.state.play_sound){\r\n       sound = <Sound\r\n       url={alert}\r\n       playStatus={Sound.status.PLAYING}\r\n       playFromPosition={1 /* in milliseconds */}\r\n       onLoading={this.handleSongLoading}\r\n       onPlaying={this.handleSongPlaying}\r\n       onFinishedPlaying={this.handleSongFinishedPlaying}/>;\r\n    }\r\n    else{\r\n      sound = \"\";\r\n    }\r\n\r\n    let show_location_side_bar;\r\n    \r\n    if(this.state.location_side_bar_open){\r\n      show_location_side_bar = <LocationSidebar closeSidebar={this.closeSideBar} location={this.state.clicked_user} resolve={this.showConfirmResolveLocation} />\r\n    }\r\n    else{\r\n      show_location_side_bar = \"\";\r\n    }\r\n\r\n    let show_side_bar;\r\n    \r\n    if(this.state.side_bar_open){\r\n      show_side_bar = <Sidebar closeSidebar={this.closeSideBar} emergency={this.state.clicked_user} startMonitoring={this.startMonitoring} resolve={this.showConfirmResolveEmergency} />\r\n    }\r\n    else{\r\n      show_side_bar = \"\";\r\n    }\r\n    \r\n    return (\r\n        <div className=\"laser-parent-div\" style={mapStyle}>\r\n            <Latest latest={this.state.latest} latestClicked={this.latestClicked}/>\r\n            {show_location_side_bar}\r\n            {show_side_bar}\r\n            {this.state.showConfirmManualLocation ? <ConfirmAddressNotFound continueConfirmAddressNotFoundClicked={this.continueConfirmAddressNotFoundClicked} closeConfirmAddressNotFoundClicked={this.continueConfirmAddressNotFoundClicked} tryAgainClicked={this.continueConfirmAddressNotFoundClicked} hideConfirmManualLocation={this.hideConfirmManualLocation} /> : \"\"}\r\n            {this.state.manual_location_side_bar ? <AddCallManually onFieldChanged={this.onFieldChanged} closeSidebar={this.closeSideBar} selected_manual_call={this.state.selected_manual_call} selected_manual_gender={this.state.selected_manual_gender} manual_address={this.state.manual_address} manual_name={this.state.manual_name} onManualCallChanged={this.onManualCallChanged} onManualGenderChanged={this.onManualGenderChanged}  onSubmitManualCallDetails={this.onSubmitManualCallDetails}/> : \"\" }\r\n            \r\n            {this.state.agent_side_bar_open ? <AgentDetails removeAgentFromRoute={this.removeAgentFromRoute} closeAgentSideBar={this.closeAgentSideBar} addAgentToMonitoring={this.addAgentToMonitoring} agent={this.state.clicked_agent} user={this.state.clicked_user}/> : \"\" }\r\n\r\n            <TopPanel openManualLocation={this.openManualLocation} logout={this.logout} onCalendarOpen={this.onCalendarOpen} onDateChange={this.onDateChange} date={this.state.date} selected_call={this.state.selected_call} \r\n            onCallsChanged={this.onCallsChanged} selected_emergency={this.state.selected_emergency} onEmergenciesChanged={this.onEmergenciesChanged} getAllAgentsLocation={this.subscribeAndGetAllAgentsLocation}/>\r\n\r\n            {sound}\r\n\r\n            <Map google={this.props.google} \r\n                style={mapStyle}\r\n                onReady={this.fetchPlaces}\r\n                initialCenter={this.state.center}\r\n                center={this.state.center}\r\n                zoom={this.state.zoom}>\r\n        \r\n                {this.getLocationsMarkers()}\r\n                {this.getEmergenciesMarkers()}\r\n                {this.getAgentMarkers()}\r\n\r\n            </Map>\r\n\r\n            <Action action={this.state.action} closeAction={this.closeAction} message={this.state.action_message}/>\r\n\r\n            {\r\n                this.state.route_responses_from_agents.length > 0 ?  <RouteStatus route_response={this.state.route_responses_from_agents[this.state.route_responses_from_agents.length - 1]} removeAgentFromRouteAndCloseRouteResponse={this.removeAgentFromRouteAndCloseRouteResponse} closeRouteResponse={this.closeRouteResponse} /> : \"\"\r\n            }\r\n\r\n            {\r\n                this.state.showConfirm.status===true ? <ConfirmAction  yesClicked={this.state.showConfirm.action===\"emergency\" ? this.resolveEmergency : this.resolveCall} noClicked={this.hideConfirm} message={this.state.message} /> : \"\"\r\n            }\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: ('AIzaSyADNxHcgsHDyx_OSbqxBg5xB5lV2YJDcKI')\r\n})(App)\r\n","import React, {Component} from \"react\";\r\n\r\nimport Utils from '../../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nconst space = {\r\n    marginLeft: \"8px\"\r\n}\r\n\r\nexport default function Agent(props){\r\n    return  <div className=\"col-md-4 col-sm-4\">\r\n                <div className=\"laser-item shadow\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-7 col-sm-7\">\r\n                            <h4>{props.agent.firstname} {props.agent.lastname}</h4>\r\n                            <h5>{utils.getDate(props.agent.created)}</h5>\r\n                        </div>\r\n                        <div className=\"col-md-5 col-sm-5\">\r\n                            <h5>{props.agent.phone_number}</h5>\r\n                            <h4>{props.agent.department}</h4>\r\n                        </div>\r\n                        <div className=\"col-md-offset-6 col-md-6 col-sm-offset-6 col-sm-6\">\r\n                            <button onClick={e => props.deleteClicked(e,props.agent)} className=\"laserbtn laset-red-bg laser-inline\">delete</button>\r\n                            <button style={space} onClick={e => props.editClicked(e,props.agent)} className=\"laserbtn laset-blue-bg laser-inline\">edit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n} ","import React from 'react';\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nimport BarLoader from 'react-spinners/BarLoader';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst override = {\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    border: \"0px solid #000000\"\r\n}\r\n\r\nexport default function Loader(props){\r\n    return  <div>\r\n                <ReactModal \r\n                    isOpen={props.isLoading}\r\n                    className=\"LoadingModal\"\r\n                    overlayClassName=\"LoadingOverlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n\r\n                    <BarLoader\r\n                        css={override}\r\n                        sizeUnit={\"px\"}\r\n                        size={80}\r\n                        color={'#2E86C1'}\r\n                        loading={props.isLoading}\r\n                    />\r\n\r\n                </ReactModal>\r\n            </div>\r\n}","import React, {Component} from \"react\";\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nimport Loader from '../../components/Loader';\r\nimport Action from '../Action';\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst btn_style_left = {\r\n    marginRight: \"8px\"\r\n}\r\n\r\nconst btn_style_right = {\r\n    marginLeft: \"8px\",\r\n    marginRight: \"16px\"\r\n}\r\n\r\nconst controls_style = {\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class Agents extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            phone_number: \"\",\r\n            department: \"\",\r\n            password: \"\",\r\n            password_again: \"\",\r\n            error: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.submitClicked = this.submitClicked.bind(this);\r\n        this.onFieldChanged = this.onFieldChanged.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async submitClicked(e){\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            error: \"\"\r\n        })\r\n\r\n        if(this.state.firstname.length<=0 || this.state.lastname.length<=0){\r\n            this.setState({\r\n                error: \"Please enter a valid first and last name\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.phone_number.length < 11){\r\n            this.setState({\r\n                error: \"Please enter a valid phone number\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.department.length < 0){\r\n            this.setState({\r\n                error: \"Please enter a valid department\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.password.length < 8 || this.state.password_again.length < 8){\r\n            this.setState({\r\n                error: \"Please enter a valid password with 8 characters or more\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.password !== this.state.password_again){\r\n            this.setState({\r\n                error: \"Passwords dont match\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            firstname: this.state.firstname,\r\n            lastname: this.state.lastname,\r\n            phone_number: this.state.phone_number,\r\n            department: this.state.department,\r\n            password: this.state.password,\r\n            password_again: this.state.password_again\r\n        }\r\n\r\n        const response = await API.createAgent(data)\r\n        \r\n        if(response==\"error\"){\r\n            this.setState({\r\n                action: \"message\",\r\n                action_message: \"An error occurred creating agent, Please try again later\"\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data){\r\n            this.hideLoading()\r\n            this.props.closeModalGetAgents();\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\"\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.departments.length > 0){\r\n            this.setState(state => {\r\n                return { \r\n                    department: this.props.departments[0]\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onFieldChanged(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"Modal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center blue-text\">Add Agent</h4>\r\n                    <br/>\r\n                    <h5 className=\"laser-red-text\">{ this.state.error ? this.state.error : \"\" }</h5>\r\n                    <br/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"category\"><h5>First Name</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"firstname\" type=\"text\" name=\"firstname\" onChange={this.onFieldChanged} value={this.state.firstname} className=\"form-control bt-login-input\" placeholder=\"First Name\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"category\"><h5>Last Name</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"lastname\" type=\"text\" name=\"lastname\" onChange={this.onFieldChanged} value={this.state.lastname} className=\"form-control bt-login-input\" placeholder=\"Last Name\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Phone Number</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"phone_number\" type=\"phone\" name=\"phone_number\" onChange={this.onFieldChanged} value={this.state.phone_number} className=\"form-control bt-login-input\" placeholder=\"Phone Number\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Department</h5></label>\r\n                            <select style={controls_style} className=\"form-control\" id=\"department\" name=\"department\" value={this.state.department} onChange={this.onFieldChanged}>\r\n                                {\r\n                                    this.props.departments.map(dep => {\r\n                                        return <option>{dep}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Password</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"password\" type=\"password\" name=\"password\" onChange={this.onFieldChanged} value={this.state.password} className=\"form-control bt-login-input\" placeholder=\"Password\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Password Again</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"password_again\" type=\"password\" name=\"password_again\" onChange={this.onFieldChanged} value={this.state.password_again} className=\"form-control bt-login-input\" placeholder=\"Password Again\"/>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <button className=\"laser-inline laser-blue-bg laserbtn\" style={btn_style_left} onClick={e => this.submitClicked(e)}>create</button>\r\n                    <button className=\"laser-inline grey-bg laserbtn laser-black-text\" style={btn_style_right} onClick={this.props.closeModal}>cancel</button>\r\n\r\n                </ReactModal>\r\n\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\n\r\nimport Agent from \"./Agent\"\r\nimport { Link } from 'react-router-dom'\r\nimport AddAgent from \"./AddAgent\"\r\nimport EditAgent from \"./EditAgent\"\r\nimport ConfirmAction from '../ConfirmAction';\r\nimport Loader from '../../components/Loader';\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nconst controls_style = {\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class Agents extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            agents: [],\r\n            departments: [],\r\n            agents_filter: [],\r\n            selected_department: \"\",\r\n            selected_agent: {},\r\n            showConfirm: false,\r\n            showAddAgent: false,\r\n            showDeleteAgent: false,\r\n            showEditAgent: false,\r\n            confirmMessage: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.getAgents = this.getAgents.bind(this);\r\n        this.getAgentsDepartment = this.getAgentsDepartment.bind(this);\r\n        this.getDepartments = this.getDepartments.bind(this);\r\n        this.deleteAgent = this.deleteAgent.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalGetAgents = this.closeModalGetAgents.bind(this);\r\n        this.showDeleteAgent = this.showDeleteAgent.bind(this);\r\n        this.showAddAgent = this.showAddAgent.bind(this);\r\n        this.showEditAgent = this.showEditAgent.bind(this);\r\n        this.onDepartmentChanged = this.onDepartmentChanged.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async getAgents(){\r\n        this.showLoading();\r\n\r\n        const response = await(API.getAgents());\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState({\r\n                agents: response.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async getAgentsDepartment(filter){\r\n        this.showLoading();\r\n\r\n        const response = await(API.getAgentsDepartment(filter));\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState({\r\n                agents: response.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async getDepartments(){\r\n        this.showLoading();\r\n\r\n        const response = await(API.getDepartments());\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState(state => {\r\n                var deps = [\"All\"];\r\n\r\n                response.data.map(dep => {\r\n                    deps.push(dep.name);\r\n                })\r\n                \r\n                return {\r\n                    departments: deps\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    async deleteAgent(agent){\r\n        this.showLoading();\r\n\r\n        const response = await(API.deleteAgent(agent._id));\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState(state => {\r\n                var agents = this.state.agents;\r\n\r\n                agents.splice(this.agents.indexOf(agent),1);\r\n\r\n                return {\r\n                    agents: agents\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({\r\n            showConfirm: false,\r\n            showAddAgent: false,\r\n            showDeleteAgent: false,\r\n            showEditAgent: false\r\n        })\r\n    }\r\n\r\n    closeModalGetAgents(){\r\n        this.setState({\r\n            showConfirm: false,\r\n            showAddAgent: false,\r\n            showDeleteAgent: false,\r\n            showEditAgent: false\r\n        });\r\n        \r\n        this.getAgents();\r\n    }\r\n\r\n    showDeleteAgent(e,agent){\r\n        e.preventDefault();\r\n        this.setState({\r\n            selected_agent: agent,\r\n            showConfirm: true,\r\n            confirmMessage: \"Are you sure you want to delete agent \" +agent.firstname +\"'s profile? This cant be undone.\"\r\n        })\r\n    }\r\n\r\n    showAddAgent(){\r\n        this.setState({\r\n            showAddAgent:  true\r\n        })\r\n    }\r\n\r\n    showEditAgent(e,agent){\r\n        e.preventDefault();\r\n        this.setState({\r\n            showEditAgent:  true,\r\n            selected_agent: agent\r\n        })\r\n    }\r\n\r\n    onDepartmentChanged(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n        this.setState({\r\n            selected_department: value\r\n        })\r\n\r\n        if(value===\"All\"){\r\n            this.getAgents();\r\n        }\r\n        else{\r\n            this.getAgentsDepartment(value);\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAgents();\r\n        this.getDepartments();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-parent-div\">\r\n                <div className=\"laser-top-panel\">\r\n                    <h4 className=\"laser-inline\">Laser Emergency Admin - Agents</h4>\r\n                    <div className=\"laser-controls\">\r\n                        <Link style={controls_style} to={'/'} className=\"nav-link white-text link laser-inline laser-150-width\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">View Map</button>\r\n                        </Link>\r\n\r\n                        <select style={controls_style} className=\"form-control laser-inline laser-150-width\" id=\"filter\" name=\"filter\" value={this.state.selected_department} onChange={this.onDepartmentChanged}>\r\n                            {\r\n                                this.state.departments.map(dep => {\r\n                                    return <option>{dep}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                        <button onClick={this.showAddAgent} style={controls_style} className=\"laser-inline laser-100-width laserbtn laser-white_border-blue-bg\">Add Agent</button>\r\n                        <Link style={controls_style} to={'/admins'} className=\"nav-link white-text link\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">Admins</button>\r\n                        </Link>\r\n                        <Link style={controls_style} to={'/departments'} className=\"nav-link white-text link\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">Departments</button>\r\n                        </Link>\r\n                        <button onClick={e => this.props.logout(e)} className=\"form-control laser-inline laser-100-width laser-grey-bg laserbtn pull-right\">logout</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div class=\"container\">\r\n                        {\r\n                            this.state.agents.map(agent => {\r\n                                return <Agent agent={agent} key={agent._id} deleteClicked={this.showDeleteAgent} editClicked={this.showEditAgent}/>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <Loader isLoading={this.state.isLoading}/>\r\n                {\r\n                    this.state.showAddAgent ? <AddAgent closeModal={this.closeModal} departments={this.state.departments} closeModalGetAgents={this.closeModalGetAgents} /> : \"\"\r\n                }\r\n                {\r\n                    this.state.showDeleteAgent===true ? <ConfirmAction  yesClicked={this.deleteAgent} noClicked={this.closeModal} message={this.state.confirmMessage} /> : \"\"\r\n                }\r\n            </div>   \r\n        );\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\n\r\nimport Utils from '../../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nconst space = {\r\n    marginLeft: \"8px\"\r\n}\r\n\r\nexport default function Admin(props){\r\n    return  <div className=\"col-md-6 col-sm-6\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-7 col-sm-7\">\r\n                        <h4>{props.admin.username}</h4>\r\n                    </div>\r\n                    <div className=\"col-md-7 col-sm-7\">\r\n                        <h4>{props.admin.firstname} {props.admin.lastname}</h4>\r\n                        <h5>{utils.getDate(props.admin.created)}</h5>\r\n                    </div>\r\n                    <div className=\"col-md-5 col-sm-5\">\r\n                        <h5>{props.admin.phone_number}</h5>\r\n                        <h4>{props.admin.priviledge}</h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-offset-6 col-md-6 col-sm-offset-6 col-sm-6\">\r\n                        <button onClick={props.deleteClicked(props.admin)} className=\"laserbtn laset-red-bg laser-inline\">delete</button>\r\n                        <button style={space} onClick={props.editClicked(props.admin)} className=\"laserbtn laset-blue-bg laser-inline\">edit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n} ","import React, {Component} from \"react\";\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nimport Loader from '../../components/Loader';\r\nimport Action from '../Action';\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst btn_style_left = {\r\n    marginRight: \"8px\"\r\n}\r\n\r\nconst btn_style_right = {\r\n    marginLeft: \"8px\",\r\n    marginRight: \"16px\"\r\n}\r\n\r\nconst controls_style = {\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class Agents extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            username: \"\",\r\n            phone_number: \"\",\r\n            password: \"\",\r\n            password_again: \"\",\r\n            priviledge: \"\",\r\n            error: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.submitClicked = this.submitClicked.bind(this);\r\n        this.onFieldChanged = this.onFieldChanged.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async submitClicked(e){\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            error: \"\"\r\n        })\r\n\r\n        if(this.state.firstname.length<=0 || this.state.lastname.length<=0){\r\n            this.setState({\r\n                error: \"Please enter a valid first and last name\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.phone_number.length < 11){\r\n            this.setState({\r\n                error: \"Please enter a valid phone number\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.priviledge.length < 0){\r\n            this.setState({\r\n                error: \"Please enter a valid department\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.username.length < 0){\r\n            this.setState({\r\n                error: \"Please enter a valid Username\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.password.length < 8 || this.state.password_again.length < 8){\r\n            this.setState({\r\n                error: \"Please enter a valid password with 8 characters or more\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.password !== this.state.password_again){\r\n            this.setState({\r\n                error: \"Passwords dont match\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            firstname: this.state.firstname,\r\n            lastname: this.state.lastname,\r\n            phone_number: this.state.phone_number,\r\n            username: this.state.username,\r\n            priviledge: this.state.priviledge,\r\n            password: this.state.password,\r\n            password_again: this.state.password_again\r\n        }\r\n\r\n        const response = await API.createAdmin(data)\r\n        \r\n        if(response==\"error\"){\r\n            this.setState({\r\n                action: \"message\",\r\n                action_message: \"An error occurred creating agent, Please try again later\"\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data){\r\n            this.hideLoading()\r\n            this.props.closeModalGetAgents();\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\"\r\n            })\r\n        }\r\n    }\r\n\r\n    onFieldChanged(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"AdminModal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center blue-text\">Add Admin</h4>\r\n                    <br/>\r\n                    <h5 className=\"laser-red-text\">{ this.state.error ? this.state.error : \"\" }</h5>\r\n                    <br/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"category\"><h5>User Name</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"username\" type=\"text\" name=\"username\" onChange={this.onFieldChanged} value={this.state.username} className=\"form-control bt-login-input\" placeholder=\"User Name\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"category\"><h5>First Name</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"firstname\" type=\"text\" name=\"firstname\" onChange={this.onFieldChanged} value={this.state.firstname} className=\"form-control bt-login-input\" placeholder=\"First Name\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"category\"><h5>Last Name</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"lastname\" type=\"text\" name=\"lastname\" onChange={this.onFieldChanged} value={this.state.lastname} className=\"form-control bt-login-input\" placeholder=\"Last Name\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Phone Number</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"phone_number\" type=\"phone\" name=\"phone_number\" onChange={this.onFieldChanged} value={this.state.phone_number} className=\"form-control bt-login-input\" placeholder=\"Phone Number\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Priviledge</h5></label>\r\n                            <select style={controls_style} className=\"form-control\" id=\"department\" name=\"department\" value={this.state.department} onChange={this.onFieldChanged}>\r\n                                <option>full_control</option>\r\n                                <option>view_control</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Password</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"password\" type=\"password\" name=\"password\" onChange={this.onFieldChanged} value={this.state.password} className=\"form-control bt-login-input\" placeholder=\"Password\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Password Again</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"password_again\" type=\"password\" name=\"password_again\" onChange={this.onFieldChanged} value={this.state.password_again} className=\"form-control bt-login-input\" placeholder=\"Password Again\"/>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <button className=\"laser-inline laser-blue-bg laserbtn\" style={btn_style_left} onClick={e => this.submitClicked(e)}>create</button>\r\n                    <button className=\"laser-inline grey-bg laserbtn laser-black-text\" style={btn_style_right} onClick={this.props.closeModal}>cancel</button>\r\n\r\n                </ReactModal>\r\n\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nimport Loader from '../../components/Loader';\r\nimport Action from '../Action';\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst btn_style_left = {\r\n    marginRight: \"8px\"\r\n}\r\n\r\nconst btn_style_right = {\r\n    marginLeft: \"8px\",\r\n    marginRight: \"16px\"\r\n}\r\n\r\nconst controls_style = {\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class EditAdmin extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            username: \"\",\r\n            phone_number: \"\",\r\n            password: \"\",\r\n            password_again: \"\",\r\n            priviledge: \"\",\r\n            error: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.submitClicked = this.submitClicked.bind(this);\r\n        this.onFieldChanged = this.onFieldChanged.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async submitClicked(e){\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            error: \"\"\r\n        })\r\n\r\n        if(this.state.firstname.length<=0 || this.state.lastname.length<=0){\r\n            this.setState({\r\n                error: \"Please enter a valid first and last name\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.phone_number.length < 11){\r\n            this.setState({\r\n                error: \"Please enter a valid phone number\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.priviledge.length < 0){\r\n            this.setState({\r\n                error: \"Please enter a valid department\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.username.length < 0){\r\n            this.setState({\r\n                error: \"Please enter a valid Username\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.password.length < 8 || this.state.password_again.length < 8){\r\n            this.setState({\r\n                error: \"Please enter a valid password with 8 characters or more\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        if(this.state.password !== this.state.password_again){\r\n            this.setState({\r\n                error: \"Passwords dont match\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            firstname: this.state.firstname,\r\n            lastname: this.state.lastname,\r\n            phone_number: this.state.phone_number,\r\n            username: this.state.username,\r\n            priviledge: this.state.priviledge,\r\n            password: this.state.password,\r\n            password_again: this.state.password_again\r\n        }\r\n\r\n        const response = await API.createAdmin(data)\r\n        \r\n        if(response==\"error\"){\r\n            this.setState({\r\n                action: \"message\",\r\n                action_message: \"An error occurred creating agent, Please try again later\"\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if(response&&response.data){\r\n            this.hideLoading()\r\n            this.props.closeModalGetAgents();\r\n        }\r\n        else{\r\n            this.setState({\r\n                action: \"close\"\r\n            })\r\n        }\r\n    }\r\n\r\n    onFieldChanged(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"AdminModal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center blue-text\">Add Admin</h4>\r\n                    <br/>\r\n                    <h5 className=\"laser-red-text\">{ this.state.error ? this.state.error : \"\" }</h5>\r\n                    <br/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"category\"><h5>User Name</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"username\" type=\"text\" name=\"username\" onChange={this.onFieldChanged} value={this.state.username} className=\"form-control bt-login-input\" placeholder=\"User Name\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"category\"><h5>First Name</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"firstname\" type=\"text\" name=\"firstname\" onChange={this.onFieldChanged} value={this.state.firstname} className=\"form-control bt-login-input\" placeholder=\"First Name\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"category\"><h5>Last Name</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"lastname\" type=\"text\" name=\"lastname\" onChange={this.onFieldChanged} value={this.state.lastname} className=\"form-control bt-login-input\" placeholder=\"Last Name\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Phone Number</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"phone_number\" type=\"phone\" name=\"phone_number\" onChange={this.onFieldChanged} value={this.state.phone_number} className=\"form-control bt-login-input\" placeholder=\"Phone Number\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Priviledge</h5></label>\r\n                            <select style={controls_style} className=\"form-control\" id=\"department\" name=\"department\" value={this.state.department} onChange={this.onFieldChanged}>\r\n                                <option>full_control</option>\r\n                                <option>view_control</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Password</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"password\" type=\"password\" name=\"password\" onChange={this.onFieldChanged} value={this.state.password} className=\"form-control bt-login-input\" placeholder=\"Password\"/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <br/>\r\n                            <label htmlFor=\"category\"><h5>Password Again</h5></label>\r\n                            <input required autoComplete=\"off\" id=\"password_again\" type=\"password\" name=\"password_again\" onChange={this.onFieldChanged} value={this.state.password_again} className=\"form-control bt-login-input\" placeholder=\"Password Again\"/>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <button className=\"laser-inline laser-blue-bg laserbtn\" style={btn_style_left} onClick={e => this.submitClicked(e)}>create</button>\r\n                    <button className=\"laser-inline grey-bg laserbtn laser-black-text\" style={btn_style_right} onClick={this.props.closeModal}>cancel</button>\r\n\r\n                </ReactModal>\r\n\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\n\r\nimport Admin from \"./Admin\"\r\nimport { Link } from 'react-router-dom'\r\nimport AddAdmin from \"./AddAdmin\"\r\nimport EditAdmin from \"./EditAdmin\"\r\nimport ConfirmAction from '../ConfirmAction';\r\nimport Loader from '../../components/Loader';\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nconst controls_style = {\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class Admins extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            admins: [],\r\n            selected_admin: {},\r\n            showConfirm: false,\r\n            showAddAdmin: false,\r\n            showDeleteAdmin: false,\r\n            showEditAdmin: false,\r\n            confirmMessage: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.getAdmins = this.getAdmins.bind(this);\r\n        this.deleteAdmin = this.deleteAdmin.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalGetAdmins = this.closeModalGetAdmins.bind(this);\r\n        this.showDeleteAdmin = this.showDeleteAdmin.bind(this);\r\n        this.showAddAdmin = this.showAddAdmin.bind(this);\r\n        this.showEditAdmin = this.showEditAdmin.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async getAdmins(){\r\n        this.showLoading();\r\n\r\n        const response = await(API.getAdmins());\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState({\r\n                admins: response.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async deleteAdmin(admin){\r\n        this.showLoading();\r\n\r\n        const response = await(API.deleteAdmin(admin._id));\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState(state => {\r\n                var admins = this.state.admins;\r\n\r\n                admins.splice(this.admins.indexOf(admin),1);\r\n\r\n                return {\r\n                    admins: admins\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({\r\n            showConfirm: false,\r\n            showAddAdmin: false,\r\n            showDeleteAdmin: false,\r\n            showEditAdmin: false\r\n        })\r\n    }\r\n\r\n    closeModalGetAdmins(){\r\n        this.setState({\r\n            showConfirm: false,\r\n            showAddAdmin: false,\r\n            showDeleteAdmin: false,\r\n            showEditAdmin: false\r\n        });\r\n        \r\n        this.getAdmins();\r\n    }\r\n\r\n    showDeleteAdmin(admin){\r\n        this.setState({\r\n            selected_admin: admin,\r\n            showConfirm: true,\r\n            confirmMessage: \"Are you sure you want to delete admin \" +admin.firstname +\"'s profile? This cant be undone.\"\r\n        })\r\n    }\r\n\r\n    showAddAdmin(){\r\n        this.setState({\r\n            showAddAdmin:  true\r\n        })\r\n    }\r\n\r\n    showEditAdmin(admin){\r\n        this.setState({\r\n            showEditAdmin:  true,\r\n            selected_admin: admin\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAdmins();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-parent-div\">\r\n                <div className=\"laser-top-panel\">\r\n                    <h4 className=\"laser-inline\">Laser Emergency Admins</h4>\r\n                    <div className=\"laser-controls\">\r\n                        <Link style={controls_style} to={'/'} className=\"nav-link white-text link laser-inline laser-150-width\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">View Map</button>\r\n                        </Link>\r\n\r\n                        <button onClick={this.showAddAdmin} style={controls_style} className=\"laser-inline laser-150-width laserbtn laser-white_border-blue-bg\">Add Admin</button>\r\n                        <Link style={controls_style} to={'/agents'} className=\"nav-link white-text link\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">Agents</button>\r\n                        </Link>\r\n                        <Link style={controls_style} to={'/departments'} className=\"nav-link white-text link\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">Departments</button>\r\n                        </Link>\r\n                        <button onClick={e => this.props.logout(e)} className=\"form-control laser-inline laser-100-width laser-grey-bg laserbtn pull-right\">logout</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"container\">\r\n                        {\r\n                            this.state.admins.map(admin => {\r\n                                return <Admin admin={admin} key={admin._id} deleteClicked={this.deleteAdmin} editClicked={this.deleteAdmin} />\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <Loader isLoading={this.state.isLoading}/>\r\n                \r\n                {\r\n                    this.state.showAddAdmin ? <AddAdmin closeModal={this.closeModal} departments={this.state.departments} closeModalGetAdmins={this.closeModalGetAdmins} /> : \"\"\r\n                }\r\n\r\n                {\r\n                    this.state.showDeleteAdmin===true ? <ConfirmAction  yesClicked={this.deleteAdmin} noClicked={this.closeModal} message={this.state.confirmMessage} /> : \"\"\r\n                }\r\n            </div>   \r\n        );\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\n\r\nimport Utils from '../../utils/Utils';\r\n\r\nconst utils = new Utils();\r\n\r\nconst marginLeft = {\r\n    marginLeft: \"16px\"\r\n}\r\n\r\nexport default function Department(props){\r\n    return  <div className=\"col-md-4 col-sm-4\">\r\n                <div className=\"laser-item shadow\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-7 col-sm-7\">\r\n                            <h4 className=\"laser-black-text\">{props.department.name}</h4>\r\n                        </div>\r\n                        <div className=\"col-md-5 col-sm-5\">\r\n                            <h5>{utils.getDate(props.department.created)}</h5>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-offset-6 col-md-6 col-sm-offset-6 col-sm-6\">\r\n                            <button onClick={e => props.deleteClicked(e, props.department)} className=\"laserbtn laser-red-bg laser-inline\">delete</button>\r\n                            <button style={marginLeft} onClick={e => props.editClicked(e, props.department)} className=\"laserbtn laser-blue-bg laser-inline\">edit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n} ","import React, {Component} from \"react\";\r\n\r\nimport ReactModal from 'react-modal';\r\n\r\nimport Loader from '../../components/Loader';\r\nimport Action from '../Action';\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nconst btn_style_left = {\r\n    marginLeft: \"16px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nconst btn_style_right = {\r\n    marginLeft: \"8px\",\r\n    marginRight: \"16px\"\r\n}\r\n\r\nexport default class AddDepartment extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            action: \"loading\",\r\n            action_message: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n        this.onFieldChanged = this.onFieldChanged.bind(this);\r\n        this.saveDepartment = this.saveDepartment.bind(this)\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async saveDepartment(){\r\n        if(this.state.name.length > 0){\r\n            const response = await API.createDepartment(this.state.name)\r\n        \r\n            if(response==\"error\"){\r\n                this.setState({\r\n                    action: \"message\",\r\n                    action_message: \"An error occurred creating department, Please try again later\"\r\n                })\r\n\r\n                return;\r\n            }\r\n\r\n            if(response&&response.data){\r\n                this.props.closeModal();\r\n                this.props.getDepartments();\r\n            }\r\n            else{\r\n                this.setState({\r\n                    action: \"close\"\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onFieldChanged(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <ReactModal \r\n                    isOpen={true}\r\n                    className=\"ConfirmModal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    contentLabel=\"Minimal Modal Example\">\r\n                    <h4 className=\"text-center blue-text\">Add Department</h4>\r\n                    <label className=\"laser-white-text\" htmlFor=\"category\"><h5>Department Name</h5></label>\r\n                    <input required autoComplete=\"off\" id=\"name\" type=\"text\" name=\"name\" onChange={this.onFieldChanged} value={this.state.name} className=\"form-control bt-login-input\" placeholder=\"Department Name\"/>\r\n                    <br/>\r\n                    <button className=\"laser-inline laser-blue-bg laserbtn\" style={btn_style_left} onClick={this.saveDepartment}>save</button>\r\n                    <button className=\"laser-inline grey-bg laserbtn\" style={btn_style_right} onClick={this.props.closeModal}>cancel</button>\r\n                </ReactModal>\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../../components/Loader';\r\nimport Department from './Department'\r\nimport ConfirmAction from '../ConfirmAction';\r\nimport AddDepartment from './AddDepartment'\r\n\r\nimport * as API from '../../api/Api';\r\n\r\nconst controls_style = {\r\n    marginLeft:\"8px\",\r\n    marginRight: \"8px\"\r\n}\r\n\r\nexport default class Departments extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            departments: [],\r\n            selected_department: {},\r\n            showConfirm: false,\r\n            showAddDepartment: false,\r\n            showDeleteDepartment: false,\r\n            showEditDepartment: false,\r\n            confirmMessage: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n        this.getDepartments = this.getDepartments.bind(this);\r\n        this.deleteDepartment = this.deleteDepartment.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.showDeleteDepartment = this.showDeleteDepartment.bind(this);\r\n        this.showAddDepartment = this.showAddDepartment.bind(this);\r\n        this.showEditDepartment = this.showEditDepartment.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async getDepartments(){\r\n        this.showLoading();\r\n\r\n        const response = await(API.getDepartments());\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data.length > 0){\r\n            this.setState({\r\n                departments: response.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async deleteDepartment(){\r\n        this.showLoading();\r\n        \r\n        const response = await(API.deleteDepartment(this.state.selected_department._id));\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n            return;\r\n        }\r\n\r\n        if(response && response.data && response.data){\r\n            this.closeModal();\r\n            this.setState(state => {\r\n                var departments = state.departments;\r\n\r\n                departments.splice(departments.indexOf(state.selected_department),1);\r\n\r\n                return {\r\n                    departments: departments,\r\n                    selected_department: {}\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    showDeleteDepartment(e, department){\r\n        this.setState({\r\n            selected_department: department,\r\n            showDeleteDepartment: true,\r\n            confirmMessage: \"Are you sure you want to delete the selected department?\"\r\n        })\r\n        e.preventDefault();\r\n    }\r\n\r\n    showAddDepartment(){\r\n        this.setState({\r\n            showAddDepartment:  true\r\n        })\r\n    }\r\n\r\n    showEditDepartment(e, department){\r\n        this.setState({\r\n            showEditDepartment:  true,\r\n            selected_department: department\r\n        })\r\n        e.preventDefault();\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({\r\n            showConfirm: false,\r\n            showAddDepartment: false,\r\n            showDeleteDepartment: false,\r\n            showEditDepartment: false\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getDepartments();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-parent-div\">\r\n                <div className=\"laser-top-panel\">\r\n                    <h4 className=\"laser-inline\">Laser Emergency Admin - Departments</h4>\r\n                    <div className=\"laser-controls\">\r\n                        <Link style={controls_style} to={'/'} className=\"nav-link white-text link laser-inline laser-150-width\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">View Map</button>\r\n                        </Link>\r\n\r\n                        <Link style={controls_style} to={'/agents'} className=\"nav-link white-text link\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">Agents</button>\r\n                        </Link>\r\n                        <Link style={controls_style} to={'/admins'} className=\"nav-link white-text link\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">Admins</button>\r\n                        </Link>\r\n                        <Link style={controls_style} to={'/departments'} className=\"nav-link white-text link\">\r\n                            <button className=\"laserbtn laser-white_border-blue-bg\">Departments</button>\r\n                        </Link>\r\n                        <button style={controls_style} onClick={this.showAddDepartment} className=\"laser-inline laser-150-width laserbtn laser-white_border-blue-bg\">Add Department</button>\r\n                        <button onClick={e => this.props.logout(e)} className=\"form-control laser-inline laser-100-width laser-grey-bg laserbtn pull-right\">logout</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"container\">\r\n                        <br/>\r\n                        {\r\n                            this.state.departments.map(department => {\r\n                                return <Department key={department._id} department={department} deleteClicked={this.showDeleteDepartment} editClicked={this.showEditDepartment} />\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.showAddDepartment ? <AddDepartment getDepartments={this.getDepartments} closeModal={this.closeModal}/> : \"\"\r\n                }\r\n                {\r\n                    this.state.showDeleteDepartment===true ? <ConfirmAction  yesClicked={this.deleteDepartment} noClicked={this.closeModal} message={this.state.confirmMessage} /> : \"\"\r\n                }\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from 'react'\r\n\r\nimport Loader from '../components/Loader';\r\n\r\n//Our Auth Service\r\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nconst zero_margin = {\r\n    marginBottom: \"0px\",\r\n    marginTop: \"0px\"\r\n}\r\n\r\nexport default class Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state= {\r\n            username: \"\",\r\n            password: \"\",\r\n            error: \"\",\r\n            isLoading: false\r\n        }\r\n        \r\n        this.submitClicked = this.submitClicked.bind(this);\r\n        this.onFieldChanged = this.onFieldChanged.bind(this);\r\n        this.showLoading = this.showLoading.bind(this);\r\n        this.hideLoading = this.hideLoading.bind(this);\r\n    }\r\n\r\n    showLoading(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    hideLoading(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n    \r\n    async submitClicked(e, item){\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            error: \"\"\r\n        })\r\n\r\n        if(this.state.username.length<=0 || this.state.password.length<=0){\r\n            this.setState({\r\n                error: \"Please make sure all fields are completed\"\r\n            })\r\n            \r\n            return;\r\n        }\r\n\r\n        this.showLoading();\r\n\r\n        const response = await(Auth.login(this.state.username, this.state.password));\r\n\r\n        this.hideLoading();\r\n\r\n        if(response===\"error\"){\r\n            //show error message\r\n\r\n            this.setState({\r\n                error: \"An error occurred login you in. Please try again later.\"\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if(response && response.data){\r\n            this.props.login();\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n    onFieldChanged(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"laser-login-bg\">\r\n                <div className=\"laser-login-div laser-shadow\">\r\n                    <h2 className=\"bt-blue-text laser-white-text\" style={zero_margin}>Admin</h2>\r\n                    <h2 className=\"bt-blue-text laser-white-text\" style={zero_margin}>Login</h2>\r\n                    <br/>\r\n                    <br/>\r\n                    <h5 className=\"laser-red-text\">{ this.state.error ? this.state.error : \"\" }</h5>\r\n                    <br/>\r\n                    <label className=\"laser-white-text\" htmlFor=\"category\"><h5>User Name</h5></label>\r\n                    <input required autoComplete=\"off\" id=\"username\" type=\"text\" name=\"username\" onChange={this.onFieldChanged} value={this.state.username} className=\"form-control bt-login-input\" placeholder=\"User Name\"/>\r\n                    <br/>\r\n                    <label className=\"laser-white-text\" htmlFor=\"category\"><h5>Password</h5></label>\r\n                    <input required autoComplete=\"off\" id=\"password\" type=\"password\" name=\"password\" onChange={this.onFieldChanged} value={this.state.password} className=\"form-control bt-login-input\" placeholder=\"Password\"/>\r\n                    <br/>\r\n                    <br/>\r\n                    <button className=\"laser-blue-bg laserbtn\" onClick={this.submitClicked}>CONTINUE</button>    \r\n                </div>\r\n                <Loader isLoading={this.state.isLoading}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport Agents from \"./components/agents/Agents\";\r\nimport Admins from \"./components/agents/Admins\";\r\nimport Departments from \"./components/agents/Departments\";\r\nimport Login from \"./components/Login\"\r\n\r\nimport AuthHelperMethods from './auth/AuthHelperMethods';\r\n\r\nconst Auth = new AuthHelperMethods();\r\n\r\nclass Laser extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            isLogin : false\r\n        }\r\n\r\n        this.logout = this.logout.bind(this);\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    logout = () => {\r\n        Auth.logout();\r\n\r\n        this.setState({\r\n            isLogin: true\r\n        })\r\n    }\r\n\r\n    login = () => {\r\n        this.setState({\r\n            isLogin: false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Route path=\"/\" exact render={(props) => (\r\n                        Auth.loggedIn() === true\r\n                            ? <App {...props} logout={this.logout}/>\r\n                            : <Redirect to='/login' login={this.login} />\r\n                        )} />\r\n\r\n                    <Route path=\"/agents\" exact render={(props) => (\r\n                        Auth.loggedIn() === true\r\n                            ?  Auth.getPriviledge() === \"full_control\" ? <Agents {...props} logout={this.logout} /> : <Redirect to='/' login={this.login} />\r\n                            : <Redirect to='/login' login={this.login} />\r\n                        )}/>\r\n\r\n                    <Route path=\"/admins\" exact render={(props) => (\r\n                        Auth.loggedIn() === true\r\n                            ?  Auth.getPriviledge() === \"full_control\" ? <Admins {...props} logout={this.logout} /> : <Redirect to='/' login={this.login} />\r\n                            : <Redirect to='/login' login={this.login} />\r\n                        )}/>\r\n\r\n                    <Route path=\"/departments\" exact render={(props) => (\r\n                        Auth.loggedIn() === true\r\n                            ? Auth.getPriviledge() === \"full_control\" ? <Departments {...props} logout={this.logout}/> : <Redirect to='/' login={this.login} />\r\n                            : <Redirect to='/login' login={this.login} />\r\n                        )}/>\r\n\r\n                    <Route path=\"/login\" exact render={(props) => (\r\n                        Auth.loggedIn() === false\r\n                            ? <Login {...props} login={this.login} />\r\n                            : <Redirect to='/' {...props} logout={this.logout} />\r\n                        )} />\r\n                    {\r\n                        this.state.isLogin==true ? <Redirect to='/login' login={this.login} /> : \"\"\r\n                    }\r\n                </Router>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Laser;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Laser from './Laser';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Laser />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/police_car.d5d82e20.png\";","module.exports = __webpack_public_path__ + \"static/media/police_car_yellow.303f7897.png\";","module.exports = __webpack_public_path__ + \"static/media/fire_truck.651626d2.png\";","module.exports = __webpack_public_path__ + \"static/media/fire_truck_yellow.4a7d4051.png\";","module.exports = __webpack_public_path__ + \"static/media/ambulance.3ff333a4.png\";","module.exports = __webpack_public_path__ + \"static/media/ambulance_yellow.8b74e8df.png\";"],"sourceRoot":""}