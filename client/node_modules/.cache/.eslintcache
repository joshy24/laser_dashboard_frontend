[{"/Users/user/laser/laser_dashboard_frontend/client/src/index.js":"1","/Users/user/laser/laser_dashboard_frontend/client/src/reportWebVitals.js":"2","/Users/user/laser/laser_dashboard_frontend/client/src/LaserFunction.js":"3","/Users/user/laser/laser_dashboard_frontend/client/src/App.js":"4","/Users/user/laser/laser_dashboard_frontend/client/src/Dashboard.js":"5","/Users/user/laser/laser_dashboard_frontend/client/src/components/LoginFunction.js":"6","/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/Admins.js":"7","/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/Agents.js":"8","/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/Departments.js":"9","/Users/user/laser/laser_dashboard_frontend/client/src/auth/AuthHelperMethods.js":"10","/Users/user/laser/laser_dashboard_frontend/client/src/components/LocationSideBar.js":"11","/Users/user/laser/laser_dashboard_frontend/client/src/components/AddCallManually.js":"12","/Users/user/laser/laser_dashboard_frontend/client/src/components/Action.js":"13","/Users/user/laser/laser_dashboard_frontend/client/src/components/Sidebar.js":"14","/Users/user/laser/laser_dashboard_frontend/client/src/components/TopPanel.js":"15","/Users/user/laser/laser_dashboard_frontend/client/src/components/AgentDetails.js":"16","/Users/user/laser/laser_dashboard_frontend/client/src/components/ConfirmAction.js":"17","/Users/user/laser/laser_dashboard_frontend/client/src/components/RouteStatus.js":"18","/Users/user/laser/laser_dashboard_frontend/client/src/components/Loader.js":"19","/Users/user/laser/laser_dashboard_frontend/client/src/components/ConfirmAddressNotFound.js":"20","/Users/user/laser/laser_dashboard_frontend/client/src/components/Latest.js":"21","/Users/user/laser/laser_dashboard_frontend/client/src/utils/Utils.js":"22","/Users/user/laser/laser_dashboard_frontend/client/src/api/Api.js":"23","/Users/user/laser/laser_dashboard_frontend/client/src/utils/Persistence.js":"24","/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/EditAgent.js":"25","/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/EditAdmin.js":"26","/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/AddAdmin.js":"27","/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/AddAgent.js":"28","/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/Agent.js":"29","/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/Department.js":"30","/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/AddDepartment.js":"31","/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/Admin.js":"32","/Users/user/laser/laser_dashboard_frontend/client/src/components/Text.js":"33","/Users/user/laser/laser_dashboard_frontend/client/src/components/LatestItem.js":"34"},{"size":587,"mtime":1656686266102,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1656070055870,"results":"37","hashOfConfig":"36"},{"size":2238,"mtime":1656686633526,"results":"38","hashOfConfig":"36"},{"size":508,"mtime":1656237347304,"results":"39","hashOfConfig":"36"},{"size":75998,"mtime":1656848524496,"results":"40","hashOfConfig":"36"},{"size":3264,"mtime":1656070055791,"results":"41","hashOfConfig":"36"},{"size":5923,"mtime":1656070055793,"results":"42","hashOfConfig":"36"},{"size":8087,"mtime":1656070055793,"results":"43","hashOfConfig":"36"},{"size":6079,"mtime":1656070055793,"results":"44","hashOfConfig":"36"},{"size":3943,"mtime":1656847604786,"results":"45","hashOfConfig":"36"},{"size":1917,"mtime":1656070055785,"results":"46","hashOfConfig":"36"},{"size":3255,"mtime":1656070055783,"results":"47","hashOfConfig":"36"},{"size":794,"mtime":1656070055783,"results":"48","hashOfConfig":"36"},{"size":2874,"mtime":1656070055791,"results":"49","hashOfConfig":"36"},{"size":4249,"mtime":1656849177205,"results":"50","hashOfConfig":"36"},{"size":2260,"mtime":1656070055783,"results":"51","hashOfConfig":"36"},{"size":1049,"mtime":1656070055783,"results":"52","hashOfConfig":"36"},{"size":1806,"mtime":1656070055791,"results":"53","hashOfConfig":"36"},{"size":971,"mtime":1656070055784,"results":"54","hashOfConfig":"36"},{"size":1186,"mtime":1656070055784,"results":"55","hashOfConfig":"36"},{"size":1008,"mtime":1656773831150,"results":"56","hashOfConfig":"36"},{"size":23589,"mtime":1656848245395,"results":"57","hashOfConfig":"36"},{"size":6315,"mtime":1656070055774,"results":"58","hashOfConfig":"36"},{"size":606,"mtime":1656070055878,"results":"59","hashOfConfig":"36"},{"size":0,"mtime":1656070055794,"results":"60","hashOfConfig":"36"},{"size":8073,"mtime":1656070055794,"results":"61","hashOfConfig":"36"},{"size":8070,"mtime":1656070055792,"results":"62","hashOfConfig":"36"},{"size":7753,"mtime":1656070055792,"results":"63","hashOfConfig":"36"},{"size":1310,"mtime":1656070055793,"results":"64","hashOfConfig":"36"},{"size":1281,"mtime":1656070055793,"results":"65","hashOfConfig":"36"},{"size":3105,"mtime":1656070055792,"results":"66","hashOfConfig":"36"},{"size":1835,"mtime":1656070055792,"results":"67","hashOfConfig":"36"},{"size":574,"mtime":1656070055791,"results":"68","hashOfConfig":"36"},{"size":942,"mtime":1656070055784,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"c23he8",{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"103"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/laser/laser_dashboard_frontend/client/src/index.js",["177"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/reportWebVitals.js",[],[],"/Users/user/laser/laser_dashboard_frontend/client/src/LaserFunction.js",["178"],[],"import React, {useState} from \"react\";\nimport { BrowserRouter as Router, Route, Navigate, Routes } from \"react-router-dom\";\nimport App from \"./App\";\nimport Agents from \"./components/agents/Agents\";\nimport Admins from \"./components/agents/Admins\";\nimport Departments from \"./components/agents/Departments\";\nimport Laserlogin from \"./components/LoginFunction\"\n\nimport AuthHelperMethods from './auth/AuthHelperMethods';\n\nconst Auth = new AuthHelperMethods();\n\nconst LaserFunction = () => {\n    const [isLogin, setIsLogin] = useState(false)\n\n    const logout = () => {\n        Auth.logout();\n\n        setIsLogin(true)\n    }\n\n    const login = () => {\n        setIsLogin(false)\n    }\n\n    return (\n        <div>\n            <Router>\n                <Routes>\n                    <Route path=\"/\" exact element={<App />}/>\n\n                    <Route path=\"/agents\" exact element={(props) => (\n                        Auth.loggedIn() === true\n                            ?  Auth.getPriviledge() === \"full_control\" ? <Agents {...props} logout={logout} /> : <Navigate to='/' login={login} />\n                            : <Navigate to='/login' login={login} />\n                        )}/>\n\n                    <Route path=\"/admins\" exact element={(props) => (\n                        Auth.loggedIn() === true\n                            ?  Auth.getPriviledge() === \"full_control\" ? <Admins {...props} logout={logout} /> : <Navigate to='/' login={login} />\n                            : <Navigate to='/login' login={login} />\n                        )}/>\n\n                    <Route path=\"/departments\" exact element={(props) => (\n                        Auth.loggedIn() === true\n                            ? Auth.getPriviledge() === \"full_control\" ? <Departments {...props} logout={logout}/> : <Navigate to='/' login={login} />\n                            : <Navigate to='/login' login={login} />\n                        )}/>\n\n                    <Route path=\"/login\" exact element={<Laserlogin login={login} />}/>\n\n                    {\n                        isLogin==true ? <Navigate to='/login' login={login} /> : \"\"\n                    }\n                </Routes>\n            </Router>\n        </div>\n    );\n}\n\nexport default LaserFunction;",[],"/Users/user/laser/laser_dashboard_frontend/client/src/App.js",["179","180"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/Dashboard.js",["181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/LoginFunction.js",["225"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/Admins.js",["226"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/Agents.js",["227","228"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/Departments.js",[],[],"/Users/user/laser/laser_dashboard_frontend/client/src/auth/AuthHelperMethods.js",["229","230"],[],"import axios from 'axios';\n\nimport decode from 'jwt-decode'\n\nconst login_url = '/login'\n\nexport default class AuthHelperMethods{\n\n    login = (username, password) => {\n        return  this.axios(login_url, {username, password})\n                    .then(res => {\n                        if(res.data.token && res.data.admin && res.data.priviledge){\n                            this.setToken(res.data.token);\n                            this.setPriviledge(res.data.priviledge);\n                            this.setAdmin(res.data.admin);\n                        }\n                        \n                        return res;\n                    })\n                    .catch(err => {\n                        return \"error\";\n                    })\n    }\n\n    loggedIn = () => {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken(); // Getting token from localstorage\n        return !!token && !this.isTokenExpired(token); // handwaiving here\n    };\n\n    isTokenExpired = token => {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) {\n            // Checking if token is expired.\n            return true;\n            } else return false;\n        } catch (err) {\n            console.log(\"expired check failed! Line 42: AuthService.js\");\n            return false;\n        }\n    };\n\n\n    setAdmin = admin => {\n        // Saves user token to localStorage\n        localStorage.setItem(\"admin\", JSON.stringify(admin));\n    };\n\n    getAdmin = () => {\n        // Retrieves the user token from localStorage\n        return JSON.parse(localStorage.getItem(\"admin\"));\n    };\n\n    setToken = idToken => {\n        // Saves user token to localStorage\n        localStorage.setItem(\"id_token\", idToken);\n    };\n\n    getToken = () => {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem(\"id_token\");\n    };\n\n    logout = () => {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem(\"id_token\");\n    };\n\n    getConfirm = () => {\n        // Using jwt-decode npm package to decode the token\n        let answer = decode(this.getToken());\n        console.log(\"Recieved answer!\");\n        return answer;\n    };\n\n    setPriviledge = priviledge => {\n        localStorage.setItem(\"priviledge\", priviledge);\n    }\n\n    getPriviledge = () => {\n        return localStorage.getItem(\"priviledge\");\n    }\n    \n    axios = (url, data, method) => {\n        if(!method){\n            method = \"post\";\n        }\n        // performs api calls sending the required authentication headers\n        const headers = {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\"\n        };\n\n        // Setting Authorization header\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n        if (this.loggedIn()) {\n            headers[\"Authorization\"] = \"Bearer:\" + this.getToken();\n        }\n\n        return axios({\n            url:url,\n            method: method,\n            data: data, \n            //baseURL: 'http://18.192.254.193/admin',\n            baseURL: 'http://localhost:3077/admin',\n            timeout: 30000,\n            headers: headers\n        })\n        .then(this._checkStatus)\n        .then(response => response)\n        .catch(err => err)\n    };\n\n    _checkStatus = response => {\n        // raises an error in case response status is not a success\n        if (response.status >= 200 && response.status < 300) {\n            // Success status lies between 200 to 300\n            return response;\n        } \n        if(response.status == 403){\n            this.logout()\n            var error = new Error(response.statusText);\n            error.response = response;\n            throw error;\n        }\n        else {\n            var error = new Error(response.statusText);\n            error.response = response;\n            throw error;\n        }\n    };\n\n}",[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/LocationSideBar.js",[],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/AddCallManually.js",["231","232"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/Action.js",["233"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/Sidebar.js",["234"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/TopPanel.js",["235","236","237","238","239","240"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/AgentDetails.js",[],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/ConfirmAction.js",[],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/RouteStatus.js",[],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/Loader.js",["241"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/ConfirmAddressNotFound.js",[],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/Latest.js",[],[],"/Users/user/laser/laser_dashboard_frontend/client/src/utils/Utils.js",["242","243","244","245","246","247","248","249","250","251","252"],[],"import moment from 'moment';\n\nexport default class Util{\n    getDate(str){\n        var date = moment(str);\n        var dateComponent = date.utc().format('YYYY - MM - DD');\n\n        return dateComponent;\n    }\n\n    getTime(str){\n        var date = moment(str);\n        var timeComponent = date.utc().format('HH:mm:ss');\n\n        return timeComponent;\n    }\n\n    sortDates(arr){\n        arr.sort(function compare(a, b) {\n            var dateA = new Date(a.created);\n            var dateB = new Date(b.created);\n            return dateA - dateB;\n        });\n          \n        let uniqueChars = [...new Set(arr)];\n\n        return uniqueChars;\n    }\n\n    removeDuplicates = (arr) => {\n\n    }\n\n    /*sortDates(aSet){\n        const arr = Array.from(aSet).sort(function compare(a, b) {\n            var dateA = new Date(a.created);\n            var dateB = new Date(b.created);\n            return dateA - dateB;\n        });\n          \n        return arr;\n    }*/\n\n    //idle\n    //infocus\n    //using\n    //using_by_other\n\n    /*checkAgentState(agent, monitoring_grid, browser_admin_id, agents_in_focus, laser_agents){\n        return new Promise((resolve, reject) => {\n            const id = agent.agent._id;\n\n            monitoring_grid.map(row => {\n                if(row){\n                    //Object.keys(row)[0] - this gives us the admin id\n                    //row[Object.keys(row)[0]];- this gives us the admin content ({user: ...., agents: [...]})\n\n                    var admin_content = row[Object.keys(row)[0]];\n                    var admin_id = Object.keys(row)[0];\n\n                    var agent_found_in_admin = false;\n\n                    admin_content.agents.map( (agent_id, index)  => {\n                        if(id===agent_id){\n                            agent_found_in_admin = true;\n                            //check if its the browsers admin that is using the agent\n                            if(admin_id===browser_admin_id){\n                                //set the status\n                                Object.assign(agent.agent, {status: \"using\"});\n                            }\n                            else{\n                                //its not the browsers admin that is using the agent, its another admin\n                                Object.assign(agent.agent, {status: \"using_by_other\"});\n                            }\n\n                            //replace the agent in the list of agents\n                            var new_laser_agents = laser_agents.map(laser_agent => {\n                                if(laser_agent.agent._id === id){\n                                    return agent;\n                                }\n                                else{\n                                    return laser_agent;\n                                }\n                            })\n\n                            resolve(new_laser_agents);\n                        }\n\n                        if(index === (admin_content.agents.length-1)){\n                            //last index\n                            //if we get here it means the agent was not found in one of the admins agents array\n                            //we check if the agent was found in the agents_in_focus  array\n\n                            var found_agent_in_focus_array = false\n\n                            agents_in_focus.map((agent_in_focus_id, ind) => {\n                                if(id === agent_in_focus_id){\n                                    Object.assign(agent, {status: \"infocus\"});\n                                    found_agent_in_focus_array = true;\n                                }\n\n                                if(ind === (agents_in_focus.length - 1)){ //this is the last index\n                                    if(!found_agent_in_focus_array){\n                                        //the agent was not found in the agents in focus array\n                                        Object.assign(agent.agent, {status: \"idle\"});\n                                    }\n\n                                    var new_laser_agents = laser_agents.map(laser_agent => {\n                                        if(laser_agent.agent._id === id){\n                                            return agent;\n                                        }\n                                        else{\n                                            return laser_agent;\n                                        }\n                                    })\n            \n                                    resolve(new_laser_agents);\n                                }\n                            })\n                        }\n                    })\n                }\n                else{\n                    //the monitoring grid is possibly empty\n                }\n            });\n        })\n    }*/\n\n    //All we are doing here is updting the location while inheriting the status\n    updateAgentLocation(agent, laser_agents, monitoring_grid, browser_admin_id){\n        return new Promise((resolve, reject) => {\n            parseLaserAgents(agent, laser_agents, monitoring_grid, browser_admin_id)\n                    .then(result => {\n                        resolve(result);\n                    })\n                    .catch(err => {\n                        reject(err);\n                    })\n        })\n    }\n\n    checkIfEmergencyMonitoredByOtherAdmin(monitoring_grid, emergency, browser_admin_id){\n        return new Promise((resolve, reject) => {\n            var found = false;\n            if(monitoring_grid && monitoring_grid.length > 0){\n                monitoring_grid.map((row, index) => {\n                    if(row){\n                        if(row.admin_id !== browser_admin_id){\n                            if(row.emergency._id === emergency._id){\n                                found = true;\n                            }\n                        }\n    \n                        if(index === (monitoring_grid.length - 1)){\n                            resolve(found);\n                        }\n                    }\n                })\n            }\n            else{\n                resolve(found);\n            }\n        })\n    }\n\n    setEmergencyOnMonitoringGrid(emergency, monitoring_grid, admin_id){ //to return a fresh monitoring grid\n        return new Promise((resolve,reject) => {\n            var found = false;\n\n            if(monitoring_grid && monitoring_grid.length > 0 ){\n                \n                var new_monitoring_grid = [];\n\n                monitoring_grid.map((row, index) => {\n                    if(row){\n                        \n                        if(row.admin_id === admin_id){\n                            found = true;\n\n                            row = {admin_id: admin_id, emergency: emergency, agents: row.agents};\n\n                            new_monitoring_grid.push(row);\n                        }\n                        else{\n                            new_monitoring_grid.push(row);\n                        }\n                        \n                        if(index === (monitoring_grid.length - 1)){\n                            if(!found){\n                                new_monitoring_grid.push({admin_id:admin_id, emergency: emergency, agents: []});\n                            }\n                            //we are at the final index\n                            resolve(new_monitoring_grid);\n                        }\n                    }\n                })\n            }\n            else{\n                monitoring_grid.push({admin_id: admin_id, emergency: emergency, agents: []});\n                \n                resolve(monitoring_grid);\n            }\n        })\n    }\n\n    setAgentOnMonitoringGridAndChangeAgentStatus(agent, monitoring_grid, admin_id, laser_agents){ //to return a fresh monitoring grid\n        return new Promise((resolve,reject) => {\n            var found = false;\n            \n            if(monitoring_grid.length > 0 ){\n                \n                var new_monitoring_grid = [];\n\n                monitoring_grid.map((row, index) => {\n                    if(row){\n                        if(row.admin_id === admin_id){\n                            found = true;\n\n                            if(row.agents.indexOf(agent.agent._id)===-1){\n                                //the agents id does not exist in the list of agents, so we add it\n                                row.agents.push(agent.agent._id);\n                            }\n\n                            new_monitoring_grid.push(row);\n                        }\n                        else{\n                            new_monitoring_grid.push(row);\n                        }\n                        \n                        if(index === (monitoring_grid.length - 1)){\n                            //we are at the final index\n                            //we change the status of the agent on the laser_agents array and return the laser_agents array as well\n                            for(var i = 0; i < laser_agents.length; i++){\n                                if(laser_agents[i].agent._id === agent.agent._id){\n                                    //we have found the agent to update\n                                    laser_agents[i].status = \"using\";\n                                    break;\n                                }\n                            }\n                           \n                            resolve([new_monitoring_grid, laser_agents]);\n                        }\n                    }\n                })\n            }\n            else{\n                resolve(monitoring_grid, laser_agents);\n            }\n        })\n    }\n\n    checkIfEmergencyMonitoredByBrowserAdmin(browser_admin_id, monitoring_grid){\n        //here we are just checking if the browser admin is actually monitoring an emergency\n\n        return new Promise((resolve,reject) => {\n            var monitoring = false;\n\n            if(monitoring_grid.length > 0){\n                monitoring_grid.map((row, index) => {\n                    if(row){\n                        if(row.admin_id === browser_admin_id){\n                            if(row.emergency){\n                                //yes we are monitoring an emergency\n                                monitoring = true;\n                            }\n                        }\n                        \n                        if(index === (monitoring_grid.length - 1)){\n                            //we are at the final index\n                            resolve(monitoring);\n                        }\n                    }\n                });\n            }\n            else{\n                resolve(monitoring);\n            }\n        })\n    }\n\n    setAgentsInFocus(agents_in_focus, emergency, laser_agents){\n        return new Promise((resolve,reject) => {\n\n            var new_laser_agents = [];\n\n            laser_agents.map((agent,index) => {\n                \n                if(agent.sub_admin_address && emergency.sub_admin_address && (agent.sub_admin_address === emergency.sub_admin_address)){\n                    //the agent is in the same subadmin address as the emergency\n                    //we check if the agent is being used by the current admin or anothe admin\n                    if(agent.status !== \"using\" && agent.status !== \"using_by_other\"){\n                        agent.status = \"infocus\"\n                    }\n\n                    if(agents_in_focus.indexOf(agent.agent._id)===-1){\n                        //agent is not in agents_in_focus array\n                        agents_in_focus.push(agent.agent._id);\n                    }\n\n                    new_laser_agents.push(agent);\n                    \n                }\n                else{\n                    new_laser_agents.push(agent);\n                }\n                \n                if(index === (laser_agents.length-1)){\n                    //last index\n                    resolve([new_laser_agents, agents_in_focus]);\n                }\n            })\n        })\n    }\n\n    checkIfOtherAdminIsUsingAgent(browser_admin_id, agent, monitoring_grid){\n        return new Promise((resolve,reject) => {\n            var found = false;\n    \n            if(monitoring_grid.length > 0){\n                for(var index = 0; index< monitoring_grid.length; index++){\n                    var row = monitoring_grid[0];\n    \n                    if(row){\n                        if(row.admin_id !== browser_admin_id){\n                            if(row.agents.indexOf(agent.agent._id) !== -1){\n                                found = true;\n    \n                                resolve(found);\n    \n                                break;\n                            }\n                        }\n                        \n                        if(index === (monitoring_grid.length - 1)){\n                            resolve(found);\n                        }\n                    }\n                }\n            }\n            else{\n                resolve(found);\n            }\n        })\n    }\n\n    getAdminEmergencyMonitored(browser_admin_id, monitoring_grid){\n        return new Promise((resolve,reject) => {\n            if(monitoring_grid.length > 0){\n                \n                for(var index = 0; index < monitoring_grid.length; index++){\n                    var row = monitoring_grid[index];\n    \n                    if(row){\n                        if(row.admin_id === browser_admin_id){\n                            resolve(row);\n                            break;\n                        }\n                        \n                        if(index === (monitoring_grid.length - 1)){\n                            resolve(null);\n                        }\n                    }\n                }\n            }\n            else{\n                resolve(null);\n            }\n        })\n    }\n\n    addAgentToListOfAssignedAgentsForPersistence(agent, assigned_agents_array){\n        if(assigned_agents_array && assigned_agents_array.length > 0 ){\n            var found  = false;\n\n            assigned_agents_array.map( (assigned_agent, index) => {\n                if(assigned_agent.agent._id === agent.agent._id){\n                    found = true;\n\n                    assigned_agents_array.splice(index, 1, agent);\n                }\n            })\n\n            if(!found){\n                assigned_agents_array.push(agent);\n            }\n        }\n        else{\n            assigned_agents_array = [];\n            assigned_agents_array.push(agent);\n        }\n\n        return assigned_agents_array;\n    }\n\n    removeAgentFromListOfAssignedAgentsForPersistsnce(agent, assigned_agents_array){\n        if(assigned_agents_array && assigned_agents_array.length > 0 ){\n            assigned_agents_array.map( (assigned_agent, index) => {\n                if(assigned_agent.agent._id === agent.agent._id){\n                    assigned_agents_array.splice(index, 1);\n                }\n            })\n\n        }\n        else{\n            assigned_agents_array = [];\n            assigned_agents_array.push(agent);\n        }\n\n        return assigned_agents_array;\n    }\n\n    reconcileAssignedAgentsListWithMonitoringGrid(browser_admin_id, assigned_agents_array, monitoring_grid){\n        return new Promise((resolve,reject) => {\n            var laser_agents = [];\n\n            if(monitoring_grid.length > 0){\n                var monitoring_grid_agents_list;\n                var new_assigned_agents_array = [];\n\n                for(var i = 0; i < monitoring_grid.length; i++){\n                    if(monitoring_grid[i].admin_id === browser_admin_id){\n                        monitoring_grid_agents_list = monitoring_grid[i].agents.concat([])\n                        break;\n                    }\n                }\n               \n                //we have our agents from the monitoring grid\n                if(monitoring_grid_agents_list && monitoring_grid_agents_list.length > 0){\n                    //there are agents in the monitoring grid for the admin, meaning agents were assigned\n                    assigned_agents_array.map(assigned_agent => {\n                        if(monitoring_grid_agents_list.indexOf(assigned_agent.agent._id) !== -1){\n                            //means the assigned agent is present in the monitoring grid. The agent is good to proceed into the laser_agents array\n                            laser_agents.push(assigned_agent);\n                            new_assigned_agents_array.push(assigned_agent);\n                        }\n                    })\n\n                    resolve([new_assigned_agents_array, laser_agents])\n                }\n                else{\n                    laser_agents = [];\n\n                    resolve([new_assigned_agents_array, laser_agents]);\n                }\n            }\n            else{\n                resolve([assigned_agents_array, laser_agents])\n            }\n        })\n    }\n\n\n    reconcileAllAgentsWithMonitoringGrid(laser_agents, monitoring_grid, browser_admin_id){\n        return new Promise((resolve,reject) => {\n            var new_laser_agents = [];\n\n            if(laser_agents.length > 0){\n                laser_agents.map((laser_agent, index) => {\n                    checkWhoIsUsingTheAgent(browser_admin_id, laser_agent, monitoring_grid)\n                            .then(who => {\n                                var new_agent = Object.assign(laser_agent, {status:who});\n\n                                new_laser_agents.push(new_agent);\n\n                                if(index === (laser_agents.length - 1)){\n                                    resolve(new_laser_agents);\n                                }\n                            })\n                            .catch(err => {\n                                new_laser_agents.push(laser_agent);\n\n                                if(index === (laser_agents.length - 1)){\n                                    resolve(new_laser_agents);\n                                }\n                            })\n                })\n            }\n            else{\n                resolve([]);\n            }\n        })\n    }\n\n    removeAgentFromBrowserAdminMonitoringGrid(agent, browser_admin_id, monitoring_grid, laser_agents){\n        return new Promise((resolve,reject) => {\n            if(monitoring_grid.length > 0){\n                var new_monitoring_grid = [];\n\n                for(var i = 0; i < monitoring_grid.length; i++){\n                    if(monitoring_grid[i].admin_id === browser_admin_id){\n                        if(monitoring_grid[i].agents.indexOf(agent.agent._id) !== -1){\n                            monitoring_grid[i].agents.splice(monitoring_grid[i].agents.indexOf(agent.agent._id),1);\n                        }\n\n                        new_monitoring_grid.push(monitoring_grid[i]);\n\n                        if(laser_agents.length > 0){\n                            for(var j = 0; j < laser_agents.length; j++){\n                                if(laser_agents[j].agent._id === agent.agent._id){\n                                    agent.status = \"idle\"\n                                    laser_agents.splice(j, 1, agent);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else{\n                        new_monitoring_grid.push(monitoring_grid[i]);\n                    }\n\n                    if(i === (monitoring_grid.length - 1)){\n                        resolve([new_monitoring_grid, laser_agents]);\n                    }\n                }\n               \n            }\n            else{\n                resolve([monitoring_grid, laser_agents]);\n            }\n        })\n    }\n\n    getAgentFromAssignedAgentsInPersistence(assigned_agents_list, agent_id){\n        return new Promise((resolve, reject) => {\n            for(var i = 0; i < assigned_agents_list.length; i++){\n                if(assigned_agents_list[i].agent._id === agent_id){\n                    resolve(assigned_agents_list[i]);\n                    break;\n                }\n            }\n\n            resolve(null);\n        })\n    }\n\n}\n\nfunction parseLaserAgents(agent, laser_agents, monitoring_grid, browser_admin_id){\n    return new Promise((resolve, reject) =>{\n        var agent_found = false;\n\n        var new_laser_agents = [];\n\n        if(laser_agents.length === 0){\n\n            checkWhoIsUsingTheAgent(browser_admin_id, agent, monitoring_grid)\n                        .then(stat => {\n                            var new_agent = Object.assign(agent, {status: stat});\n    \n                            new_laser_agents.push(new_agent);\n\n                            resolve(new_laser_agents);\n                        })\n                        .catch(err => {\n                            var new_agent = Object.assign(agent, {status: \"idle\"});\n    \n                            new_laser_agents.push(new_agent);\n\n                            resolve(new_laser_agents);\n                        })\n        }\n        else{\n            laser_agents.map((laser_agent,index) => {\n                if(laser_agent.agent._id === agent.agent._id){\n                    agent_found = true;\n    \n                    var new_agent = Object.assign(agent, {status:laser_agent.status}); //inherit the status\n    \n                    new_laser_agents.push(new_agent);\n                }\n                else{\n                    new_laser_agents.push(laser_agent);\n                }\n    \n                if(index === (laser_agents.length-1)){\n                    //we are on the last index\n                    \n                    if(agent_found){\n                        checkWhoIsUsingTheAgent(browser_admin_id, agent, monitoring_grid)\n                                .then(stat => {\n                                    var new_agent = Object.assign(agent, {status: stat});\n            \n                                    new_laser_agents.push(new_agent);\n\n                                    resolve(new_laser_agents);\n                                })\n                                .catch(err => {\n                                    var new_agent = Object.assign(agent, {status: \"idle\"});\n            \n                                    new_laser_agents.push(new_agent);\n\n                                    resolve(new_laser_agents);\n                                })\n                    }\n                    else{\n                        resolve(new_laser_agents)\n                    }\n                }\n            })\n        }\n    })\n}\n\nfunction checkWhoIsUsingTheAgent(browser_admin_id, agent, monitoring_grid){\n    return new Promise((resolve, reject) => {\n        var status = \"idle\";\n        if(monitoring_grid.length > 0){\n            for(var index = 0; index < monitoring_grid.length; index++){\n                var row = monitoring_grid[index];\n\n                if(row){\n                    if(row.admin_id === browser_admin_id){\n                        //admins row\n                        if(row.agents.indexOf(agent.agent._id) !== -1){\n                            resolve(\"using\")\n                            break;\n                        }\n                    }\n                    else{\n                        //other admins row\n                        if(row.agents.indexOf(agent.agent._id) !== -1){\n                            resolve(\"using_by_other\");\n                            break;\n                        }\n                    }\n\n                    if(index === (monitoring_grid.length - 1)){\n                        resolve(status);\n                    }\n                }\n            }\n        }\n        else{\n            resolve(status);\n        }\n    })\n}\n","/Users/user/laser/laser_dashboard_frontend/client/src/api/Api.js",[],[],"/Users/user/laser/laser_dashboard_frontend/client/src/utils/Persistence.js",[],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/EditAgent.js",[],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/EditAdmin.js",["253","254"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/AddAdmin.js",["255","256"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/AddAgent.js",["257","258"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/Agent.js",["259"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/Department.js",["260"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/AddDepartment.js",["261","262"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/agents/Admin.js",["263"],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/Text.js",[],[],"/Users/user/laser/laser_dashboard_frontend/client/src/components/LatestItem.js",[],[],{"ruleId":"264","severity":1,"message":"265","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":11},{"ruleId":"268","severity":1,"message":"269","line":53,"column":32,"nodeType":"270","messageId":"271","endLine":53,"endColumn":34},{"ruleId":"264","severity":1,"message":"272","line":1,"column":8,"nodeType":"266","messageId":"267","endLine":1,"endColumn":12},{"ruleId":"264","severity":1,"message":"273","line":7,"column":26,"nodeType":"266","messageId":"267","endLine":7,"endColumn":35},{"ruleId":"264","severity":1,"message":"274","line":26,"column":8,"nodeType":"266","messageId":"267","endLine":26,"endColumn":13},{"ruleId":"264","severity":1,"message":"275","line":33,"column":8,"nodeType":"266","messageId":"267","endLine":33,"endColumn":23},{"ruleId":"264","severity":1,"message":"276","line":42,"column":8,"nodeType":"266","messageId":"267","endLine":42,"endColumn":13},{"ruleId":"264","severity":1,"message":"277","line":68,"column":5,"nodeType":"266","messageId":"267","endLine":68,"endColumn":16},{"ruleId":"278","severity":1,"message":"279","line":164,"column":8,"nodeType":"280","endLine":164,"endColumn":10,"suggestions":"281"},{"ruleId":"282","severity":1,"message":"283","line":498,"column":14,"nodeType":"266","messageId":"284","endLine":498,"endColumn":20},{"ruleId":"285","severity":1,"message":"286","line":509,"column":13,"nodeType":"287","messageId":"288","endLine":539,"endColumn":14},{"ruleId":"289","severity":1,"message":"290","line":525,"column":17,"nodeType":"291","messageId":"292","endLine":538,"endColumn":27},{"ruleId":"264","severity":1,"message":"293","line":557,"column":14,"nodeType":"266","messageId":"267","endLine":557,"endColumn":40},{"ruleId":"264","severity":1,"message":"294","line":604,"column":27,"nodeType":"266","messageId":"267","endLine":604,"endColumn":33},{"ruleId":"264","severity":1,"message":"294","line":786,"column":35,"nodeType":"266","messageId":"267","endLine":786,"endColumn":41},{"ruleId":"264","severity":1,"message":"295","line":983,"column":7,"nodeType":"266","messageId":"267","endLine":983,"endColumn":27},{"ruleId":"264","severity":1,"message":"296","line":987,"column":7,"nodeType":"266","messageId":"267","endLine":987,"endColumn":31},{"ruleId":"285","severity":1,"message":"286","line":1250,"column":9,"nodeType":"287","messageId":"288","endLine":1285,"endColumn":10},{"ruleId":"264","severity":1,"message":"297","line":1338,"column":15,"nodeType":"266","messageId":"267","endLine":1338,"endColumn":19},{"ruleId":"298","severity":1,"message":"299","line":1368,"column":45,"nodeType":"300","messageId":"301","endLine":1368,"endColumn":47},{"ruleId":"264","severity":1,"message":"297","line":1412,"column":15,"nodeType":"266","messageId":"267","endLine":1412,"endColumn":19},{"ruleId":"298","severity":1,"message":"299","line":1441,"column":47,"nodeType":"300","messageId":"301","endLine":1441,"endColumn":49},{"ruleId":"298","severity":1,"message":"299","line":1443,"column":43,"nodeType":"300","messageId":"301","endLine":1443,"endColumn":45},{"ruleId":"285","severity":1,"message":"286","line":1614,"column":9,"nodeType":"287","messageId":"288","endLine":1663,"endColumn":10},{"ruleId":"285","severity":1,"message":"286","line":1616,"column":17,"nodeType":"287","messageId":"288","endLine":1629,"endColumn":18},{"ruleId":"302","severity":1,"message":"303","line":1619,"column":21,"nodeType":"304","messageId":"305","endLine":1619,"endColumn":27},{"ruleId":"302","severity":1,"message":"303","line":1622,"column":21,"nodeType":"304","messageId":"305","endLine":1622,"endColumn":27},{"ruleId":"302","severity":1,"message":"303","line":1625,"column":21,"nodeType":"304","messageId":"305","endLine":1625,"endColumn":27},{"ruleId":"302","severity":1,"message":"303","line":1628,"column":21,"nodeType":"304","messageId":"305","endLine":1628,"endColumn":27},{"ruleId":"285","severity":1,"message":"286","line":1632,"column":17,"nodeType":"287","messageId":"288","endLine":1645,"endColumn":18},{"ruleId":"302","severity":1,"message":"303","line":1635,"column":21,"nodeType":"304","messageId":"305","endLine":1635,"endColumn":27},{"ruleId":"302","severity":1,"message":"303","line":1638,"column":21,"nodeType":"304","messageId":"305","endLine":1638,"endColumn":27},{"ruleId":"302","severity":1,"message":"303","line":1641,"column":21,"nodeType":"304","messageId":"305","endLine":1641,"endColumn":27},{"ruleId":"302","severity":1,"message":"303","line":1644,"column":21,"nodeType":"304","messageId":"305","endLine":1644,"endColumn":27},{"ruleId":"285","severity":1,"message":"286","line":1648,"column":17,"nodeType":"287","messageId":"288","endLine":1661,"endColumn":18},{"ruleId":"302","severity":1,"message":"303","line":1651,"column":21,"nodeType":"304","messageId":"305","endLine":1651,"endColumn":27},{"ruleId":"302","severity":1,"message":"303","line":1654,"column":21,"nodeType":"304","messageId":"305","endLine":1654,"endColumn":27},{"ruleId":"302","severity":1,"message":"303","line":1657,"column":21,"nodeType":"304","messageId":"305","endLine":1657,"endColumn":27},{"ruleId":"302","severity":1,"message":"303","line":1660,"column":21,"nodeType":"304","messageId":"305","endLine":1660,"endColumn":27},{"ruleId":"268","severity":1,"message":"269","line":1671,"column":16,"nodeType":"270","messageId":"271","endLine":1671,"endColumn":18},{"ruleId":"268","severity":1,"message":"269","line":1727,"column":16,"nodeType":"270","messageId":"271","endLine":1727,"endColumn":18},{"ruleId":"264","severity":1,"message":"306","line":1778,"column":7,"nodeType":"266","messageId":"267","endLine":1778,"endColumn":32},{"ruleId":"264","severity":1,"message":"307","line":1898,"column":7,"nodeType":"266","messageId":"267","endLine":1898,"endColumn":32},{"ruleId":"264","severity":1,"message":"308","line":1909,"column":7,"nodeType":"266","messageId":"267","endLine":1909,"endColumn":22},{"ruleId":"264","severity":1,"message":"309","line":1966,"column":7,"nodeType":"266","messageId":"267","endLine":1966,"endColumn":41},{"ruleId":"268","severity":1,"message":"269","line":1978,"column":18,"nodeType":"270","messageId":"271","endLine":1978,"endColumn":20},{"ruleId":"268","severity":1,"message":"269","line":2037,"column":16,"nodeType":"270","messageId":"271","endLine":2037,"endColumn":18},{"ruleId":"268","severity":1,"message":"269","line":2078,"column":16,"nodeType":"270","messageId":"271","endLine":2078,"endColumn":18},{"ruleId":"268","severity":1,"message":"269","line":51,"column":26,"nodeType":"270","messageId":"271","endLine":51,"endColumn":28},{"ruleId":"264","severity":1,"message":"310","line":6,"column":8,"nodeType":"266","messageId":"267","endLine":6,"endColumn":17},{"ruleId":"264","severity":1,"message":"311","line":6,"column":8,"nodeType":"266","messageId":"267","endLine":6,"endColumn":17},{"ruleId":"298","severity":1,"message":"299","line":115,"column":39,"nodeType":"300","messageId":"301","endLine":115,"endColumn":41},{"ruleId":"268","severity":1,"message":"269","line":121,"column":28,"nodeType":"270","messageId":"271","endLine":121,"endColumn":30},{"ruleId":"282","severity":1,"message":"312","line":128,"column":17,"nodeType":"266","messageId":"284","endLine":128,"endColumn":22},{"ruleId":"264","severity":1,"message":"313","line":7,"column":7,"nodeType":"266","messageId":"267","endLine":7,"endColumn":12},{"ruleId":"264","severity":1,"message":"314","line":9,"column":7,"nodeType":"266","messageId":"267","endLine":9,"endColumn":11},{"ruleId":"285","severity":1,"message":"286","line":12,"column":5,"nodeType":"287","messageId":"288","endLine":33,"endColumn":6},{"ruleId":"285","severity":1,"message":"286","line":57,"column":5,"nodeType":"287","messageId":"288","endLine":66,"endColumn":6},{"ruleId":"264","severity":1,"message":"315","line":5,"column":8,"nodeType":"266","messageId":"267","endLine":5,"endColumn":19},{"ruleId":"264","severity":1,"message":"316","line":6,"column":8,"nodeType":"266","messageId":"267","endLine":6,"endColumn":19},{"ruleId":"317","severity":1,"message":"318","line":42,"column":196,"nodeType":"319","endLine":42,"endColumn":243},{"ruleId":"317","severity":1,"message":"318","line":45,"column":200,"nodeType":"319","endLine":45,"endColumn":255},{"ruleId":"317","severity":1,"message":"318","line":48,"column":202,"nodeType":"319","endLine":48,"endColumn":251},{"ruleId":"317","severity":1,"message":"318","line":83,"column":135,"nodeType":"319","endLine":83,"endColumn":177},{"ruleId":"264","severity":1,"message":"320","line":5,"column":8,"nodeType":"266","messageId":"267","endLine":5,"endColumn":17},{"ruleId":"298","severity":1,"message":"299","line":147,"column":50,"nodeType":"300","messageId":"301","endLine":147,"endColumn":52},{"ruleId":"298","severity":1,"message":"299","line":175,"column":50,"nodeType":"300","messageId":"301","endLine":175,"endColumn":52},{"ruleId":"264","severity":1,"message":"321","line":209,"column":17,"nodeType":"266","messageId":"267","endLine":209,"endColumn":22},{"ruleId":"298","severity":1,"message":"299","line":215,"column":50,"nodeType":"300","messageId":"301","endLine":215,"endColumn":52},{"ruleId":"298","severity":1,"message":"299","line":260,"column":50,"nodeType":"300","messageId":"301","endLine":260,"endColumn":52},{"ruleId":"298","severity":1,"message":"299","line":287,"column":44,"nodeType":"300","messageId":"301","endLine":287,"endColumn":46},{"ruleId":"298","severity":1,"message":"299","line":376,"column":64,"nodeType":"300","messageId":"301","endLine":376,"endColumn":66},{"ruleId":"298","severity":1,"message":"299","line":398,"column":64,"nodeType":"300","messageId":"301","endLine":398,"endColumn":66},{"ruleId":"298","severity":1,"message":"299","line":431,"column":62,"nodeType":"300","messageId":"301","endLine":431,"endColumn":64},{"ruleId":"298","severity":1,"message":"299","line":459,"column":55,"nodeType":"300","messageId":"301","endLine":459,"endColumn":57},{"ruleId":"298","severity":1,"message":"299","line":564,"column":50,"nodeType":"300","messageId":"301","endLine":564,"endColumn":52},{"ruleId":"264","severity":1,"message":"322","line":6,"column":8,"nodeType":"266","messageId":"267","endLine":6,"endColumn":14},{"ruleId":"268","severity":1,"message":"269","line":126,"column":20,"nodeType":"270","messageId":"271","endLine":126,"endColumn":22},{"ruleId":"264","severity":1,"message":"322","line":6,"column":8,"nodeType":"266","messageId":"267","endLine":6,"endColumn":14},{"ruleId":"268","severity":1,"message":"269","line":126,"column":20,"nodeType":"270","messageId":"271","endLine":126,"endColumn":22},{"ruleId":"264","severity":1,"message":"322","line":6,"column":8,"nodeType":"266","messageId":"267","endLine":6,"endColumn":14},{"ruleId":"268","severity":1,"message":"269","line":118,"column":20,"nodeType":"270","messageId":"271","endLine":118,"endColumn":22},{"ruleId":"264","severity":1,"message":"323","line":1,"column":16,"nodeType":"266","messageId":"267","endLine":1,"endColumn":25},{"ruleId":"264","severity":1,"message":"323","line":1,"column":16,"nodeType":"266","messageId":"267","endLine":1,"endColumn":25},{"ruleId":"264","severity":1,"message":"322","line":6,"column":8,"nodeType":"266","messageId":"267","endLine":6,"endColumn":14},{"ruleId":"268","severity":1,"message":"269","line":55,"column":24,"nodeType":"270","messageId":"271","endLine":55,"endColumn":26},{"ruleId":"264","severity":1,"message":"323","line":1,"column":16,"nodeType":"266","messageId":"267","endLine":1,"endColumn":25},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'logo' is defined but never used.","'usePubNub' is defined but never used.","'alert' is defined but never used.","'LocationSidebar' is defined but never used.","'Sound' is defined but never used.","'todays_date' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadPubnub', 'loadShit', 'loadSocketIO', and 'mapDetails'. Either include them or remove the dependency array. You can also do a functional update 'setMapDetails(m => ...)' if you only need 'mapDetails' in the 'setMapDetails' call.","ArrayExpression",["324"],"no-redeclare","'logout' is already defined.","redeclared","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'showConfirmResolveLocation' is defined but never used.","'result' is assigned a value but never used.","'getSelectedAgentsIds' is assigned a value but never used.","'setSelectedAgentsFromIds' is assigned a value but never used.","'name' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'handleSongFinishedPlaying' is assigned a value but never used.","'showConfirmManualLocation' is assigned a value but never used.","'tryAgainClicked' is assigned a value but never used.","'closeConfirmAddressNotFoundClicked' is assigned a value but never used.","'EditAdmin' is defined but never used.","'EditAgent' is defined but never used.","'error' is already defined.","'utils' is assigned a value but never used.","'Auth' is assigned a value but never used.","'burger_menu' is defined but never used.","'phone_white' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'BarLoader' is defined but never used.","'found' is assigned a value but never used.","'Action' is defined but never used.","'Component' is defined but never used.",{"desc":"325","fix":"326"},"Update the dependencies array to be: [loadPubnub, loadShit, loadSocketIO, mapDetails]",{"range":"327","text":"328"},[4974,4976],"[loadPubnub, loadShit, loadSocketIO, mapDetails]"]